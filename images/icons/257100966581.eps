%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Line_8-Template_166215824640.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 710 827
%%HiResBoundingBox: 0 0 709.3340 826.2188
%%CropBox: 0 0 709.3340 826.2188
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Computer 25 OutLine icon pack  Such As . Layer 1. laptop. pc. device</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Creative Computer 25 OutLine icon pack  Such As . Layer 1. laptop. pc. device</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>computer</rdf:li>
               <rdf:li> monitor</rdf:li>
               <rdf:li> device</rdf:li>
               <rdf:li> imac</rdf:li>
               <rdf:li> pc</rdf:li>
               <rdf:li> computer</rdf:li>
               <rdf:li> monitor</rdf:li>
               <rdf:li> device</rdf:li>
               <rdf:li> laptop</rdf:li>
               <rdf:li> flip</rdf:li>
               <rdf:li> computer</rdf:li>
               <rdf:li> monitor</rdf:li>
               <rdf:li> device</rdf:li>
               <rdf:li> keyboard</rdf:li>
               <rdf:li> pc</rdf:li>
               <rdf:li> Layer 1</rdf:li>
               <rdf:li> 177</rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
               <rdf:li> </rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T17:55:09+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T17:55:09+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T17:55:09+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>220</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADcAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FUHqrX62qGwFZ/rFsHGx/cm4jE5+Lwh5/wAN8VYfql3+ZY0a7ezhk/Sn6QlRUSO0ZUs1Ev1drcPI&#xA;ocOwh9QyNyAZqAUw7I3R91c/mGk+pCC3gkU2Ekmmj4QovkihpG1WBZGkaThUjoeRA44rug7S8/Mg&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:A41500B2C077ED11AC5B90F9F6F049F2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:A41500B2C077ED11AC5B90F9F6F049F2</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:39609851-9c5d-3549-883b-965f369a1303</stRef:instanceID>
            <stRef:documentID>xmp.did:39609851-9c5d-3549-883b-965f369a1303</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:304a2dca-86d8-ed4d-81af-2e8a745e790f</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:27:30+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d2c71f28-7c66-d04b-b8c3-1ac6f9bcf012</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:29:56+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:39609851-9c5d-3549-883b-965f369a1303</stEvt:instanceID>
                  <stEvt:when>2022-09-06T05:18:03-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.5 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A41500B2C077ED11AC5B90F9F6F049F2</stEvt:instanceID>
                  <stEvt:when>2022-12-09T17:55:09+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>709.333984</stDim:w>
            <stDim:h>826.218750</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -826.219 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 826.219 li
709.334 826.219 li
709.334 0 li
cp
clp
709.334 826.219 mo
0 826.219 li
0 0 li
709.334 0 li
709.334 826.219 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
559.334 391.295 mo
659.334 391.295 li
659.334 491.295 li
559.334 491.295 li
559.334 391.295 li
cp
1 1 1 rgb
f
432 391.295 mo
532 391.295 li
532 491.295 li
432 491.295 li
432 391.295 li
cp
f
304.667 391.295 mo
404.667 391.295 li
404.667 491.295 li
304.667 491.295 li
304.667 391.295 li
cp
f
177.334 391.295 mo
277.334 391.295 li
277.334 491.295 li
177.334 491.295 li
177.334 391.295 li
cp
f
50 391.295 mo
150 391.295 li
150 491.295 li
50 491.295 li
50 391.295 li
cp
f
559.334 520.113 mo
659.334 520.113 li
659.334 620.113 li
559.334 620.113 li
559.334 520.113 li
cp
f
432 520.113 mo
532 520.113 li
532 620.113 li
432 620.113 li
432 520.113 li
cp
f
304.667 520.113 mo
404.667 520.113 li
404.667 620.113 li
304.667 620.113 li
304.667 520.113 li
cp
f
177.334 520.113 mo
277.334 520.113 li
277.334 620.113 li
177.334 620.113 li
177.334 520.113 li
cp
f
50 520.113 mo
150 520.113 li
150 620.113 li
50 620.113 li
50 520.113 li
cp
f
559.334 262.477 mo
659.334 262.477 li
659.334 362.477 li
559.334 362.477 li
559.334 262.477 li
cp
f
432 262.477 mo
532 262.477 li
532 362.477 li
432 362.477 li
432 262.477 li
cp
f
304.667 262.477 mo
404.667 262.477 li
404.667 362.477 li
304.667 362.477 li
304.667 262.477 li
cp
f
177.334 262.477 mo
277.334 262.477 li
277.334 362.477 li
177.334 362.477 li
177.334 262.477 li
cp
f
50 262.477 mo
150 262.477 li
150 362.477 li
50 362.477 li
50 262.477 li
cp
f
559.334 133.658 mo
659.334 133.658 li
659.334 233.658 li
559.334 233.658 li
559.334 133.658 li
cp
f
432 133.658 mo
532 133.658 li
532 233.658 li
432 233.658 li
432 133.658 li
cp
f
304.667 133.658 mo
404.667 133.658 li
404.667 233.658 li
304.667 233.658 li
304.667 133.658 li
cp
f
177.334 133.658 mo
277.334 133.658 li
277.334 233.658 li
177.334 233.658 li
177.334 133.658 li
cp
f
50 133.658 mo
150 133.658 li
150 233.658 li
50 233.658 li
50 133.658 li
cp
f
559.334 648.932 mo
659.334 648.932 li
659.334 748.932 li
559.334 748.932 li
559.334 648.932 li
cp
f
432 648.932 mo
532 648.932 li
532 748.932 li
432 748.932 li
432 648.932 li
cp
f
304.667 648.932 mo
404.667 648.932 li
404.667 748.932 li
304.667 748.932 li
304.667 648.932 li
cp
f
177.334 648.932 mo
277.334 648.932 li
277.334 748.932 li
177.334 748.932 li
177.334 648.932 li
cp
f
50 648.932 mo
150 648.932 li
150 748.932 li
50 748.932 li
50 648.932 li
cp
f
559.334 776.219 mo
659.334 776.219 li
659.334 770.495 li
559.334 770.495 li
559.334 776.219 li
cp
.968627 .733333 .25098 rgb
f
432 776.219 mo
532 776.219 li
532 770.495 li
432 770.495 li
432 776.219 li
cp
.980392 .623529 .235294 rgb
f
304.667 776.219 mo
404.667 776.219 li
404.667 770.495 li
304.667 770.495 li
304.667 776.219 li
cp
.796078 .278431 .611765 rgb
f
177.334 776.219 mo
277.334 776.219 li
277.334 770.495 li
177.334 770.495 li
177.334 776.219 li
cp
.494118 .407843 .776471 rgb
f
50 776.219 mo
150 776.219 li
150 770.495 li
50 770.495 li
50 776.219 li
cp
.168627 .74902 .909804 rgb
f
277.67 52.0879 mo
302.766 52.0879 li
302.766 55.2119 li
277.67 55.2119 li
277.67 52.0879 li
cp
f
309.896 52.0879 mo
334.989 52.0879 li
334.989 55.2119 li
309.896 55.2119 li
309.896 52.0879 li
cp
.494118 .407843 .776471 rgb
f
342.119 52.0879 mo
367.213 52.0879 li
367.213 55.2119 li
342.119 55.2119 li
342.119 52.0879 li
cp
.796078 .278431 .611765 rgb
f
374.344 52.0879 mo
399.438 52.0879 li
399.438 55.2119 li
374.344 55.2119 li
374.344 52.0879 li
cp
.980392 .623529 .235294 rgb
f
406.568 52.0879 mo
431.662 52.0879 li
431.662 55.2119 li
406.568 55.2119 li
406.568 52.0879 li
cp
.968627 .733333 .25098 rgb
f
280.459 33.8052 mo
280.459 45.334 li
278.971 45.334 li
278.971 33.8052 li
280.459 33.8052 li
cp
.164706 .223529 .258824 rgb
f
295.395 44.9575 mo
294.847 45.2314 293.752 45.5049 292.35 45.5049 cv
289.1 45.5049 286.653 43.4526 286.653 39.6724 cv
286.653 36.063 289.1 33.6172 292.675 33.6172 cv
294.111 33.6172 295.018 33.9248 295.411 34.1304 cv
295.052 35.3447 li
294.487 35.0708 293.684 34.8657 292.726 34.8657 cv
290.023 34.8657 288.228 36.5933 288.228 39.6211 cv
288.228 42.4434 289.853 44.2563 292.657 44.2563 cv
293.564 44.2563 294.487 44.0684 295.087 43.7773 cv
295.395 44.9575 li
cp
f
302.087 39.6382 mo
302.087 42.1011 303.421 44.3076 305.765 44.3076 cv
308.125 44.3076 309.459 42.1353 309.459 39.5181 cv
309.459 37.2261 308.262 34.8315 305.781 34.8315 cv
303.318 34.8315 302.087 37.1064 302.087 39.6382 cv
cp
311.032 39.4497 mo
311.032 43.418 308.621 45.522 305.679 45.522 cv
302.634 45.522 300.496 43.1616 300.496 39.6724 cv
300.496 36.0117 302.771 33.6172 305.85 33.6172 cv
308.997 33.6172 311.032 36.0288 311.032 39.4497 cv
cp
f
317.247 45.334 mo
317.247 33.8052 li
318.872 33.8052 li
322.566 39.6382 li
323.422 40.9893 324.089 42.2036 324.637 43.3838 cv
324.671 43.3667 li
324.534 41.8276 324.5 40.4248 324.5 38.6289 cv
324.5 33.8052 li
325.902 33.8052 li
325.902 45.334 li
324.396 45.334 li
320.736 39.4839 li
319.933 38.2012 319.163 36.8843 318.581 35.6353 cv
318.53 35.6523 li
318.615 37.1064 318.649 38.4922 318.649 40.4077 cv
318.649 45.334 li
317.247 45.334 li
cp
f
333.689 39.6382 mo
333.689 42.1011 335.023 44.3076 337.367 44.3076 cv
339.728 44.3076 341.063 42.1353 341.063 39.5181 cv
341.063 37.2261 339.864 34.8315 337.385 34.8315 cv
334.921 34.8315 333.689 37.1064 333.689 39.6382 cv
cp
342.636 39.4497 mo
342.636 43.418 340.224 45.522 337.282 45.522 cv
334.237 45.522 332.099 43.1616 332.099 39.6724 cv
332.099 36.0117 334.374 33.6172 337.453 33.6172 cv
340.601 33.6172 342.636 36.0288 342.636 39.4497 cv
cp
f
357.625 44.8208 mo
356.958 45.0605 355.641 45.4536 354.084 45.4536 cv
352.34 45.4536 350.902 45.0088 349.773 43.9312 cv
348.781 42.9736 348.166 41.4341 348.166 39.6382 cv
348.183 36.1997 350.543 33.6855 354.409 33.6855 cv
355.743 33.6855 356.787 33.9761 357.283 34.2158 cv
356.924 35.4302 li
356.308 35.1563 355.538 34.9341 354.375 34.9341 cv
351.569 34.9341 349.739 36.6787 349.739 39.5693 cv
349.739 42.4946 351.501 44.2222 354.187 44.2222 cv
355.162 44.2222 355.829 44.0854 356.171 43.9141 cv
356.171 40.4761 li
353.827 40.4761 li
353.827 39.2788 li
357.625 39.2788 li
357.625 44.8208 li
cp
f
365.669 39.2104 mo
367.191 39.2104 li
368.782 39.2104 369.792 38.3379 369.792 37.021 cv
369.792 35.5327 368.714 34.8828 367.141 34.8657 cv
366.422 34.8657 365.909 34.9341 365.669 35.0024 cv
365.669 39.2104 li
cp
364.181 33.959 mo
364.934 33.8052 366.012 33.7197 367.038 33.7197 cv
368.629 33.7197 369.654 34.0103 370.373 34.6602 cv
370.955 35.1733 371.279 35.9604 371.279 36.8496 cv
371.279 38.3721 370.322 39.3813 369.107 39.792 cv
369.107 39.8433 li
369.997 40.1514 370.527 40.9722 370.801 42.1694 cv
371.177 43.7773 371.451 44.8892 371.69 45.334 cv
370.15 45.334 li
369.963 45.0088 369.706 44.0171 369.381 42.5801 cv
369.039 40.9893 368.423 40.3906 367.072 40.3394 cv
365.669 40.3394 li
365.669 45.334 li
364.181 45.334 li
364.181 33.959 li
cp
f
383.395 40.5444 mo
382.266 37.2261 li
382.009 36.4736 381.838 35.7896 381.667 35.1221 cv
381.632 35.1221 li
381.461 35.8066 381.273 36.5078 381.051 37.209 cv
379.922 40.5444 li
383.395 40.5444 li
cp
379.614 41.7075 mo
378.417 45.334 li
376.877 45.334 li
380.794 33.8052 li
382.59 33.8052 li
386.524 45.334 li
384.934 45.334 li
383.702 41.7075 li
379.614 41.7075 li
cp
f
393.986 39.501 mo
394.312 39.5869 394.722 39.6211 395.218 39.6211 cv
397.015 39.6211 398.109 38.7485 398.109 37.1577 cv
398.109 35.6353 397.031 34.8999 395.39 34.8999 cv
394.739 34.8999 394.243 34.9512 393.986 35.0195 cv
393.986 39.501 li
cp
392.498 33.9419 mo
393.217 33.8223 394.157 33.7197 395.355 33.7197 cv
396.826 33.7197 397.903 34.0615 398.588 34.6777 cv
399.221 35.2251 399.597 36.063 399.597 37.0894 cv
399.597 38.1328 399.289 38.9536 398.708 39.5522 cv
397.921 40.3906 396.638 40.8184 395.184 40.8184 cv
394.739 40.8184 394.329 40.8013 393.986 40.7158 cv
393.986 45.334 li
392.498 45.334 li
392.498 33.9419 li
cp
f
407.367 33.8052 mo
407.367 38.6289 li
412.943 38.6289 li
412.943 33.8052 li
414.449 33.8052 li
414.449 45.334 li
412.943 45.334 li
412.943 39.9287 li
407.367 39.9287 li
407.367 45.334 li
405.879 45.334 li
405.879 33.8052 li
407.367 33.8052 li
cp
f
423.759 45.334 mo
423.759 40.4419 li
420.115 33.8052 li
421.81 33.8052 li
423.434 36.9868 li
423.879 37.8589 424.221 38.5605 424.58 39.3643 cv
424.614 39.3643 li
424.939 38.6118 425.333 37.8589 425.777 36.9868 cv
427.437 33.8052 li
429.13 33.8052 li
425.265 40.4248 li
425.265 45.334 li
423.759 45.334 li
cp
f
309.549 71.1421 mo
307.941 71.1421 306.678 71.7119 305.757 72.8511 cv
304.836 73.9902 304.376 75.5625 304.376 77.5674 cv
304.376 79.6665 304.819 81.2539 305.705 82.3306 cv
306.59 83.4072 307.872 83.9458 309.549 83.9458 cv
310.274 83.9458 310.977 83.8735 311.656 83.729 cv
312.334 83.585 313.041 83.3999 313.774 83.1733 cv
313.774 85.5723 li
312.432 86.0796 310.911 86.333 309.209 86.333 cv
306.705 86.333 304.782 85.5747 303.44 84.0571 cv
302.098 82.5396 301.427 80.3687 301.427 77.5439 cv
301.427 75.7651 301.752 74.2085 302.404 72.8745 cv
303.056 71.54 303.998 70.5181 305.23 69.8081 cv
306.463 69.0981 307.911 68.7432 309.572 68.7432 cv
311.32 68.7432 312.935 69.1099 314.417 69.8433 cv
313.411 72.1724 li
312.833 71.8989 312.223 71.6592 311.58 71.4521 cv
310.936 71.2456 310.259 71.1421 309.549 71.1421 cv
cp
f
318.269 79.604 mo
318.269 82.5923 319.373 84.0859 321.581 84.0859 cv
323.766 84.0859 324.858 82.5923 324.858 79.604 cv
324.858 76.647 323.758 75.168 321.558 75.168 cv
320.403 75.168 319.566 75.5508 319.047 76.3149 cv
318.528 77.0801 318.269 78.1758 318.269 79.604 cv
cp
327.69 79.604 mo
327.69 81.7183 327.148 83.3682 326.063 84.5542 cv
324.979 85.7402 323.469 86.333 321.534 86.333 cv
320.325 86.333 319.256 86.0601 318.328 85.5142 cv
317.399 84.9678 316.685 84.1836 316.186 83.1616 cv
315.687 82.1396 315.437 80.9536 315.437 79.604 cv
315.437 77.5049 315.975 75.8667 317.052 74.6885 cv
318.129 73.5103 319.646 72.9214 321.604 72.9214 cv
323.477 72.9214 324.959 73.5239 326.052 74.7295 cv
327.144 75.9346 327.69 77.5596 327.69 79.604 cv
cp
f
340.799 86.0991 mo
338.037 86.0991 li
338.037 78.1177 li
338.037 77.1265 337.85 76.3872 337.475 75.8994 cv
337.101 75.4121 336.516 75.168 335.72 75.168 cv
334.659 75.168 333.88 75.5137 333.385 76.2041 cv
332.889 76.8945 332.642 78.0435 332.642 79.6504 cv
332.642 86.0991 li
329.892 86.0991 li
329.892 73.1553 li
332.045 73.1553 li
332.431 74.8521 li
332.571 74.8521 li
332.93 74.2358 333.451 73.7598 334.134 73.4243 cv
334.816 73.0889 335.567 72.9214 336.387 72.9214 cv
338.376 72.9214 339.695 73.6001 340.343 74.9575 cv
340.53 74.9575 li
340.912 74.3179 341.45 73.8184 342.145 73.4595 cv
342.839 73.1006 343.635 72.9214 344.532 72.9214 cv
346.077 72.9214 347.203 73.3115 347.909 74.0913 cv
348.615 74.8716 348.968 76.0615 348.968 77.6611 cv
348.968 86.0991 li
346.218 86.0991 li
346.218 78.1177 li
346.218 77.1265 346.028 76.3872 345.65 75.8994 cv
345.271 75.4121 344.685 75.168 343.889 75.168 cv
342.82 75.168 342.038 75.502 341.542 76.1689 cv
341.046 76.8359 340.799 77.8599 340.799 79.2407 cv
340.799 86.0991 li
cp
f
357.746 75.168 mo
356.653 75.168 355.856 75.4883 355.353 76.1279 cv
354.85 76.7676 354.598 77.7896 354.598 79.1943 cv
354.598 79.604 li
354.598 81.1797 354.847 82.3208 355.347 83.0269 cv
355.847 83.7334 356.661 84.0859 357.793 84.0859 cv
358.745 84.0859 359.478 83.6963 359.993 82.916 cv
360.508 82.1357 360.766 81.0239 360.766 79.5806 cv
360.766 78.1289 360.51 77.0313 359.999 76.2856 cv
359.487 75.541 358.737 75.168 357.746 75.168 cv
cp
358.413 86.333 mo
356.774 86.333 355.503 85.7441 354.598 84.5659 cv
354.434 84.5659 li
354.543 85.6582 354.598 86.3213 354.598 86.5557 cv
354.598 91.8569 li
351.848 91.8569 li
351.848 73.1553 li
354.071 73.1553 li
354.133 73.397 354.262 73.9746 354.458 74.8872 cv
354.598 74.8872 li
355.456 73.5767 356.743 72.9214 358.46 72.9214 cv
360.075 72.9214 361.333 73.5063 362.234 74.6768 cv
363.136 75.8472 363.586 77.4893 363.586 79.604 cv
363.586 81.7183 363.128 83.3682 362.211 84.5542 cv
361.294 85.7402 360.028 86.333 358.413 86.333 cv
cp
f
374.951 86.0991 mo
374.565 84.4023 li
374.425 84.4023 li
374.042 85.0029 373.498 85.4751 372.792 85.8184 cv
372.086 86.1616 371.28 86.333 370.375 86.333 cv
368.808 86.333 367.637 85.9434 366.864 85.1631 cv
366.092 84.3828 365.706 83.2007 365.706 81.6167 cv
365.706 73.1553 li
368.479 73.1553 li
368.479 81.1367 li
368.479 82.1279 368.683 82.8711 369.088 83.3662 cv
369.493 83.8618 370.13 84.1094 370.995 84.1094 cv
372.149 84.1094 372.999 83.7642 373.541 83.0737 cv
374.083 82.3833 374.354 81.2266 374.354 79.604 cv
374.354 73.1553 li
377.116 73.1553 li
377.116 86.0991 li
374.951 86.0991 li
cp
f
384.899 84.1094 mo
385.571 84.1094 386.241 84.0044 386.913 83.7935 cv
386.913 85.8652 li
386.608 85.998 386.216 86.1089 385.736 86.1987 cv
385.257 86.2881 384.759 86.333 384.244 86.333 cv
381.638 86.333 380.335 84.96 380.335 82.2134 cv
380.335 75.2383 li
378.568 75.2383 li
378.568 74.0215 li
380.464 73.0146 li
381.4 70.2764 li
383.098 70.2764 li
383.098 73.1553 li
386.784 73.1553 li
386.784 75.2383 li
383.098 75.2383 li
383.098 82.167 li
383.098 82.8301 383.263 83.3193 383.595 83.6357 cv
383.927 83.9517 384.361 84.1094 384.899 84.1094 cv
cp
f
393.69 75.0044 mo
392.815 75.0044 392.116 75.2813 391.589 75.8354 cv
391.063 76.3892 390.749 77.1968 390.647 78.2578 cv
396.522 78.2578 li
396.507 77.189 396.249 76.3794 395.749 75.8296 cv
395.25 75.2793 394.563 75.0044 393.69 75.0044 cv
cp
394.192 86.333 mo
392.181 86.333 390.606 85.7461 389.471 84.5718 cv
388.335 83.3975 387.769 81.7808 387.769 79.7207 cv
387.769 77.6064 388.294 75.9448 389.349 74.7354 cv
390.401 73.5259 391.849 72.9214 393.69 72.9214 cv
395.398 72.9214 396.748 73.4399 397.739 74.4775 cv
398.729 75.5156 399.226 76.9434 399.226 78.7612 cv
399.226 80.2476 li
390.601 80.2476 li
390.64 81.5039 390.979 82.4692 391.618 83.144 cv
392.258 83.8188 393.159 84.1563 394.321 84.1563 cv
395.087 84.1563 395.798 84.0845 396.458 83.9399 cv
397.116 83.7954 397.825 83.5557 398.582 83.2202 cv
398.582 85.4556 li
397.911 85.7754 397.231 86.0015 396.546 86.1343 cv
395.858 86.2666 395.075 86.333 394.192 86.333 cv
cp
f
407.957 72.9214 mo
408.511 72.9214 408.968 72.9604 409.326 73.0381 cv
409.058 75.6011 li
408.667 75.5078 408.261 75.4609 407.84 75.4609 cv
406.739 75.4609 405.849 75.8198 405.166 76.5376 cv
404.483 77.2554 404.142 78.1875 404.142 79.3345 cv
404.142 86.0991 li
401.392 86.0991 li
401.392 73.1553 li
403.545 73.1553 li
403.907 75.4375 li
404.048 75.4375 li
404.478 74.665 405.037 74.0527 405.728 73.6001 cv
406.418 73.1475 407.161 72.9214 407.957 72.9214 cv
cp
f
556.341 640 mo
657.5 640 li
657.5 740 li
556.341 740 li
556.341 640 li
cp
1 1 1 rgb
f
634.233 693.1 mo
634.233 693.9 633.627 694.5 632.817 694.5 cv
627.658 694.5 586.082 694.5 580.113 694.5 cv
579.304 694.5 578.697 693.9 578.697 693.1 cv
578.697 663.4 li
578.697 662.6 579.304 662 580.113 662 cv
632.817 662 li
633.627 662 634.233 662.6 634.233 663.4 cv
634.233 693.1 li
cp
615.418 700.8 mo
615.62 701.4 615.216 702 614.608 702 cv
598.221 702 li
597.614 702 597.209 701.4 597.411 700.8 cv
597.411 700.7 597.411 700.9 598.524 697 cv
614.305 697 li
615.519 700.9 615.418 700.7 615.418 700.8 cv
cp
628.265 705.6 mo
629.984 715.5 li
630.086 716.3 629.479 717 628.67 717 cv
584.16 717 li
583.351 717 582.743 716.3 582.845 715.5 cv
584.564 705.6 li
584.666 705 585.172 704.5 585.88 704.5 cv
594.073 704.5 618.25 704.5 627.051 704.5 cv
627.658 704.5 628.164 705 628.265 705.6 cv
cp
632.817 659.5 mo
580.013 659.5 li
577.787 659.5 576.067 661.3 576.067 663.4 cv
576.067 693 li
576.067 695.2 577.888 696.9 580.013 696.9 cv
595.793 696.9 li
594.883 699.8 li
594.579 700.5 594.579 701.2 594.781 701.9 cv
585.677 701.9 li
583.755 701.9 582.237 703.2 581.935 705.1 cv
580.215 715 li
579.81 717.3 581.631 719.4 583.957 719.4 cv
628.468 719.4 li
630.794 719.4 632.615 717.3 632.21 715 cv
630.49 705.1 li
630.188 703.3 628.568 701.9 626.748 701.9 cv
617.644 701.9 li
617.846 701.2 617.744 700.5 617.542 699.8 cv
616.936 697 li
632.716 697 li
634.941 697 636.661 695.2 636.661 693.1 cv
636.661 663.4 li
636.763 661.3 634.941 659.5 632.817 659.5 cv
cp
0 0 0 rgb
f
629.176 689.5 mo
583.654 689.5 li
583.654 667 li
629.176 667 li
629.176 689.5 li
cp
630.49 664.5 mo
582.44 664.5 li
581.732 664.5 581.125 665.1 581.125 665.8 cv
581.125 690.8 li
581.125 691.5 581.732 692.1 582.44 692.1 cv
630.49 692.1 li
631.198 692.1 631.806 691.5 631.806 690.8 cv
631.806 665.8 li
631.704 665.1 631.098 664.5 630.49 664.5 cv
cp
f
586.183 705.8 mo
588.712 705.8 li
588.712 708.3 li
586.183 708.3 li
586.183 705.8 li
cp
f
590.027 705.8 mo
592.556 705.8 li
592.556 708.3 li
590.027 708.3 li
590.027 705.8 li
cp
f
593.77 705.8 mo
596.299 705.8 li
596.299 708.3 li
593.77 708.3 li
593.77 705.8 li
cp
f
597.614 705.8 mo
600.143 705.8 li
600.143 708.3 li
597.614 708.3 li
597.614 705.8 li
cp
f
601.356 705.8 mo
603.886 705.8 li
603.886 708.3 li
601.356 708.3 li
601.356 705.8 li
cp
f
605.201 705.8 mo
607.729 705.8 li
607.729 708.3 li
605.201 708.3 li
605.201 705.8 li
cp
f
608.943 705.8 mo
611.473 705.8 li
611.473 708.3 li
608.943 708.3 li
608.943 705.8 li
cp
f
612.788 705.8 mo
615.316 705.8 li
615.316 708.3 li
612.788 708.3 li
612.788 705.8 li
cp
f
616.53 705.8 mo
619.06 705.8 li
619.06 708.3 li
616.53 708.3 li
616.53 705.8 li
cp
f
620.375 705.8 mo
622.903 705.8 li
622.903 708.3 li
620.375 708.3 li
620.375 705.8 li
cp
f
624.117 705.8 mo
626.646 705.8 li
626.646 708.3 li
624.117 708.3 li
624.117 705.8 li
cp
f
586.183 709.5 mo
588.712 709.5 li
588.712 712 li
586.183 712 li
586.183 709.5 li
cp
f
590.027 709.5 mo
592.556 709.5 li
592.556 712 li
590.027 712 li
590.027 709.5 li
cp
f
593.77 709.5 mo
596.299 709.5 li
596.299 712 li
593.77 712 li
593.77 709.5 li
cp
f
597.614 709.5 mo
600.143 709.5 li
600.143 712 li
597.614 712 li
597.614 709.5 li
cp
f
601.356 709.5 mo
603.886 709.5 li
603.886 712 li
601.356 712 li
601.356 709.5 li
cp
f
605.201 709.5 mo
607.729 709.5 li
607.729 712 li
605.201 712 li
605.201 709.5 li
cp
f
608.943 709.5 mo
611.473 709.5 li
611.473 712 li
608.943 712 li
608.943 709.5 li
cp
f
612.788 709.5 mo
615.316 709.5 li
615.316 712 li
612.788 712 li
612.788 709.5 li
cp
f
616.53 709.5 mo
619.06 709.5 li
619.06 712 li
616.53 712 li
616.53 709.5 li
cp
f
620.375 709.5 mo
622.903 709.5 li
622.903 712 li
620.375 712 li
620.375 709.5 li
cp
f
624.117 709.5 mo
626.646 709.5 li
626.646 712 li
624.117 712 li
624.117 709.5 li
cp
f
586.183 713.3 mo
588.712 713.3 li
588.712 715.8 li
586.183 715.8 li
586.183 713.3 li
cp
f
590.027 713.3 mo
592.556 713.3 li
592.556 715.8 li
590.027 715.8 li
590.027 713.3 li
cp
f
593.77 713.3 mo
596.299 713.3 li
596.299 715.8 li
593.77 715.8 li
593.77 713.3 li
cp
f
597.614 713.3 mo
611.574 713.3 li
611.574 715.8 li
597.614 715.8 li
597.614 713.3 li
cp
f
612.788 713.3 mo
615.316 713.3 li
615.316 715.8 li
612.788 715.8 li
612.788 713.3 li
cp
f
616.53 713.3 mo
619.06 713.3 li
619.06 715.8 li
616.53 715.8 li
616.53 713.3 li
cp
f
620.375 713.3 mo
622.903 713.3 li
622.903 715.8 li
620.375 715.8 li
620.375 713.3 li
cp
f
624.117 713.3 mo
626.646 713.3 li
626.646 715.8 li
624.117 715.8 li
624.117 713.3 li
cp
f
600.75 679.3 mo
613.395 671.8 li
614.002 671.4 614.204 670.7 613.799 670.1 cv
613.395 669.5 612.687 669.3 612.08 669.7 cv
599.435 677.2 li
598.828 677.6 598.625 678.3 599.03 678.9 cv
599.334 679.5 600.143 679.7 600.75 679.3 cv
cp
f
600.75 684.3 mo
607.123 680.5 li
607.729 680.1 607.932 679.4 607.527 678.8 cv
607.123 678.2 606.415 678 605.808 678.4 cv
599.435 682.2 li
598.828 682.6 598.625 683.3 599.03 683.9 cv
599.334 684.5 600.143 684.7 600.75 684.3 cv
cp
f
428.881 640 mo
530.04 640 li
530.04 740 li
428.881 740 li
428.881 640 li
cp
1 1 1 rgb
f
496.657 715.7 mo
486.541 715.7 li
486.541 712 li
486.541 711.3 485.935 710.7 485.227 710.7 cv
472.683 710.7 li
471.975 710.7 471.367 711.3 471.367 712 cv
471.367 715.8 li
461.252 715.8 li
461.252 713.8 461.252 698.9 461.252 690.8 cv
462.566 690.8 462.769 690.8 465.096 690.8 cv
465.096 691.5 465.702 692.1 466.411 692.1 cv
467.119 692.1 467.726 691.5 467.726 690.8 cv
490.486 690.8 li
490.486 691.5 491.094 692.1 491.802 692.1 cv
492.51 692.1 493.116 691.5 493.116 690.8 cv
495.443 690.8 495.545 690.8 496.961 690.8 cv
496.657 698.8 496.657 713.7 496.657 715.7 cv
cp
484.013 715.7 mo
473.896 715.7 li
473.896 713.2 li
484.013 713.2 li
484.013 715.7 li
cp
460.038 663.3 mo
497.973 663.3 li
498.377 663.3 498.681 663.6 498.681 664 cv
496.657 688.5 496.657 687.4 496.657 687.5 cv
496.657 687.9 496.354 688.2 495.949 688.2 cv
492.914 688.2 li
492.914 687.5 492.308 686.9 491.6 686.9 cv
490.892 686.9 490.284 687.5 490.284 688.2 cv
467.625 688.2 li
467.625 687.5 467.018 686.9 466.31 686.9 cv
465.602 686.9 464.994 687.5 464.994 688.2 cv
461.96 688.2 li
461.555 688.2 461.252 687.9 461.252 687.5 cv
461.252 687.4 461.252 687.5 461.15 685.7 cv
492.914 685.7 li
493.622 685.7 494.229 685.1 494.229 684.4 cv
494.229 683.7 493.622 683.1 492.914 683.1 cv
460.847 683.1 li
459.229 664 li
459.33 663.6 459.633 663.3 460.038 663.3 cv
cp
501.209 664 mo
501.209 662.2 499.793 660.8 497.973 660.8 cv
460.038 660.8 li
458.217 660.8 456.801 662.2 456.801 664 cv
456.801 664.1 456.699 663.1 458.824 687.6 cv
458.824 688.2 459.026 688.8 459.33 689.2 cv
459.026 689.6 458.824 690.1 458.824 690.7 cv
458.824 716 458.824 716.1 458.824 716.2 cv
459.026 717.4 460.038 718.2 461.252 718.2 cv
496.859 718.2 li
498.073 718.2 499.085 717.3 499.287 716.2 cv
499.287 716.1 499.287 716 499.287 690.7 cv
499.287 690.2 499.085 689.7 498.781 689.2 cv
499.085 688.7 499.287 688.2 499.287 687.6 cv
501.209 663.1 501.209 664.1 501.209 664 cv
cp
0 0 0 rgb
f
466.31 693.2 mo
468.839 693.2 li
468.839 695.7 li
466.31 695.7 li
466.31 693.2 li
cp
f
470.153 693.2 mo
472.683 693.2 li
472.683 695.7 li
470.153 695.7 li
470.153 693.2 li
cp
f
473.896 693.2 mo
476.426 693.2 li
476.426 695.7 li
473.896 695.7 li
473.896 693.2 li
cp
f
477.74 693.2 mo
480.27 693.2 li
480.27 695.7 li
477.74 695.7 li
477.74 693.2 li
cp
f
481.483 693.2 mo
484.013 693.2 li
484.013 695.7 li
481.483 695.7 li
481.483 693.2 li
cp
f
485.327 693.2 mo
487.856 693.2 li
487.856 695.7 li
485.327 695.7 li
485.327 693.2 li
cp
f
489.07 693.2 mo
491.6 693.2 li
491.6 695.7 li
489.07 695.7 li
489.07 693.2 li
cp
f
466.31 697 mo
468.839 697 li
468.839 699.5 li
466.31 699.5 li
466.31 697 li
cp
f
470.153 697 mo
472.683 697 li
472.683 699.5 li
470.153 699.5 li
470.153 697 li
cp
f
473.896 697 mo
476.426 697 li
476.426 699.5 li
473.896 699.5 li
473.896 697 li
cp
f
477.74 697 mo
480.27 697 li
480.27 699.5 li
477.74 699.5 li
477.74 697 li
cp
f
481.483 697 mo
484.013 697 li
484.013 699.5 li
481.483 699.5 li
481.483 697 li
cp
f
485.327 697 mo
487.856 697 li
487.856 699.5 li
485.327 699.5 li
485.327 697 li
cp
f
489.07 697 mo
491.6 697 li
491.6 699.5 li
489.07 699.5 li
489.07 697 li
cp
f
466.31 700.7 mo
468.839 700.7 li
468.839 703.2 li
466.31 703.2 li
466.31 700.7 li
cp
f
470.153 700.7 mo
472.683 700.7 li
472.683 703.2 li
470.153 703.2 li
470.153 700.7 li
cp
f
473.896 700.7 mo
476.426 700.7 li
476.426 703.2 li
473.896 703.2 li
473.896 700.7 li
cp
f
477.74 700.7 mo
480.27 700.7 li
480.27 703.2 li
477.74 703.2 li
477.74 700.7 li
cp
f
481.483 700.7 mo
484.013 700.7 li
484.013 703.2 li
481.483 703.2 li
481.483 700.7 li
cp
f
485.327 700.7 mo
487.856 700.7 li
487.856 703.2 li
485.327 703.2 li
485.327 700.7 li
cp
f
489.07 700.7 mo
491.6 700.7 li
491.6 703.2 li
489.07 703.2 li
489.07 700.7 li
cp
f
466.31 704.5 mo
468.839 704.5 li
468.839 707 li
466.31 707 li
466.31 704.5 li
cp
f
462.566 693.2 mo
465.096 693.2 li
465.096 695.7 li
462.566 695.7 li
462.566 693.2 li
cp
f
462.566 697 mo
465.096 697 li
465.096 699.5 li
462.566 699.5 li
462.566 697 li
cp
f
462.566 700.7 mo
465.096 700.7 li
465.096 703.2 li
462.566 703.2 li
462.566 700.7 li
cp
f
462.566 704.5 mo
465.096 704.5 li
465.096 707 li
462.566 707 li
462.566 704.5 li
cp
f
470.153 704.5 mo
484.113 704.5 li
484.113 707 li
470.153 707 li
470.153 704.5 li
cp
f
485.327 704.5 mo
487.856 704.5 li
487.856 707 li
485.327 707 li
485.327 704.5 li
cp
f
489.07 704.5 mo
491.6 704.5 li
491.6 707 li
489.07 707 li
489.07 704.5 li
cp
f
492.914 693.2 mo
495.443 693.2 li
495.443 695.7 li
492.914 695.7 li
492.914 693.2 li
cp
f
492.914 697 mo
495.443 697 li
495.443 699.5 li
492.914 699.5 li
492.914 697 li
cp
f
492.914 700.7 mo
495.443 700.7 li
495.443 703.2 li
492.914 703.2 li
492.914 700.7 li
cp
f
492.914 704.5 mo
495.443 704.5 li
495.443 707 li
492.914 707 li
492.914 704.5 li
cp
f
474.504 674.9 mo
484.619 669.3 li
485.227 669 485.429 668.2 485.125 667.6 cv
484.821 667 484.013 666.8 483.405 667.1 cv
473.29 672.7 li
472.683 673 472.48 673.8 472.784 674.4 cv
473.087 675 473.896 675.2 474.504 674.9 cv
cp
f
474.504 679.3 mo
478.55 677.1 li
479.157 676.8 479.359 676 479.056 675.4 cv
478.752 674.8 477.943 674.6 477.336 674.9 cv
473.29 677.1 li
472.683 677.4 472.48 678.2 472.784 678.8 cv
473.087 679.4 473.896 679.6 474.504 679.3 cv
cp
f
301.42 640 mo
402.579 640 li
402.579 740 li
301.42 740 li
301.42 640 li
cp
1 1 1 rgb
f
350.28 697.6 mo
351.007 697.6 351.595 698.182 351.595 698.9 cv
351.595 699.618 351.007 700.2 350.28 700.2 cv
349.554 700.2 348.965 699.618 348.965 698.9 cv
348.965 698.182 349.554 697.6 350.28 697.6 cv
cp
0 0 0 rgb
f
376.278 702.6 mo
374.761 702.6 327.823 702.6 326.609 702.6 cv
325.699 702.6 324.889 701.8 324.889 700.9 cv
324.889 696.4 li
332.072 696.4 li
332.78 696.4 333.387 695.8 333.387 695.1 cv
333.387 694.4 332.78 693.8 332.072 693.8 cv
324.889 693.8 li
324.889 668.1 li
324.889 667.2 325.699 666.4 326.609 666.4 cv
376.278 666.4 li
377.188 666.4 377.998 667.2 377.998 668.1 cv
377.998 693.9 li
337.534 693.9 li
336.826 693.9 336.219 694.5 336.219 695.2 cv
336.219 695.9 336.826 696.5 337.534 696.5 cv
377.998 696.5 li
377.998 701 li
377.998 701.9 377.29 702.6 376.278 702.6 cv
cp
355.945 706.4 mo
347.043 706.4 li
347.043 705.1 li
355.945 705.1 li
355.945 706.4 li
cp
368.59 712.6 mo
334.398 712.6 li
334.398 712.3 li
345.931 708.9 li
356.957 708.9 li
368.489 712.3 li
368.489 712.6 li
368.59 712.6 li
cp
376.278 663.9 mo
326.71 663.9 li
324.384 663.9 322.461 665.8 322.461 668.1 cv
322.461 700.9 li
322.461 703.2 324.384 705.1 326.71 705.1 cv
344.615 705.1 li
344.615 706.7 li
332.78 710.2 li
332.274 710.4 331.869 710.8 331.869 711.4 cv
331.869 713.9 li
331.869 714.6 332.476 715.2 333.185 715.2 cv
369.905 715.2 li
370.613 715.2 371.22 714.6 371.22 713.9 cv
371.22 711.4 li
371.22 710.8 370.815 710.4 370.31 710.2 cv
358.575 706.7 li
358.575 705.1 li
376.278 705.1 li
378.604 705.1 380.526 703.2 380.526 700.9 cv
380.526 668.1 li
380.526 665.8 378.604 663.9 376.278 663.9 cv
cp
f
346.639 687 mo
346.942 687.6 347.751 687.8 348.358 687.5 cv
366.062 677.5 li
366.668 677.2 366.87 676.4 366.566 675.8 cv
366.264 675.2 365.454 675 364.848 675.3 cv
347.145 685.3 li
346.437 685.6 346.234 686.4 346.639 687 cv
cp
f
343.907 685 mo
352.809 680 li
353.416 679.7 353.619 678.9 353.315 678.3 cv
353.012 677.7 352.202 677.5 351.595 677.8 cv
342.693 682.8 li
342.086 683.1 341.884 683.9 342.188 684.5 cv
342.491 685.1 343.3 685.3 343.907 685 cv
cp
f
173.96 640 mo
275.119 640 li
275.119 740 li
173.96 740 li
173.96 640 li
cp
1 1 1 rgb
f
196.215 704.5 mo
196.215 699.5 li
251.853 699.5 li
251.853 704.5 li
249.122 704.5 198.137 704.5 196.215 704.5 cv
cp
233.644 715.8 mo
214.424 715.8 li
217.357 707 li
230.71 707 li
233.644 715.8 li
cp
251.853 663.3 mo
251.853 697 li
196.215 697 li
196.215 663.3 li
251.853 663.3 li
cp
253.167 660.8 mo
195.001 660.8 li
194.293 660.8 193.687 661.4 193.687 662.1 cv
193.687 705.9 li
193.687 706.6 194.293 707.2 195.001 707.2 cv
214.727 707.2 li
211.793 716 li
208.961 716 li
208.253 716 207.646 716.6 207.646 717.3 cv
207.646 718 208.253 718.6 208.961 718.6 cv
209.669 718.6 238.398 718.6 239.309 718.6 cv
240.017 718.6 240.624 718 240.624 717.3 cv
240.624 716.6 240.017 716 239.309 716 cv
236.477 716 li
233.341 707 li
253.066 707 li
253.775 707 254.382 706.4 254.382 705.7 cv
254.382 662 li
254.382 661.3 253.775 660.8 253.167 660.8 cv
cp
0 0 0 rgb
f
201.273 668.3 mo
246.795 668.3 li
246.795 692 li
201.273 692 li
201.273 668.3 li
cp
200.059 694.5 mo
248.11 694.5 li
248.818 694.5 249.425 693.9 249.425 693.2 cv
249.425 667 li
249.425 666.3 248.818 665.7 248.11 665.7 cv
200.059 665.7 li
199.351 665.7 198.744 666.3 198.744 667 cv
198.744 693.3 li
198.744 693.9 199.351 694.5 200.059 694.5 cv
cp
f
244.266 700.8 mo
244.992 700.8 245.581 701.382 245.581 702.1 cv
245.581 702.818 244.992 703.4 244.266 703.4 cv
243.54 703.4 242.951 702.818 242.951 702.1 cv
242.951 701.382 243.54 700.8 244.266 700.8 cv
cp
f
248.009 700.8 mo
248.735 700.8 249.324 701.382 249.324 702.1 cv
249.324 702.818 248.735 703.4 248.009 703.4 cv
247.282 703.4 246.693 702.818 246.693 702.1 cv
246.693 701.382 247.282 700.8 248.009 700.8 cv
cp
f
240.523 700.8 mo
241.249 700.8 241.838 701.382 241.838 702.1 cv
241.838 702.818 241.249 703.4 240.523 703.4 cv
239.796 703.4 239.208 702.818 239.208 702.1 cv
239.208 701.382 239.796 700.8 240.523 700.8 cv
cp
f
46.5 640 mo
147.659 640 li
147.659 740 li
46.5 740 li
46.5 640 li
cp
1 1 1 rgb
f
92.1226 678.8 mo
103.554 672.5 li
104.161 672.2 104.363 671.4 104.06 670.8 cv
103.756 670.2 102.947 670 102.34 670.3 cv
90.9087 676.6 li
90.3018 676.9 90.0996 677.7 90.4028 678.3 cv
90.7065 678.9 91.5156 679.1 92.1226 678.8 cv
cp
0 0 0 rgb
f
92.1226 683.8 mo
96.6748 681.3 li
97.2817 681 97.4839 680.2 97.1807 679.6 cv
96.877 679 96.0679 678.8 95.4609 679.1 cv
90.9087 681.6 li
90.3018 681.9 90.0996 682.7 90.4028 683.3 cv
90.7065 683.9 91.5156 684.1 92.1226 683.8 cv
cp
f
122.976 702.7 mo
120.953 702.7 72.5991 702.7 70.2725 702.7 cv
69.4629 702.7 68.856 702.1 68.856 701.3 cv
68.856 696.5 li
77.7583 696.5 li
78.4663 696.5 79.0732 695.9 79.0732 695.2 cv
79.0732 694.5 78.2637 694 77.6572 694 cv
68.7549 694 li
68.7549 665.2 li
68.7549 664.4 69.3618 663.8 70.1714 663.8 cv
122.875 663.8 li
123.684 663.8 124.291 664.4 124.291 665.2 cv
124.291 694 li
82.7148 694 li
82.0068 694 81.3999 694.6 81.3999 695.3 cv
81.3999 696 82.0068 696.6 82.7148 696.6 cv
124.393 696.6 li
124.393 701.4 li
124.393 702.1 123.785 702.7 122.976 702.7 cv
cp
101.632 710.2 mo
96.5737 710.2 li
95.8657 710.2 95.2588 710.8 95.2588 711.5 cv
95.2588 712.2 95.8657 712.8 96.5737 712.8 cv
99.8105 712.8 104.869 712.8 106.689 712.8 cv
107.397 712.8 108.004 713.4 108.004 714.1 cv
108.004 714.8 107.397 715.4 106.689 715.4 cv
86.458 715.4 li
85.7495 715.4 85.1426 714.8 85.1426 714.1 cv
85.1426 713.4 85.7495 712.8 86.458 712.8 cv
90.3018 712.8 li
91.0098 712.8 91.6167 712.2 91.6167 711.5 cv
91.6167 705.2 li
101.733 705.2 li
101.733 710.2 li
101.632 710.2 li
cp
122.976 661.3 mo
70.1714 661.3 li
67.9458 661.3 66.2261 663.1 66.2261 665.2 cv
66.2261 701.3 li
66.2261 703.5 68.0469 705.2 70.1714 705.2 cv
88.9868 705.2 li
88.9868 710.2 li
86.458 710.2 li
84.3335 710.2 82.6138 711.9 82.6138 714 cv
82.6138 716.1 84.3335 717.8 86.458 717.8 cv
106.689 717.8 li
108.814 717.8 110.534 716.1 110.534 714 cv
110.534 711.9 108.814 710.2 106.689 710.2 cv
104.161 710.2 li
104.161 705.2 li
122.976 705.2 li
125.202 705.2 126.921 703.4 126.921 701.3 cv
126.921 665.2 li
126.921 663 125.101 661.3 122.976 661.3 cv
cp
f
96.4727 698.7 mo
97.2549 698.7 97.8887 699.327 97.8887 700.1 cv
97.8887 700.873 97.2549 701.5 96.4727 701.5 cv
95.6904 701.5 95.0562 700.873 95.0562 700.1 cv
95.0562 699.327 95.6904 698.7 96.4727 698.7 cv
cp
f
91.5156 689 mo
94.0449 689 li
94.0449 691.5 li
91.5156 691.5 li
91.5156 689 li
cp
f
95.3599 689 mo
97.8887 689 li
97.8887 691.5 li
95.3599 691.5 li
95.3599 689 li
cp
f
99.1025 689 mo
101.632 689 li
101.632 691.5 li
99.1025 691.5 li
99.1025 689 li
cp
f
556.341 514 mo
657.5 514 li
657.5 614 li
556.341 614 li
556.341 514 li
cp
1 1 1 rgb
f
634.233 580.4 mo
631.907 580.4 581.227 580.4 578.596 580.4 cv
578.596 575.4 li
629.176 575.4 li
629.884 575.4 630.49 574.8 630.49 574.1 cv
630.49 573.4 629.884 572.8 629.176 572.8 cv
578.596 572.8 li
578.596 539.1 li
634.233 539.1 li
634.233 580.4 li
cp
615.316 586.4 mo
615.316 587.9 li
610.967 587.9 601.862 587.8 597.614 587.9 cv
597.614 586.5 li
601.154 583 li
611.776 583 li
615.316 586.4 li
cp
635.549 536.6 mo
577.382 536.6 li
576.674 536.6 576.067 537.2 576.067 537.9 cv
576.067 581.7 li
576.067 582.4 576.674 583 577.382 583 cv
597.614 583 li
595.389 585 li
595.187 585.2 594.983 585.6 594.983 585.9 cv
594.983 587.9 li
593.467 587.9 593.264 587.9 592.859 588.3 cv
592.657 588.5 592.455 588.9 592.455 589.2 cv
592.455 589.9 593.062 590.5 593.77 590.5 cv
619.06 590.5 li
619.768 590.5 620.273 589.9 620.273 589.3 cv
620.273 588.6 619.667 588 619.06 588 cv
619.06 588 618.554 588 617.744 588 cv
617.744 586 li
617.744 585.7 617.644 585.4 617.34 585.1 cv
615.216 583 li
635.447 583 li
636.155 583 636.763 582.4 636.763 581.7 cv
636.763 537.9 li
636.763 537.2 636.155 536.6 635.549 536.6 cv
cp
0 0 0 rgb
f
606.415 576.5 mo
607.141 576.5 607.729 577.082 607.729 577.8 cv
607.729 578.518 607.141 579.1 606.415 579.1 cv
605.688 579.1 605.1 578.518 605.1 577.8 cv
605.1 577.082 605.688 576.5 606.415 576.5 cv
cp
f
584.16 549.7 mo
584.463 550.3 585.272 550.5 585.88 550.2 cv
596.906 544 li
597.513 543.7 597.715 542.9 597.411 542.3 cv
597.108 541.7 596.299 541.5 595.691 541.8 cv
584.564 548 li
583.957 548.4 583.755 549.1 584.16 549.7 cv
cp
f
582.44 547.7 mo
588.004 544.6 li
588.61 544.3 588.813 543.5 588.51 542.9 cv
588.206 542.3 587.396 542.1 586.79 542.4 cv
581.227 545.5 li
580.619 545.8 580.417 546.6 580.721 547.2 cv
581.125 547.8 581.833 548.1 582.44 547.7 cv
cp
f
428.881 514 mo
530.04 514 li
530.04 614 li
428.881 614 li
428.881 514 li
cp
1 1 1 rgb
f
478.954 573.4 mo
479.681 573.4 480.27 573.982 480.27 574.7 cv
480.27 575.418 479.681 576 478.954 576 cv
478.229 576 477.64 575.418 477.64 574.7 cv
477.64 573.982 478.229 573.4 478.954 573.4 cv
cp
0 0 0 rgb
f
457.913 547.9 mo
458.217 548.5 459.026 548.7 459.633 548.4 cv
470.659 542.1 li
471.267 541.8 471.469 541 471.165 540.4 cv
470.861 539.8 470.053 539.6 469.445 539.9 cv
458.419 546.1 li
457.813 546.5 457.61 547.3 457.913 547.9 cv
cp
f
456.295 545.8 mo
461.858 542.7 li
462.466 542.4 462.668 541.6 462.364 541 cv
462.061 540.4 461.252 540.2 460.645 540.5 cv
455.081 543.6 li
454.474 543.9 454.271 544.7 454.575 545.3 cv
454.879 546 455.688 546.2 456.295 545.8 cv
cp
f
498.984 576.1 mo
488.059 577.7 469.749 577.6 458.925 576.1 cv
454.271 575.4 452.855 574.8 452.451 574.5 cv
452.451 572.3 li
505.56 572.3 li
505.56 574.5 li
505.154 574.7 503.738 575.4 498.984 576.1 cv
cp
495.443 588.5 mo
462.566 588.5 li
462.566 588.1 li
474.2 583.5 li
483.811 583.5 li
495.443 588.1 li
495.443 588.5 li
cp
482.799 579.7 mo
482.799 581 li
475.212 581 li
475.212 579.7 li
477.64 579.8 479.662 579.8 482.799 579.7 cv
cp
505.56 538.5 mo
505.56 569.8 li
452.451 569.8 li
452.451 538.5 li
505.56 538.5 li
cp
506.773 536 mo
451.136 536 li
450.428 536 449.82 536.6 449.82 537.3 cv
449.82 539 449.82 572.4 449.82 574.5 cv
449.82 574.6 449.82 574.7 449.82 574.8 cv
449.82 576.5 452.046 577.6 457.407 578.4 cv
461.353 579 466.714 579.5 472.581 579.7 cv
472.581 581.5 li
460.746 586.2 li
460.24 586.4 459.937 586.8 459.937 587.4 cv
459.937 589.9 li
459.937 590.6 460.544 591.2 461.252 591.2 cv
496.657 591.2 li
497.365 591.2 497.973 590.6 497.973 589.9 cv
497.973 587.4 li
497.973 586.9 497.669 586.4 497.163 586.2 cv
485.327 581.5 li
485.327 579.7 li
491.194 579.5 496.556 579.1 500.501 578.4 cv
505.863 577.5 508.088 576.5 508.088 574.8 cv
508.088 537.3 li
508.088 536.6 507.481 536 506.773 536 cv
cp
f
301.42 514 mo
402.579 514 li
402.579 614 li
301.42 614 li
301.42 514 li
cp
1 1 1 rgb
f
376.278 577.2 mo
374.255 577.2 328.834 577.2 326.71 577.2 cv
325.8 577.2 324.991 576.4 324.991 575.5 cv
324.991 572.9 li
333.792 572.9 li
334.5 572.9 335.106 572.3 335.106 571.6 cv
335.106 570.9 334.5 570.3 333.792 570.3 cv
324.991 570.3 li
324.991 539.6 li
324.991 538.7 325.8 537.9 326.71 537.9 cv
376.278 537.9 li
377.188 537.9 377.998 538.7 377.998 539.6 cv
377.998 570.4 li
345.121 570.4 li
344.413 570.4 343.806 571 343.806 571.7 cv
343.806 572.4 344.413 573 345.121 573 cv
377.896 573 li
377.896 575.6 li
377.998 576.4 377.188 577.2 376.278 577.2 cv
cp
358.171 589.1 mo
342.289 589.1 li
345.121 579.7 li
355.338 579.7 li
358.171 589.1 li
cp
380.526 571.3 mo
380.526 539.6 li
380.526 537.3 378.604 535.4 376.278 535.4 cv
326.71 535.4 li
324.384 535.4 322.461 537.3 322.461 539.6 cv
322.461 575.5 li
322.461 577.8 324.384 579.7 326.71 579.7 cv
342.491 579.7 li
339.659 589.1 li
334.601 589.1 li
333.893 589.1 333.387 589.7 333.387 590.4 cv
333.387 591.1 333.994 591.7 334.601 591.7 cv
336.219 591.7 364.948 591.7 365.96 591.7 cv
366.668 591.7 367.275 591.1 367.275 590.4 cv
367.275 589.7 366.668 589.1 365.96 589.1 cv
360.902 589.1 li
358.069 579.7 li
376.278 579.7 li
378.604 579.7 380.526 577.8 380.526 575.5 cv
380.526 572 li
380.526 571.8 380.526 571.5 380.526 571.3 cv
cp
0 0 0 rgb
f
337.534 570.4 mo
336.826 570.4 336.219 571 336.219 571.7 cv
336.219 572.4 336.826 573 337.534 573 cv
338.242 573 338.849 572.4 338.849 571.7 cv
338.849 570.9 338.242 570.4 337.534 570.4 cv
cp
f
340.468 570.7 mo
339.962 571.2 339.962 572 340.468 572.5 cv
340.974 573 341.985 572.7 342.289 572.5 cv
342.794 572 342.794 571.2 342.289 570.7 cv
341.783 570.3 340.974 570.3 340.468 570.7 cv
cp
f
372.939 566.6 mo
372.939 567.3 373.547 567.9 374.255 567.9 cv
374.963 567.9 375.57 567.3 375.57 566.6 cv
375.57 541.6 li
375.57 540.9 374.963 540.3 374.255 540.3 cv
328.733 540.3 li
328.025 540.3 327.418 540.9 327.418 541.6 cv
327.418 566.6 li
327.418 567.3 328.025 567.9 328.733 567.9 cv
329.441 567.9 330.048 567.3 330.048 566.6 cv
330.048 542.9 li
373.041 542.9 li
373.041 566.6 li
372.939 566.6 li
cp
f
359.688 548.1 mo
345.728 556.9 li
345.121 557.3 344.919 558 345.323 558.6 cv
345.728 559.2 346.437 559.4 347.043 559 cv
361.003 550.2 li
361.61 549.8 361.813 549.1 361.408 548.5 cv
361.003 547.9 360.194 547.7 359.688 548.1 cv
cp
f
351.696 558.1 mo
345.728 561.9 li
345.121 562.3 344.919 563 345.323 563.6 cv
345.728 564.2 346.437 564.4 347.043 564 cv
353.012 560.2 li
353.619 559.8 353.821 559.1 353.416 558.5 cv
353.012 557.9 352.304 557.7 351.696 558.1 cv
cp
f
173.96 514 mo
275.119 514 li
275.119 614 li
173.96 614 li
173.96 514 li
cp
1 1 1 rgb
f
196.215 577.8 mo
196.215 572.8 li
251.853 572.8 li
251.853 577.8 li
249.223 577.8 198.744 577.8 196.215 577.8 cv
cp
228.485 586.6 mo
219.583 586.6 li
219.583 580.3 li
228.485 580.3 li
228.485 586.6 li
cp
251.853 539.1 mo
251.853 570.4 li
196.215 570.4 li
196.215 539.1 li
251.853 539.1 li
cp
253.167 536.6 mo
195.001 536.6 li
194.293 536.6 193.687 537.2 193.687 537.9 cv
193.687 579.2 li
193.687 579.9 194.293 580.5 195.001 580.5 cv
217.155 580.5 li
217.155 586.8 li
211.389 586.8 li
210.681 586.8 210.074 587.4 210.074 588.1 cv
210.074 588.8 210.681 589.4 211.389 589.4 cv
214.525 589.4 233.745 589.4 236.679 589.4 cv
237.387 589.4 237.994 588.8 237.994 588.1 cv
237.994 587.4 237.387 586.8 236.679 586.8 cv
231.014 586.8 li
231.014 580.5 li
253.167 580.5 li
253.876 580.5 254.483 579.9 254.483 579.2 cv
254.483 537.8 li
254.382 537.2 253.775 536.6 253.167 536.6 cv
cp
0 0 0 rgb
f
224.034 574.1 mo
224.76 574.1 225.349 574.682 225.349 575.4 cv
225.349 576.118 224.76 576.7 224.034 576.7 cv
223.308 576.7 222.719 576.118 222.719 575.4 cv
222.719 574.682 223.308 574.1 224.034 574.1 cv
cp
f
240.523 586.5 mo
241.249 586.5 241.838 587.082 241.838 587.8 cv
241.838 588.518 241.249 589.1 240.523 589.1 cv
239.796 589.1 239.208 588.518 239.208 587.8 cv
239.208 587.082 239.796 586.5 240.523 586.5 cv
cp
f
207.646 586.5 mo
208.373 586.5 208.961 587.082 208.961 587.8 cv
208.961 588.518 208.373 589.1 207.646 589.1 cv
206.92 589.1 206.331 588.518 206.331 587.8 cv
206.331 587.082 206.92 586.5 207.646 586.5 cv
cp
f
201.779 549.7 mo
202.083 550.3 202.892 550.5 203.499 550.2 cv
214.525 543.9 li
215.132 543.6 215.334 542.8 215.031 542.2 cv
214.727 541.6 213.918 541.4 213.311 541.7 cv
202.184 548 li
201.577 548.4 201.375 549.1 201.779 549.7 cv
cp
f
200.059 547.7 mo
205.623 544.6 li
206.23 544.3 206.432 543.5 206.129 542.9 cv
205.825 542.3 205.016 542.1 204.409 542.4 cv
198.845 545.5 li
198.238 545.8 198.036 546.6 198.339 547.2 cv
198.744 547.8 199.452 548 200.059 547.7 cv
cp
f
46.5 514 mo
147.659 514 li
147.659 614 li
46.5 614 li
46.5 514 li
cp
1 1 1 rgb
f
96.5737 571.6 mo
97.2998 571.6 97.8887 572.182 97.8887 572.9 cv
97.8887 573.618 97.2998 574.2 96.5737 574.2 cv
95.8472 574.2 95.2588 573.618 95.2588 572.9 cv
95.2588 572.182 95.8472 571.6 96.5737 571.6 cv
cp
0 0 0 rgb
f
70.0698 575.4 mo
70.0698 570.4 li
123.179 570.4 li
123.179 575.4 li
120.548 575.4 71.8911 575.4 70.0698 575.4 cv
cp
100.417 584.1 mo
92.8306 584.1 li
92.8306 577.8 li
100.417 577.8 li
100.417 584.1 li
cp
123.179 537.9 mo
123.179 567.9 li
70.0698 567.9 li
70.0698 537.9 li
123.179 537.9 li
cp
124.393 535.4 mo
68.7549 535.4 li
68.0469 535.4 67.4399 536 67.4399 536.7 cv
67.4399 538.6 67.4399 574.8 67.4399 576.7 cv
67.4399 577.4 68.0469 578 68.7549 578 cv
90.2007 578 li
90.2007 584.7 li
78.3652 589.4 li
77.7583 589.7 77.3535 590.4 77.6572 591 cv
77.9604 591.6 78.6685 592 79.2754 591.7 cv
91.7178 586.8 li
101.328 586.8 li
113.771 591.7 li
114.377 592 115.187 591.6 115.389 591 cv
115.693 590.4 115.288 589.6 114.681 589.4 cv
102.846 584.7 li
102.846 578 li
124.393 578 li
125.101 578 125.708 577.4 125.708 576.7 cv
125.708 536.7 li
125.708 535.9 125.101 535.4 124.393 535.4 cv
cp
f
75.5327 548.5 mo
75.8359 549.1 76.6455 549.3 77.2524 549 cv
88.2788 542.7 li
88.8857 542.4 89.0879 541.6 88.7842 541 cv
88.481 540.4 87.6719 540.2 87.0645 540.5 cv
76.0386 546.7 li
75.4316 547.1 75.229 547.9 75.5327 548.5 cv
cp
f
73.9141 546.5 mo
79.478 543.4 li
80.085 543.1 80.2871 542.3 79.9834 541.7 cv
79.6802 541.1 78.8711 540.9 78.2637 541.2 cv
72.7002 544.3 li
72.0933 544.6 71.8911 545.4 72.1943 546 cv
72.4976 546.6 73.3071 546.8 73.9141 546.5 cv
cp
f
556.341 388 mo
657.5 388 li
657.5 488 li
556.341 488 li
556.341 388 li
cp
1 1 1 rgb
f
633.525 450.6 mo
632.008 450.6 580.821 450.6 579.203 450.6 cv
578.798 450.6 578.495 450.3 578.495 449.9 cv
578.495 445.6 li
634.132 445.6 li
634.132 449.9 li
634.233 450.3 633.93 450.6 633.525 450.6 cv
cp
612.282 455.6 mo
600.648 455.6 li
600.648 453.1 li
612.282 453.1 li
612.282 455.6 li
cp
596.603 461.8 mo
599.94 458 li
612.99 458 li
616.328 461.8 li
596.603 461.8 li
cp
579.304 411.8 mo
633.627 411.8 li
634.031 411.8 634.335 412.1 634.335 412.5 cv
634.335 443.1 li
578.596 443.1 li
578.596 412.5 li
578.596 412.1 578.899 411.8 579.304 411.8 cv
cp
633.525 409.3 mo
579.304 409.3 li
577.584 409.3 576.067 410.7 576.067 412.5 cv
576.067 449.9 li
576.067 451.6 577.483 453.1 579.304 453.1 cv
598.12 453.1 li
598.12 456.4 li
593.264 461.9 li
590.027 461.9 li
589.319 461.9 588.712 462.5 588.712 463.2 cv
588.712 463.9 589.319 464.5 590.027 464.5 cv
592.455 464.5 621.487 464.5 622.903 464.5 cv
623.611 464.5 624.219 463.9 624.219 463.2 cv
624.219 462.5 623.611 461.9 622.903 461.9 cv
619.667 461.9 li
614.811 456.4 li
614.811 453.1 li
633.627 453.1 li
635.346 453.1 636.863 451.7 636.863 449.9 cv
636.863 412.5 li
636.763 410.8 635.346 409.3 633.525 409.3 cv
cp
0 0 0 rgb
f
606.516 446.9 mo
607.242 446.9 607.831 447.482 607.831 448.2 cv
607.831 448.918 607.242 449.5 606.516 449.5 cv
605.79 449.5 605.201 448.918 605.201 448.2 cv
605.201 447.482 605.79 446.9 606.516 446.9 cv
cp
f
626.748 461.8 mo
627.474 461.8 628.063 462.382 628.063 463.1 cv
628.063 463.818 627.474 464.4 626.748 464.4 cv
626.021 464.4 625.433 463.818 625.433 463.1 cv
625.433 462.382 626.021 461.8 626.748 461.8 cv
cp
f
586.183 461.8 mo
586.909 461.8 587.498 462.382 587.498 463.1 cv
587.498 463.818 586.909 464.4 586.183 464.4 cv
585.457 464.4 584.868 463.818 584.868 463.1 cv
584.868 462.382 585.457 461.8 586.183 461.8 cv
cp
f
610.259 446.9 mo
610.985 446.9 611.574 447.482 611.574 448.2 cv
611.574 448.918 610.985 449.5 610.259 449.5 cv
609.532 449.5 608.943 448.918 608.943 448.2 cv
608.943 447.482 609.532 446.9 610.259 446.9 cv
cp
f
602.773 446.9 mo
603.499 446.9 604.088 447.482 604.088 448.2 cv
604.088 448.918 603.499 449.5 602.773 449.5 cv
602.047 449.5 601.458 448.918 601.458 448.2 cv
601.458 447.482 602.047 446.9 602.773 446.9 cv
cp
f
584.16 422.5 mo
584.463 423.1 585.272 423.3 585.88 423 cv
596.906 416.7 li
597.513 416.4 597.715 415.6 597.411 415 cv
597.108 414.4 596.299 414.2 595.691 414.5 cv
584.666 420.7 li
583.957 421.1 583.755 421.9 584.16 422.5 cv
cp
f
582.44 420.4 mo
588.004 417.3 li
588.61 417 588.813 416.2 588.51 415.6 cv
588.206 415 587.396 414.8 586.79 415.1 cv
581.227 418.2 li
580.619 418.5 580.417 419.3 580.721 419.9 cv
581.125 420.6 581.833 420.8 582.44 420.4 cv
cp
f
428.881 388 mo
530.04 388 li
530.04 488 li
428.881 488 li
428.881 388 li
cp
1 1 1 rgb
f
506.773 450.4 mo
506.773 451.2 506.166 451.8 505.357 451.8 cv
502.828 451.8 454.676 451.8 452.653 451.8 cv
451.844 451.8 451.237 451.2 451.237 450.4 cv
451.237 413.3 li
451.237 412.5 451.844 411.9 452.653 411.9 cv
505.357 411.9 li
506.166 411.9 506.773 412.5 506.773 413.3 cv
506.773 450.4 li
cp
484.821 458.1 mo
473.188 458.1 li
474.504 454.3 li
483.507 454.3 li
484.821 458.1 li
cp
490.082 463.1 mo
467.827 463.1 li
468.333 461.6 469.749 460.6 471.367 460.6 cv
486.541 460.6 li
488.16 460.6 489.576 461.7 490.082 463.1 cv
cp
505.357 409.4 mo
452.552 409.4 li
450.326 409.4 448.606 411.2 448.606 413.3 cv
448.606 450.4 li
448.606 452.6 450.428 454.3 452.552 454.3 cv
471.772 454.3 li
470.457 458.1 li
467.827 458.5 465.703 460.5 465.197 463 cv
460.038 463 li
459.33 463 458.723 463.6 458.723 464.3 cv
458.723 465 459.33 465.6 460.038 465.6 cv
461.252 465.6 496.556 465.6 497.973 465.6 cv
498.681 465.6 499.287 465 499.287 464.3 cv
499.287 463.6 498.681 463 497.973 463 cv
492.813 463 li
492.308 460.4 490.183 458.5 487.553 458.1 cv
486.238 454.3 li
505.458 454.3 li
507.684 454.3 509.403 452.5 509.403 450.4 cv
509.403 413.3 li
509.302 411.1 507.481 409.4 505.357 409.4 cv
cp
0 0 0 rgb
f
501.715 446.9 mo
456.193 446.9 li
456.193 416.9 li
501.715 416.9 li
501.715 446.9 li
cp
503.03 414.4 mo
454.979 414.4 li
454.271 414.4 453.665 415 453.665 415.7 cv
453.665 448.2 li
453.665 448.9 454.271 449.5 454.979 449.5 cv
503.03 449.5 li
503.738 449.5 504.346 448.9 504.346 448.2 cv
504.346 415.6 li
504.244 414.9 503.638 414.4 503.03 414.4 cv
cp
f
481.483 443.1 mo
484.013 443.1 li
484.013 445.6 li
481.483 445.6 li
481.483 443.1 li
cp
f
477.74 443.1 mo
480.27 443.1 li
480.27 445.6 li
477.74 445.6 li
477.74 443.1 li
cp
f
473.896 443.1 mo
476.426 443.1 li
476.426 445.6 li
473.896 445.6 li
473.896 443.1 li
cp
f
474.504 430.4 mo
487.148 422.9 li
487.755 422.5 487.958 421.8 487.553 421.2 cv
487.148 420.6 486.44 420.4 485.833 420.8 cv
473.188 428.3 li
472.581 428.7 472.379 429.4 472.784 430 cv
473.188 430.6 473.998 430.8 474.504 430.4 cv
cp
f
474.504 435.4 mo
480.877 431.6 li
481.483 431.2 481.686 430.5 481.281 429.9 cv
480.877 429.3 480.168 429.1 479.562 429.5 cv
473.188 433.3 li
472.581 433.7 472.379 434.4 472.784 435 cv
473.188 435.6 473.998 435.8 474.504 435.4 cv
cp
f
301.42 388 mo
402.579 388 li
402.579 488 li
301.42 488 li
301.42 388 li
cp
1 1 1 rgb
f
351.393 445.5 mo
352.119 445.5 352.708 446.082 352.708 446.8 cv
352.708 447.518 352.119 448.1 351.393 448.1 cv
350.667 448.1 350.078 447.518 350.078 446.8 cv
350.078 446.082 350.667 445.5 351.393 445.5 cv
cp
0 0 0 rgb
f
377.998 449.4 mo
375.367 449.4 326.812 449.4 324.889 449.4 cv
324.889 411.9 li
377.998 411.9 li
377.998 449.4 li
cp
355.237 458.1 mo
347.65 458.1 li
347.65 451.8 li
355.237 451.8 li
355.237 458.1 li
cp
379.313 409.4 mo
323.675 409.4 li
322.967 409.4 322.36 410 322.36 410.7 cv
322.36 450.7 li
322.36 451.4 322.967 452 323.675 452 cv
345.121 452 li
345.121 458.7 li
333.286 463.4 li
332.679 463.7 332.274 464.4 332.578 465 cv
332.881 465.6 333.589 466 334.196 465.7 cv
346.639 460.8 li
356.249 460.8 li
368.691 465.7 li
369.298 466 370.107 465.6 370.31 465 cv
370.613 464.4 370.209 463.6 369.602 463.4 cv
357.766 458.7 li
357.766 452 li
379.313 452 li
380.021 452 380.628 451.4 380.628 450.7 cv
380.628 410.7 li
380.526 409.9 380.021 409.4 379.313 409.4 cv
cp
f
364.746 422 mo
347.043 432 li
346.437 432.3 346.234 433.1 346.538 433.7 cv
346.841 434.3 347.65 434.5 348.257 434.2 cv
365.96 424.2 li
366.566 423.9 366.77 423.1 366.466 422.5 cv
366.162 421.9 365.353 421.7 364.746 422 cv
cp
f
353.214 425 mo
352.91 424.4 352.101 424.2 351.494 424.5 cv
342.592 429.5 li
341.985 429.8 341.783 430.6 342.086 431.2 cv
342.39 431.8 343.199 432 343.806 431.7 cv
352.607 426.7 li
353.315 426.4 353.518 425.6 353.214 425 cv
cp
f
329.947 416.9 mo
372.939 416.9 li
372.939 441.9 li
329.947 441.9 li
329.947 416.9 li
cp
328.733 444.4 mo
374.255 444.4 li
374.963 444.4 375.57 443.8 375.57 443.1 cv
375.57 415.6 li
375.57 414.9 374.963 414.3 374.255 414.3 cv
328.733 414.3 li
328.025 414.3 327.418 414.9 327.418 415.6 cv
327.418 443.1 li
327.418 443.8 328.025 444.4 328.733 444.4 cv
cp
f
173.96 388 mo
275.119 388 li
275.119 488 li
173.96 488 li
173.96 388 li
cp
1 1 1 rgb
f
222.82 441.3 mo
223.546 441.3 224.135 441.882 224.135 442.6 cv
224.135 443.318 223.546 443.9 222.82 443.9 cv
222.094 443.9 221.505 443.318 221.505 442.6 cv
221.505 441.882 222.094 441.3 222.82 441.3 cv
cp
0 0 0 rgb
f
201.273 437.5 mo
202 437.5 202.588 438.082 202.588 438.8 cv
202.588 439.518 202 440.1 201.273 440.1 cv
200.547 440.1 199.958 439.518 199.958 438.8 cv
199.958 438.082 200.547 437.5 201.273 437.5 cv
cp
f
248.818 445.5 mo
247.199 445.5 200.464 445.5 199.149 445.5 cv
198.238 445.5 197.429 444.7 197.429 443.8 cv
197.429 411.7 li
197.429 410.8 198.238 410 199.149 410 cv
248.818 410 li
249.729 410 250.538 410.8 250.538 411.7 cv
250.538 437.5 li
205.218 437.5 li
204.51 437.5 203.903 438.1 203.903 438.8 cv
203.903 439.5 204.51 440.1 205.218 440.1 cv
250.639 440.1 li
250.639 443.9 li
250.538 444.7 249.83 445.5 248.818 445.5 cv
cp
228.89 453.6 mo
224.641 450.2 li
224.135 449.8 223.528 449.8 223.022 450.2 cv
218.774 453.6 li
218.774 448 li
228.89 448 li
228.89 453.6 li
cp
219.583 456.3 mo
223.832 452.9 li
228.08 456.3 li
219.583 456.3 li
cp
248.818 407.5 mo
199.25 407.5 li
196.923 407.5 195.001 409.4 195.001 411.7 cv
195.001 443.8 li
195.001 446.1 196.923 448 199.25 448 cv
216.346 448 li
216.346 456.2 li
208.354 456.2 li
207.646 456.2 207.039 456.8 207.039 457.5 cv
207.039 458.2 207.646 458.8 208.354 458.8 cv
209.669 458.8 238.601 458.8 239.916 458.8 cv
240.624 458.8 241.231 458.2 241.231 457.5 cv
241.231 456.8 240.624 456.2 239.916 456.2 cv
231.621 456.2 li
231.621 448 li
248.818 448 li
251.145 448 253.066 446.1 253.066 443.8 cv
253.066 411.7 li
253.066 409.4 251.145 407.5 248.818 407.5 cv
cp
f
237.286 418.9 mo
219.583 428.9 li
218.976 429.2 218.774 430 219.077 430.6 cv
219.38 431.2 220.19 431.4 220.797 431.1 cv
238.5 421.1 li
239.106 420.8 239.309 420 239.005 419.4 cv
238.702 418.8 237.893 418.6 237.286 418.9 cv
cp
f
225.753 421.9 mo
225.45 421.3 224.641 421.1 224.034 421.4 cv
215.132 426.4 li
214.525 426.7 214.323 427.5 214.626 428.1 cv
214.93 428.7 215.739 428.9 216.346 428.6 cv
225.146 423.6 li
225.855 423.2 226.057 422.5 225.753 421.9 cv
cp
f
205.016 465 mo
206.938 462.5 li
241.13 462.5 li
243.052 465 li
205.016 465 li
cp
242.748 460.5 mo
242.546 460.2 242.142 460 241.737 460 cv
206.331 460 li
205.926 460 205.522 460.2 205.319 460.5 cv
201.476 465.5 li
200.869 466.3 201.476 467.5 202.487 467.5 cv
203.195 467.5 245.783 467.5 245.479 467.5 cv
246.188 467.5 246.795 466.9 246.795 466.2 cv
246.795 465.9 246.693 465.6 246.491 465.4 cv
242.748 460.5 li
cp
f
201.273 430 mo
201.981 430 202.588 429.4 202.588 428.7 cv
202.588 415 li
245.581 415 li
245.581 428.8 li
245.581 429.5 246.188 430.1 246.896 430.1 cv
247.604 430.1 248.211 429.5 248.211 428.8 cv
248.211 413.8 li
248.211 413.1 247.604 412.5 246.896 412.5 cv
201.273 412.5 li
200.565 412.5 199.958 413.1 199.958 413.8 cv
199.958 428.8 li
199.958 429.4 200.565 430 201.273 430 cv
cp
f
46.5 388 mo
147.659 388 li
147.659 488 li
46.5 488 li
46.5 388 li
cp
1 1 1 rgb
f
120.649 445.6 mo
121.376 445.6 121.964 446.182 121.964 446.9 cv
121.964 447.618 121.376 448.2 120.649 448.2 cv
119.923 448.2 119.334 447.618 119.334 446.9 cv
119.334 446.182 119.923 445.6 120.649 445.6 cv
cp
0 0 0 rgb
f
116.806 445.6 mo
117.532 445.6 118.121 446.182 118.121 446.9 cv
118.121 447.618 117.532 448.2 116.806 448.2 cv
116.079 448.2 115.49 447.618 115.49 446.9 cv
115.49 446.182 116.079 445.6 116.806 445.6 cv
cp
f
113.063 445.6 mo
113.789 445.6 114.377 446.182 114.377 446.9 cv
114.377 447.618 113.789 448.2 113.063 448.2 cv
112.336 448.2 111.748 447.618 111.748 446.9 cv
111.748 446.182 112.336 445.6 113.063 445.6 cv
cp
f
119.334 461.8 mo
120.061 461.8 120.649 462.382 120.649 463.1 cv
120.649 463.818 120.061 464.4 119.334 464.4 cv
118.608 464.4 118.02 463.818 118.02 463.1 cv
118.02 462.382 118.608 461.8 119.334 461.8 cv
cp
f
73.813 461.8 mo
74.5391 461.8 75.1279 462.382 75.1279 463.1 cv
75.1279 463.818 74.5391 464.4 73.813 464.4 cv
73.0864 464.4 72.4976 463.818 72.4976 463.1 cv
72.4976 462.382 73.0864 461.8 73.813 461.8 cv
cp
f
92.2236 431.7 mo
106.791 421.7 li
107.397 421.3 107.499 420.5 107.094 420 cv
106.689 419.4 105.88 419.3 105.375 419.7 cv
90.8076 429.7 li
90.2007 430.1 90.0996 430.9 90.5039 431.4 cv
90.9087 431.9 91.6167 432 92.2236 431.7 cv
cp
f
92.2236 436.7 mo
101.328 430.4 li
101.935 430 102.036 429.2 101.632 428.7 cv
101.227 428.1 100.417 428 99.9121 428.4 cv
90.8076 434.7 li
90.2007 435.1 90.0996 435.9 90.5039 436.4 cv
90.9087 436.9 91.6167 437 92.2236 436.7 cv
cp
f
119.334 441.9 mo
73.813 441.9 li
73.813 416.9 li
119.334 416.9 li
119.334 441.9 li
cp
120.649 414.4 mo
72.5991 414.4 li
71.8911 414.4 71.2837 415 71.2837 415.7 cv
71.2837 443.2 li
71.2837 443.9 71.8911 444.5 72.5991 444.5 cv
120.649 444.5 li
121.357 444.5 121.964 443.9 121.964 443.2 cv
121.964 415.6 li
121.863 414.9 121.256 414.4 120.649 414.4 cv
cp
f
124.393 447.9 mo
124.393 448.7 123.684 449.4 122.875 449.4 cv
121.256 449.4 71.8911 449.4 70.2725 449.4 cv
69.4629 449.4 68.7549 448.7 68.7549 447.9 cv
68.7549 413.4 li
68.7549 412.6 69.4629 411.9 70.2725 411.9 cv
122.875 411.9 li
123.684 411.9 124.393 412.6 124.393 413.4 cv
124.393 447.9 li
cp
104.161 455.6 mo
108.004 455.6 li
108.713 455.6 109.32 456.2 109.32 456.9 cv
109.32 457.6 108.713 458.2 108.004 458.2 cv
85.2437 458.2 li
84.5356 458.2 83.9287 457.6 83.9287 456.9 cv
83.9287 456.2 84.5356 455.6 85.2437 455.6 cv
88.9868 455.6 li
89.6948 455.6 90.3018 455 90.3018 454.3 cv
90.3018 453.6 89.6948 453 88.9868 453 cv
88.2788 453 87.6719 452.4 87.6719 451.7 cv
105.375 451.7 li
105.375 452.4 104.768 453 104.06 453 cv
103.352 453 102.744 453.6 102.744 454.3 cv
102.947 455.1 103.453 455.6 104.161 455.6 cv
cp
122.875 409.4 mo
70.2725 409.4 li
68.0469 409.4 66.2261 411.2 66.2261 413.4 cv
66.2261 447.9 li
66.2261 450.1 68.0469 451.9 70.2725 451.9 cv
85.2437 451.9 li
85.2437 452.3 85.3452 452.8 85.4463 453.2 cv
85.2437 453.2 li
83.1196 453.2 81.3999 454.9 81.3999 457 cv
81.3999 459.1 83.1196 460.8 85.2437 460.8 cv
108.004 460.8 li
110.129 460.8 111.849 459.1 111.849 457 cv
111.849 454.9 110.129 453.2 108.004 453.2 cv
107.802 453.2 li
107.903 452.8 108.004 452.4 108.004 451.9 cv
122.976 451.9 li
125.202 451.9 127.022 450.1 127.022 447.9 cv
127.022 413.4 li
126.921 411.2 125.101 409.4 122.875 409.4 cv
cp
f
115.592 461.9 mo
77.6572 461.9 li
76.9487 461.9 76.3418 462.5 76.3418 463.2 cv
76.3418 463.9 76.9487 464.5 77.6572 464.5 cv
115.592 464.5 li
116.3 464.5 116.907 463.9 116.907 463.2 cv
116.806 462.4 116.199 461.9 115.592 461.9 cv
cp
f
556.341 262 mo
657.5 262 li
657.5 362 li
556.341 362 li
556.341 262 li
cp
1 1 1 rgb
f
605.201 315.3 mo
605.927 315.3 606.516 315.882 606.516 316.6 cv
606.516 317.318 605.927 317.9 605.201 317.9 cv
604.475 317.9 603.886 317.318 603.886 316.6 cv
603.886 315.882 604.475 315.3 605.201 315.3 cv
cp
0 0 0 rgb
f
632.918 317.3 mo
632.918 318.2 632.109 319 631.198 319 cv
630.188 319 582.946 319 581.529 319 cv
580.619 319 579.81 318.2 579.81 317.3 cv
579.81 285.7 li
579.81 284.8 580.619 284 581.529 284 cv
631.198 284 li
632.109 284 632.918 284.8 632.918 285.7 cv
632.918 317.3 li
632.918 317.3 li
cp
617.644 325.3 mo
594.883 325.3 li
594.883 321.5 li
617.644 321.5 li
617.644 325.3 li
cp
625.331 339 mo
587.396 339 li
587.396 327.8 li
589.116 327.8 623.713 327.8 625.331 327.8 cv
625.331 339 li
cp
631.198 281.5 mo
581.631 281.5 li
579.304 281.5 577.382 283.4 577.382 285.7 cv
577.382 317.3 li
577.382 319.6 579.304 321.5 581.631 321.5 cv
592.354 321.5 li
592.354 325.3 li
586.183 325.3 li
585.475 325.3 584.868 325.9 584.868 326.6 cv
584.868 340.4 li
584.868 341.1 585.475 341.7 586.183 341.7 cv
626.646 341.7 li
627.354 341.7 627.962 341.1 627.962 340.4 cv
627.962 326.5 li
627.962 325.8 627.354 325.2 626.646 325.2 cv
620.172 325.2 li
620.172 321.4 li
631.198 321.4 li
633.525 321.4 635.447 319.5 635.447 317.2 cv
635.447 285.7 li
635.447 283.4 633.525 281.5 631.198 281.5 cv
cp
f
601.559 304.6 mo
601.862 305.2 602.672 305.4 603.278 305.1 cv
620.981 295.1 li
621.589 294.8 621.791 294 621.487 293.4 cv
621.184 292.8 620.375 292.6 619.768 292.9 cv
602.064 302.9 li
601.356 303.3 601.154 304 601.559 304.6 cv
cp
f
598.828 302.6 mo
607.629 297.6 li
608.235 297.3 608.438 296.5 608.135 295.9 cv
607.831 295.3 607.021 295.1 606.415 295.4 cv
597.513 300.4 li
596.906 300.7 596.703 301.5 597.007 302.1 cv
597.411 302.7 598.221 302.9 598.828 302.6 cv
cp
f
589.926 330.3 mo
592.455 330.3 li
592.455 332.8 li
589.926 332.8 li
589.926 330.3 li
cp
f
589.926 334 mo
592.455 334 li
592.455 336.5 li
589.926 336.5 li
589.926 334 li
cp
f
593.77 330.3 mo
596.299 330.3 li
596.299 332.8 li
593.77 332.8 li
593.77 330.3 li
cp
f
593.77 334 mo
596.299 334 li
596.299 336.5 li
593.77 336.5 li
593.77 334 li
cp
f
597.513 330.3 mo
600.042 330.3 li
600.042 332.8 li
597.513 332.8 li
597.513 330.3 li
cp
f
601.356 330.3 mo
603.886 330.3 li
603.886 332.8 li
601.356 332.8 li
601.356 330.3 li
cp
f
605.1 330.3 mo
607.629 330.3 li
607.629 332.8 li
605.1 332.8 li
605.1 330.3 li
cp
f
608.943 330.3 mo
611.473 330.3 li
611.473 332.8 li
608.943 332.8 li
608.943 330.3 li
cp
f
597.513 334 mo
611.473 334 li
611.473 336.5 li
597.513 336.5 li
597.513 334 li
cp
f
612.687 330.3 mo
615.216 330.3 li
615.216 332.8 li
612.687 332.8 li
612.687 330.3 li
cp
f
612.687 334 mo
615.216 334 li
615.216 336.5 li
612.687 336.5 li
612.687 334 li
cp
f
616.53 330.3 mo
619.06 330.3 li
619.06 332.8 li
616.53 332.8 li
616.53 330.3 li
cp
f
616.53 334 mo
619.06 334 li
619.06 336.5 li
616.53 336.5 li
616.53 334 li
cp
f
620.273 330.3 mo
622.803 330.3 li
622.803 332.8 li
620.273 332.8 li
620.273 330.3 li
cp
f
620.273 334 mo
622.803 334 li
622.803 336.5 li
620.273 336.5 li
620.273 334 li
cp
f
627.86 311.5 mo
584.868 311.5 li
584.868 289 li
627.86 289 li
627.86 311.5 li
cp
629.176 286.5 mo
583.654 286.5 li
582.946 286.5 582.339 287.1 582.339 287.8 cv
582.339 312.8 li
582.339 313.5 582.946 314.1 583.654 314.1 cv
629.176 314.1 li
629.884 314.1 630.49 313.5 630.49 312.8 cv
630.49 287.8 li
630.39 287.1 629.884 286.5 629.176 286.5 cv
cp
f
428.881 262 mo
530.04 262 li
530.04 362 li
428.881 362 li
428.881 262 li
cp
1 1 1 rgb
f
503.03 319 mo
503.757 319 504.346 319.582 504.346 320.3 cv
504.346 321.018 503.757 321.6 503.03 321.6 cv
502.304 321.6 501.715 321.018 501.715 320.3 cv
501.715 319.582 502.304 319 503.03 319 cv
cp
0 0 0 rgb
f
499.187 319 mo
499.912 319 500.501 319.582 500.501 320.3 cv
500.501 321.018 499.912 321.6 499.187 321.6 cv
498.46 321.6 497.871 321.018 497.871 320.3 cv
497.871 319.582 498.46 319 499.187 319 cv
cp
f
495.443 319 mo
496.17 319 496.759 319.582 496.759 320.3 cv
496.759 321.018 496.17 321.6 495.443 321.6 cv
494.717 321.6 494.128 321.018 494.128 320.3 cv
494.128 319.582 494.717 319 495.443 319 cv
cp
f
470.153 310.2 mo
470.88 310.2 471.469 310.782 471.469 311.5 cv
471.469 312.218 470.88 312.8 470.153 312.8 cv
469.428 312.8 468.839 312.218 468.839 311.5 cv
468.839 310.782 469.428 310.2 470.153 310.2 cv
cp
f
505.56 336.5 mo
506.285 336.5 506.874 337.082 506.874 337.8 cv
506.874 338.518 506.285 339.1 505.56 339.1 cv
504.833 339.1 504.244 338.518 504.244 337.8 cv
504.244 337.082 504.833 336.5 505.56 336.5 cv
cp
f
452.451 336.5 mo
453.177 336.5 453.766 337.082 453.766 337.8 cv
453.766 338.518 453.177 339.1 452.451 339.1 cv
451.725 339.1 451.136 338.518 451.136 337.8 cv
451.136 337.082 451.725 336.5 452.451 336.5 cv
cp
f
474.604 305 mo
489.172 295 li
489.778 294.6 489.88 293.8 489.475 293.3 cv
489.07 292.7 488.261 292.6 487.755 293 cv
473.188 303 li
472.581 303.4 472.48 304.2 472.885 304.7 cv
473.29 305.3 473.998 305.4 474.604 305 cv
cp
f
474.604 310 mo
483.709 303.7 li
484.315 303.3 484.417 302.5 484.013 302 cv
483.607 301.4 482.799 301.3 482.293 301.7 cv
473.188 308 li
472.581 308.4 472.48 309.2 472.885 309.7 cv
473.29 310.3 473.998 310.4 474.604 310 cv
cp
f
501.715 315.3 mo
456.193 315.3 li
456.193 290.3 li
501.715 290.3 li
501.715 315.3 li
cp
503.03 287.8 mo
454.979 287.8 li
454.271 287.8 453.665 288.4 453.665 289.1 cv
453.665 316.6 li
453.665 317.3 454.271 317.9 454.979 317.9 cv
503.03 317.9 li
503.738 317.9 504.346 317.3 504.346 316.6 cv
504.346 289 li
504.244 288.3 503.638 287.8 503.03 287.8 cv
cp
f
506.773 321.3 mo
506.773 322.1 506.065 322.8 505.256 322.8 cv
503.132 322.8 455.081 322.8 452.653 322.8 cv
451.844 322.8 451.136 322.1 451.136 321.3 cv
451.136 286.8 li
451.136 286 451.844 285.3 452.653 285.3 cv
505.256 285.3 li
506.065 285.3 506.773 286 506.773 286.8 cv
506.773 321.3 li
cp
483.405 326.5 mo
474.504 326.5 li
474.504 325.2 li
483.405 325.2 li
483.405 326.5 li
cp
496.051 332.8 mo
461.858 332.8 li
461.858 332.5 li
473.492 329 li
484.519 329 li
496.051 332.4 li
496.051 332.8 li
cp
505.256 282.8 mo
452.653 282.8 li
450.428 282.8 448.606 284.6 448.606 286.8 cv
448.606 321.3 li
448.606 323.5 450.428 325.3 452.653 325.3 cv
471.975 325.3 li
471.975 326.9 li
460.24 330.3 li
459.734 330.5 459.33 330.9 459.33 331.5 cv
459.33 334 li
459.33 334.7 459.937 335.3 460.645 335.3 cv
497.365 335.3 li
498.073 335.3 498.681 334.7 498.681 334 cv
498.681 331.5 li
498.681 330.9 498.275 330.5 497.77 330.3 cv
486.035 326.8 li
486.035 325.2 li
505.357 325.2 li
507.582 325.2 509.403 323.4 509.403 321.2 cv
509.403 286.8 li
509.302 284.5 507.481 282.8 505.256 282.8 cv
cp
f
501.715 336.5 mo
456.193 336.5 li
455.485 336.5 454.879 337.1 454.879 337.8 cv
454.879 338.5 455.485 339.1 456.193 339.1 cv
501.715 339.1 li
502.423 339.1 503.03 338.5 503.03 337.8 cv
503.03 337.1 502.423 336.5 501.715 336.5 cv
cp
f
301.42 262 mo
402.579 262 li
402.579 362 li
301.42 362 li
301.42 262 li
cp
1 1 1 rgb
f
376.278 324.6 mo
374.963 324.6 328.228 324.6 326.71 324.6 cv
325.8 324.6 324.991 323.8 324.991 322.9 cv
324.991 320.3 li
377.998 320.3 li
377.998 322.9 li
377.998 323.8 377.188 324.6 376.278 324.6 cv
cp
355.338 334 mo
345.222 334 li
345.222 327.1 li
355.338 327.1 li
355.338 334 li
cp
359.081 335.3 mo
359.789 335.3 360.396 335.9 360.396 336.6 cv
360.396 337.3 359.789 337.9 359.081 337.9 cv
341.378 337.9 li
340.67 337.9 340.063 337.3 340.063 336.6 cv
340.063 335.9 340.67 335.3 341.378 335.3 cv
342.693 335.3 li
342.693 336 343.3 336.6 344.008 336.6 cv
356.653 336.6 li
357.361 336.6 357.969 336 357.969 335.3 cv
359.081 335.3 li
cp
326.71 285.3 mo
376.278 285.3 li
377.188 285.3 377.998 286.1 377.998 287 cv
377.998 317.8 li
324.991 317.8 li
324.991 287 li
324.991 286 325.8 285.3 326.71 285.3 cv
cp
380.526 318.6 mo
380.526 287 li
380.526 284.7 378.604 282.8 376.278 282.8 cv
326.71 282.8 li
324.384 282.8 322.461 284.7 322.461 287 cv
322.461 318.7 li
322.36 318.9 322.36 319.2 322.461 319.4 cv
322.461 322.9 li
322.461 325.2 324.384 327.1 326.71 327.1 cv
342.592 327.1 li
342.592 332.8 li
341.277 332.8 li
339.153 332.8 337.433 334.5 337.433 336.6 cv
337.433 338.7 339.153 340.4 341.277 340.4 cv
359.081 340.4 li
361.205 340.4 362.925 338.7 362.925 336.6 cv
362.925 334.5 361.205 332.8 359.081 332.8 cv
357.766 332.8 li
357.766 327.1 li
376.278 327.1 li
378.604 327.1 380.526 325.2 380.526 322.9 cv
380.526 319.4 li
380.628 319.1 380.628 318.9 380.526 318.6 cv
cp
0 0 0 rgb
f
328.733 315.3 mo
329.441 315.3 330.048 314.7 330.048 314 cv
330.048 290.3 li
373.041 290.3 li
373.041 314 li
373.041 314.7 373.648 315.3 374.356 315.3 cv
375.064 315.3 375.671 314.7 375.671 314 cv
375.671 289 li
375.671 288.3 375.064 287.7 374.356 287.7 cv
328.733 287.7 li
328.025 287.7 327.418 288.3 327.418 289 cv
327.418 314 li
327.52 314.7 328.025 315.3 328.733 315.3 cv
cp
f
359.688 295.4 mo
345.728 304.2 li
345.121 304.6 344.919 305.3 345.323 305.9 cv
345.728 306.5 346.437 306.7 347.043 306.3 cv
361.003 297.5 li
361.61 297.1 361.813 296.4 361.408 295.8 cv
361.003 295.2 360.295 295.1 359.688 295.4 cv
cp
f
351.696 305.4 mo
345.728 309.2 li
345.121 309.6 344.919 310.3 345.323 310.9 cv
345.728 311.5 346.437 311.7 347.043 311.3 cv
353.012 307.5 li
353.619 307.1 353.821 306.4 353.416 305.8 cv
353.113 305.2 352.304 305.1 351.696 305.4 cv
cp
f
349.37 332.4 mo
349.875 332.9 350.887 332.6 351.191 332.4 cv
351.696 331.9 351.696 331.1 351.191 330.6 cv
350.988 330.4 350.584 330.2 350.28 330.2 cv
349.572 330.2 348.965 330.8 348.965 331.5 cv
348.965 331.8 349.066 332.2 349.37 332.4 cv
cp
f
173.96 262 mo
275.119 262 li
275.119 362 li
173.96 362 li
173.96 262 li
cp
1 1 1 rgb
f
251.853 325.1 mo
251.853 325.9 251.246 326.5 250.437 326.5 cv
247.907 326.5 199.756 326.5 197.732 326.5 cv
196.923 326.5 196.316 325.9 196.316 325.1 cv
196.316 287.9 li
196.316 287.1 196.923 286.5 197.732 286.5 cv
250.437 286.5 li
251.246 286.5 251.853 287.1 251.853 287.9 cv
251.853 325.1 li
cp
228.485 330.3 mo
219.583 330.3 li
219.583 329 li
228.485 329 li
228.485 330.3 li
cp
241.13 336.5 mo
206.938 336.5 li
206.938 336.2 li
218.47 332.8 li
229.497 332.8 li
241.029 336.2 li
241.029 336.5 li
241.13 336.5 li
cp
250.437 284 mo
197.631 284 li
195.406 284 193.687 285.8 193.687 287.9 cv
193.687 325 li
193.687 327.2 195.507 328.9 197.631 328.9 cv
217.054 328.9 li
217.054 330.5 li
205.319 334.1 li
204.813 334.3 204.409 334.7 204.409 335.3 cv
204.409 337.8 li
204.409 338.5 205.016 339.1 205.724 339.1 cv
242.445 339.1 li
243.153 339.1 243.76 338.5 243.76 337.8 cv
243.76 335.3 li
243.76 334.7 243.355 334.3 242.85 334.1 cv
231.115 330.6 li
231.115 329 li
250.538 329 li
252.763 329 254.483 327.2 254.483 325.1 cv
254.483 287.9 li
254.382 285.8 252.561 284 250.437 284 cv
cp
0 0 0 rgb
f
246.795 321.5 mo
201.273 321.5 li
201.273 291.5 li
246.795 291.5 li
246.795 321.5 li
cp
248.11 289 mo
200.059 289 li
199.351 289 198.744 289.6 198.744 290.3 cv
198.744 322.8 li
198.744 323.5 199.351 324.1 200.059 324.1 cv
248.11 324.1 li
248.818 324.1 249.425 323.5 249.425 322.8 cv
249.425 290.3 li
249.324 289.6 248.717 289 248.11 289 cv
cp
f
226.563 317.8 mo
229.092 317.8 li
229.092 320.3 li
226.563 320.3 li
226.563 317.8 li
cp
f
222.82 317.8 mo
225.349 317.8 li
225.349 320.3 li
222.82 320.3 li
222.82 317.8 li
cp
f
218.976 317.8 mo
221.505 317.8 li
221.505 320.3 li
218.976 320.3 li
218.976 317.8 li
cp
f
219.583 305.1 mo
232.228 297.6 li
232.835 297.2 233.037 296.5 232.632 295.9 cv
232.228 295.3 231.52 295.1 230.913 295.5 cv
218.268 303 li
217.661 303.4 217.458 304.1 217.863 304.7 cv
218.268 305.2 219.077 305.4 219.583 305.1 cv
cp
f
219.583 310.1 mo
225.956 306.3 li
226.563 305.9 226.765 305.2 226.36 304.6 cv
225.956 304 225.248 303.8 224.641 304.2 cv
218.268 308 li
217.661 308.4 217.458 309.1 217.863 309.7 cv
218.268 310.2 219.077 310.4 219.583 310.1 cv
cp
f
46.5 262 mo
147.659 262 li
147.659 362 li
46.5 362 li
46.5 262 li
cp
1 1 1 rgb
f
124.393 318.8 mo
124.393 319.6 123.785 320.2 122.976 320.2 cv
117.817 320.2 76.2407 320.2 70.2725 320.2 cv
69.4629 320.2 68.856 319.6 68.856 318.8 cv
68.856 285.4 li
68.856 284.6 69.4629 284 70.2725 284 cv
122.976 284 li
123.785 284 124.393 284.6 124.393 285.4 cv
124.393 318.8 li
cp
104.161 324 mo
88.9868 324 li
88.9868 322.7 li
104.161 322.7 li
104.161 324 li
cp
120.346 339 mo
72.8013 339 li
74.9258 326.5 li
79.3765 326.5 114.276 326.5 118.323 326.5 cv
120.346 339 li
cp
122.976 281.5 mo
70.1714 281.5 li
67.9458 281.5 66.2261 283.3 66.2261 285.4 cv
66.2261 318.8 li
66.2261 321 68.0469 322.7 70.1714 322.7 cv
86.458 322.7 li
86.458 324 li
73.813 324 li
73.2061 324 72.7002 324.4 72.5991 325 cv
70.0698 340 li
69.9688 340.8 70.5757 341.5 71.2837 341.5 cv
75.7349 341.5 121.863 341.5 121.863 341.5 cv
122.673 341.5 123.28 340.7 123.077 340 cv
120.548 325 li
120.447 324.4 119.941 324 119.334 324 cv
106.689 324 li
106.689 322.7 li
122.976 322.7 li
125.202 322.7 126.921 320.9 126.921 318.8 cv
126.921 285.4 li
126.921 283.3 125.101 281.5 122.976 281.5 cv
cp
0 0 0 rgb
f
119.334 312.8 mo
73.813 312.8 li
73.813 289 li
119.334 289 li
119.334 312.8 li
cp
120.649 286.5 mo
72.5991 286.5 li
71.8911 286.5 71.2837 287.1 71.2837 287.8 cv
71.2837 314 li
71.2837 314.7 71.8911 315.3 72.5991 315.3 cv
120.649 315.3 li
121.357 315.3 121.964 314.7 121.964 314 cv
121.964 287.8 li
121.863 287.1 121.256 286.5 120.649 286.5 cv
cp
f
96.5737 316.5 mo
97.2998 316.5 97.8887 317.082 97.8887 317.8 cv
97.8887 318.518 97.2998 319.1 96.5737 319.1 cv
95.8472 319.1 95.2588 318.518 95.2588 317.8 cv
95.2588 317.082 95.8472 316.5 96.5737 316.5 cv
cp
f
76.3418 327.8 mo
78.8711 327.8 li
78.8711 330.3 li
76.3418 330.3 li
76.3418 327.8 li
cp
f
80.186 327.8 mo
82.7148 327.8 li
82.7148 330.3 li
80.186 330.3 li
80.186 327.8 li
cp
f
83.9287 327.8 mo
86.458 327.8 li
86.458 330.3 li
83.9287 330.3 li
83.9287 327.8 li
cp
f
87.7729 327.8 mo
90.3018 327.8 li
90.3018 330.3 li
87.7729 330.3 li
87.7729 327.8 li
cp
f
91.5156 327.8 mo
94.0449 327.8 li
94.0449 330.3 li
91.5156 330.3 li
91.5156 327.8 li
cp
f
95.3599 327.8 mo
97.8887 327.8 li
97.8887 330.3 li
95.3599 330.3 li
95.3599 327.8 li
cp
f
99.1025 327.8 mo
101.632 327.8 li
101.632 330.3 li
99.1025 330.3 li
99.1025 327.8 li
cp
f
102.947 327.8 mo
105.476 327.8 li
105.476 330.3 li
102.947 330.3 li
102.947 327.8 li
cp
f
106.689 327.8 mo
109.219 327.8 li
109.219 330.3 li
106.689 330.3 li
106.689 327.8 li
cp
f
110.534 327.8 mo
113.063 327.8 li
113.063 330.3 li
110.534 330.3 li
110.534 327.8 li
cp
f
114.276 327.8 mo
116.806 327.8 li
116.806 330.3 li
114.276 330.3 li
114.276 327.8 li
cp
f
76.3418 331.5 mo
78.8711 331.5 li
78.8711 334 li
76.3418 334 li
76.3418 331.5 li
cp
f
80.186 331.5 mo
82.7148 331.5 li
82.7148 334 li
80.186 334 li
80.186 331.5 li
cp
f
83.9287 331.5 mo
86.458 331.5 li
86.458 334 li
83.9287 334 li
83.9287 331.5 li
cp
f
87.7729 331.5 mo
90.3018 331.5 li
90.3018 334 li
87.7729 334 li
87.7729 331.5 li
cp
f
91.5156 331.5 mo
94.0449 331.5 li
94.0449 334 li
91.5156 334 li
91.5156 331.5 li
cp
f
95.3599 331.5 mo
97.8887 331.5 li
97.8887 334 li
95.3599 334 li
95.3599 331.5 li
cp
f
99.1025 331.5 mo
101.632 331.5 li
101.632 334 li
99.1025 334 li
99.1025 331.5 li
cp
f
102.947 331.5 mo
105.476 331.5 li
105.476 334 li
102.947 334 li
102.947 331.5 li
cp
f
106.689 331.5 mo
109.219 331.5 li
109.219 334 li
106.689 334 li
106.689 331.5 li
cp
f
110.534 331.5 mo
113.063 331.5 li
113.063 334 li
110.534 334 li
110.534 331.5 li
cp
f
114.276 331.5 mo
116.806 331.5 li
116.806 334 li
114.276 334 li
114.276 331.5 li
cp
f
76.3418 335.3 mo
78.8711 335.3 li
78.8711 337.8 li
76.3418 337.8 li
76.3418 335.3 li
cp
f
80.186 335.3 mo
82.7148 335.3 li
82.7148 337.8 li
80.186 337.8 li
80.186 335.3 li
cp
f
83.9287 335.3 mo
86.458 335.3 li
86.458 337.8 li
83.9287 337.8 li
83.9287 335.3 li
cp
f
87.7729 335.3 mo
101.733 335.3 li
101.733 337.8 li
87.7729 337.8 li
87.7729 335.3 li
cp
f
102.947 335.3 mo
105.476 335.3 li
105.476 337.8 li
102.947 337.8 li
102.947 335.3 li
cp
f
106.689 335.3 mo
109.219 335.3 li
109.219 337.8 li
106.689 337.8 li
106.689 335.3 li
cp
f
110.534 335.3 mo
113.063 335.3 li
113.063 337.8 li
110.534 337.8 li
110.534 335.3 li
cp
f
114.276 335.3 mo
116.806 335.3 li
116.806 337.8 li
114.276 337.8 li
114.276 335.3 li
cp
f
90.9087 303.8 mo
103.554 296.3 li
104.161 295.9 104.363 295.2 103.958 294.6 cv
103.554 294 102.846 293.8 102.239 294.2 cv
89.5938 301.7 li
88.9868 302.1 88.7842 302.8 89.189 303.4 cv
89.4927 304 90.3018 304.2 90.9087 303.8 cv
cp
f
90.9087 308.8 mo
97.2817 305 li
97.8887 304.6 98.0908 303.9 97.6865 303.3 cv
97.2817 302.7 96.5737 302.5 95.9668 302.9 cv
89.5938 306.7 li
88.9868 307.1 88.7842 307.8 89.189 308.4 cv
89.4927 309 90.3018 309.2 90.9087 308.8 cv
cp
f
556.341 136 mo
657.5 136 li
657.5 236 li
556.341 236 li
556.341 136 li
cp
1 1 1 rgb
f
614.811 210.3 mo
614.811 210.4 614.608 210.5 614.406 210.5 cv
598.423 210.5 li
598.221 210.5 598.12 210.4 598.019 210.3 cv
598.019 210.2 597.917 210 598.019 209.9 cv
601.154 205.7 li
601.256 205.6 601.356 205.5 601.458 205.5 cv
611.169 205.5 li
611.271 205.5 611.473 205.6 611.473 205.7 cv
614.608 209.8 li
614.912 210 614.811 210.2 614.811 210.3 cv
cp
613.597 204.2 mo
613.091 203.5 612.181 203 611.271 203 cv
601.559 203 li
600.648 203 599.738 203.4 599.232 204.2 cv
596.097 208.3 li
594.681 210.2 595.995 213 598.423 213 cv
614.406 213 li
616.834 213 618.25 210.2 616.732 208.3 cv
613.597 204.2 li
cp
0 0 0 rgb
f
578.596 199.3 mo
578.596 194.3 li
634.233 194.3 li
634.233 199.3 li
578.596 199.3 li
cp
634.233 160.5 mo
634.233 191.8 li
578.596 191.8 li
578.596 160.5 li
634.233 160.5 li
cp
635.549 158 mo
577.382 158 li
576.674 158 576.067 158.6 576.067 159.3 cv
576.067 200.6 li
576.067 201.3 576.674 201.9 577.382 201.9 cv
635.549 201.9 li
636.257 201.9 636.863 201.3 636.863 200.6 cv
636.863 159.3 li
636.763 158.6 636.155 158 635.549 158 cv
cp
f
626.646 195.5 mo
627.373 195.5 627.962 196.082 627.962 196.8 cv
627.962 197.518 627.373 198.1 626.646 198.1 cv
625.92 198.1 625.331 197.518 625.331 196.8 cv
625.331 196.082 625.92 195.5 626.646 195.5 cv
cp
f
630.39 195.5 mo
631.115 195.5 631.704 196.082 631.704 196.8 cv
631.704 197.518 631.115 198.1 630.39 198.1 cv
629.663 198.1 629.074 197.518 629.074 196.8 cv
629.074 196.082 629.663 195.5 630.39 195.5 cv
cp
f
622.903 195.5 mo
623.63 195.5 624.219 196.082 624.219 196.8 cv
624.219 197.518 623.63 198.1 622.903 198.1 cv
622.178 198.1 621.589 197.518 621.589 196.8 cv
621.589 196.082 622.178 195.5 622.903 195.5 cv
cp
f
584.16 171.1 mo
584.463 171.7 585.272 171.9 585.88 171.6 cv
596.906 165.3 li
597.513 165 597.715 164.2 597.411 163.6 cv
597.108 163 596.299 162.8 595.691 163.1 cv
584.666 169.3 li
583.957 169.8 583.755 170.5 584.16 171.1 cv
cp
f
582.44 169.1 mo
588.004 166 li
588.61 165.7 588.813 164.9 588.51 164.3 cv
588.206 163.7 587.396 163.5 586.79 163.8 cv
581.227 166.9 li
580.619 167.2 580.417 168 580.721 168.6 cv
581.125 169.2 581.833 169.4 582.44 169.1 cv
cp
f
428.881 136 mo
530.04 136 li
530.04 236 li
428.881 236 li
428.881 136 li
cp
1 1 1 rgb
f
451.136 198.6 mo
451.136 193.6 li
452.855 193.6 504.446 193.6 506.773 193.6 cv
506.773 198.6 li
495.241 198.6 462.668 198.6 451.136 198.6 cv
cp
482.799 203.6 mo
475.212 203.6 li
475.212 201.1 li
482.799 201.1 li
482.799 203.6 li
cp
487.553 208.6 mo
470.356 208.6 li
470.861 207.1 472.278 206.1 473.896 206.1 cv
484.013 206.1 li
485.631 206.1 487.047 207.2 487.553 208.6 cv
cp
501.715 191.1 mo
456.193 191.1 li
456.193 166.1 li
501.715 166.1 li
501.715 191.1 li
cp
506.773 161.1 mo
506.773 191.1 li
504.244 191.1 li
504.244 164.9 li
504.244 164.2 503.638 163.6 502.929 163.6 cv
454.979 163.6 li
454.271 163.6 453.665 164.2 453.665 164.9 cv
453.665 191.2 li
451.136 191.2 li
451.136 161.2 li
506.773 161.2 li
506.773 161.1 li
cp
508.088 158.6 mo
449.922 158.6 li
449.214 158.6 448.606 159.2 448.606 159.9 cv
448.606 199.9 li
448.606 200.6 449.214 201.2 449.922 201.2 cv
472.683 201.2 li
472.683 203.8 li
470.255 204.3 468.231 206.2 467.726 208.7 cv
461.252 208.7 li
460.544 208.7 459.937 209.3 459.937 210 cv
459.937 210.7 460.544 211.3 461.252 211.3 cv
462.061 211.3 495.545 211.3 496.657 211.3 cv
497.365 211.3 497.973 210.7 497.973 210 cv
497.973 209.3 497.365 208.7 496.657 208.7 cv
490.183 208.7 li
489.678 206.3 487.755 204.3 485.227 203.8 cv
485.227 201.2 li
507.987 201.2 li
508.695 201.2 509.302 200.6 509.302 199.9 cv
509.302 159.9 li
509.302 159.2 508.695 158.6 508.088 158.6 cv
cp
0 0 0 rgb
f
478.954 194.8 mo
479.681 194.8 480.27 195.382 480.27 196.1 cv
480.27 196.818 479.681 197.4 478.954 197.4 cv
478.229 197.4 477.64 196.818 477.64 196.1 cv
477.64 195.382 478.229 194.8 478.954 194.8 cv
cp
f
500.501 208.6 mo
501.228 208.6 501.816 209.182 501.816 209.9 cv
501.816 210.618 501.228 211.2 500.501 211.2 cv
499.775 211.2 499.187 210.618 499.187 209.9 cv
499.187 209.182 499.775 208.6 500.501 208.6 cv
cp
f
457.509 208.6 mo
458.235 208.6 458.824 209.182 458.824 209.9 cv
458.824 210.618 458.235 211.2 457.509 211.2 cv
456.782 211.2 456.193 210.618 456.193 209.9 cv
456.193 209.182 456.782 208.6 457.509 208.6 cv
cp
f
474.604 180.9 mo
488.564 170.9 li
489.172 170.5 489.272 169.7 488.868 169.2 cv
488.463 168.6 487.654 168.5 487.148 168.9 cv
473.188 178.9 li
472.581 179.3 472.48 180.1 472.885 180.6 cv
473.29 181.2 474.099 181.3 474.604 180.9 cv
cp
f
474.604 185.9 mo
481.585 180.9 li
482.191 180.5 482.293 179.7 481.888 179.2 cv
481.483 178.6 480.674 178.5 480.168 178.9 cv
473.188 183.9 li
472.581 184.3 472.48 185.1 472.885 185.6 cv
473.29 186.2 474.099 186.3 474.604 185.9 cv
cp
f
301.42 136 mo
402.579 136 li
402.579 236 li
301.42 236 li
301.42 136 li
cp
1 1 1 rgb
f
355.338 193.6 mo
356.064 193.6 356.653 194.182 356.653 194.9 cv
356.653 195.618 356.064 196.2 355.338 196.2 cv
354.612 196.2 354.023 195.618 354.023 194.9 cv
354.023 194.182 354.612 193.6 355.338 193.6 cv
cp
0 0 0 rgb
f
351.494 193.6 mo
352.221 193.6 352.809 194.182 352.809 194.9 cv
352.809 195.618 352.221 196.2 351.494 196.2 cv
350.768 196.2 350.179 195.618 350.179 194.9 cv
350.179 194.182 350.768 193.6 351.494 193.6 cv
cp
f
347.751 193.6 mo
348.478 193.6 349.066 194.182 349.066 194.9 cv
349.066 195.618 348.478 196.2 347.751 196.2 cv
347.025 196.2 346.437 195.618 346.437 194.9 cv
346.437 194.182 347.025 193.6 347.751 193.6 cv
cp
f
378.099 209.8 mo
378.825 209.8 379.414 210.382 379.414 211.1 cv
379.414 211.818 378.825 212.4 378.099 212.4 cv
377.373 212.4 376.784 211.818 376.784 211.1 cv
376.784 210.382 377.373 209.8 378.099 209.8 cv
cp
f
324.991 209.8 mo
325.717 209.8 326.306 210.382 326.306 211.1 cv
326.306 211.818 325.717 212.4 324.991 212.4 cv
324.264 212.4 323.675 211.818 323.675 211.1 cv
323.675 210.382 324.264 209.8 324.991 209.8 cv
cp
f
347.145 179.7 mo
361.711 169.7 li
362.318 169.3 362.419 168.5 362.015 168 cv
361.61 167.4 360.801 167.3 360.295 167.7 cv
345.728 177.7 li
345.121 178.1 345.02 178.9 345.425 179.4 cv
345.829 179.9 346.538 180 347.145 179.7 cv
cp
f
347.145 184.7 mo
356.249 178.4 li
356.855 178 356.957 177.2 356.552 176.7 cv
356.147 176.1 355.338 176 354.833 176.4 cv
345.728 182.7 li
345.121 183.1 345.02 183.9 345.425 184.4 cv
345.829 184.9 346.538 185 347.145 184.7 cv
cp
f
374.255 189.9 mo
328.733 189.9 li
328.733 164.9 li
374.255 164.9 li
374.255 189.9 li
cp
375.57 162.4 mo
327.52 162.4 li
326.812 162.4 326.205 163 326.205 163.7 cv
326.205 191.2 li
326.205 191.9 326.812 192.5 327.52 192.5 cv
375.57 192.5 li
376.278 192.5 376.885 191.9 376.885 191.2 cv
376.885 163.6 li
376.784 162.9 376.177 162.4 375.57 162.4 cv
cp
f
379.313 195.9 mo
379.313 196.7 378.604 197.4 377.796 197.4 cv
375.772 197.4 327.418 197.4 325.193 197.4 cv
324.384 197.4 323.675 196.7 323.675 195.9 cv
323.675 161.4 li
323.675 160.6 324.384 159.9 325.193 159.9 cv
377.796 159.9 li
378.604 159.9 379.313 160.6 379.313 161.4 cv
379.313 195.9 li
cp
356.552 204.9 mo
351.494 204.9 li
350.786 204.9 350.179 205.5 350.179 206.2 cv
350.179 206.9 350.786 207.5 351.494 207.5 cv
354.731 207.5 359.789 207.5 361.61 207.5 cv
362.318 207.5 362.925 208.1 362.925 208.8 cv
362.925 209.5 362.318 210.1 361.61 210.1 cv
341.378 210.1 li
340.67 210.1 340.063 209.5 340.063 208.8 cv
340.063 208.1 340.67 207.5 341.378 207.5 cv
345.222 207.5 li
345.931 207.5 346.538 206.9 346.538 206.2 cv
346.538 199.9 li
356.653 199.9 li
356.653 204.9 li
356.552 204.9 li
cp
377.796 157.4 mo
325.193 157.4 li
322.967 157.4 321.146 159.2 321.146 161.4 cv
321.146 195.9 li
321.146 198.1 322.967 199.9 325.193 199.9 cv
343.907 199.9 li
343.907 204.9 li
341.378 204.9 li
338.748 204.9 336.927 207.5 337.838 209.9 cv
328.733 209.9 li
328.025 209.9 327.418 210.5 327.418 211.2 cv
327.418 211.9 328.025 212.5 328.733 212.5 cv
330.959 212.5 371.929 212.5 374.255 212.5 cv
374.963 212.5 375.57 211.9 375.57 211.2 cv
375.57 210.5 374.963 209.9 374.255 209.9 cv
365.15 209.9 li
366.062 207.5 364.139 204.9 361.61 204.9 cv
359.081 204.9 li
359.081 199.9 li
377.796 199.9 li
380.021 199.9 381.842 198.1 381.842 195.9 cv
381.842 161.4 li
381.842 159.2 380.021 157.4 377.796 157.4 cv
cp
f
173.96 136 mo
275.119 136 li
275.119 236 li
173.96 236 li
173.96 136 li
cp
1 1 1 rgb
f
248.11 194.2 mo
248.836 194.2 249.425 194.782 249.425 195.5 cv
249.425 196.218 248.836 196.8 248.11 196.8 cv
247.383 196.8 246.795 196.218 246.795 195.5 cv
246.795 194.782 247.383 194.2 248.11 194.2 cv
cp
0 0 0 rgb
f
244.266 194.2 mo
244.992 194.2 245.581 194.782 245.581 195.5 cv
245.581 196.218 244.992 196.8 244.266 196.8 cv
243.54 196.8 242.951 196.218 242.951 195.5 cv
242.951 194.782 243.54 194.2 244.266 194.2 cv
cp
f
240.523 194.2 mo
241.249 194.2 241.838 194.782 241.838 195.5 cv
241.838 196.218 241.249 196.8 240.523 196.8 cv
239.796 196.8 239.208 196.218 239.208 195.5 cv
239.208 194.782 239.796 194.2 240.523 194.2 cv
cp
f
215.233 185.5 mo
215.959 185.5 216.548 186.082 216.548 186.8 cv
216.548 187.518 215.959 188.1 215.233 188.1 cv
214.507 188.1 213.918 187.518 213.918 186.8 cv
213.918 186.082 214.507 185.5 215.233 185.5 cv
cp
f
246.795 209.2 mo
247.521 209.2 248.11 209.782 248.11 210.5 cv
248.11 211.218 247.521 211.8 246.795 211.8 cv
246.068 211.8 245.479 211.218 245.479 210.5 cv
245.479 209.782 246.068 209.2 246.795 209.2 cv
cp
f
201.273 209.2 mo
202 209.2 202.588 209.782 202.588 210.5 cv
202.588 211.218 202 211.8 201.273 211.8 cv
200.547 211.8 199.958 211.218 199.958 210.5 cv
199.958 209.782 200.547 209.2 201.273 209.2 cv
cp
f
219.684 180.3 mo
234.251 170.3 li
234.858 169.9 234.959 169.1 234.555 168.6 cv
234.15 168 233.341 167.9 232.835 168.3 cv
218.268 178.3 li
217.661 178.7 217.56 179.5 217.964 180 cv
218.369 180.5 219.077 180.7 219.684 180.3 cv
cp
f
219.684 185.3 mo
228.789 179 li
229.396 178.6 229.497 177.8 229.092 177.3 cv
228.688 176.7 227.878 176.6 227.372 177 cv
218.268 183.3 li
217.661 183.7 217.56 184.5 217.964 185 cv
218.369 185.5 219.077 185.7 219.684 185.3 cv
cp
f
246.795 190.5 mo
201.273 190.5 li
201.273 165.5 li
246.795 165.5 li
246.795 190.5 li
cp
248.11 163 mo
200.059 163 li
199.351 163 198.744 163.6 198.744 164.3 cv
198.744 191.8 li
198.744 192.5 199.351 193.1 200.059 193.1 cv
248.11 193.1 li
248.818 193.1 249.425 192.5 249.425 191.8 cv
249.425 164.3 li
249.324 163.6 248.717 163 248.11 163 cv
cp
f
251.853 196.5 mo
251.853 197.3 251.145 198 250.335 198 cv
197.732 198 li
196.923 198 196.215 197.3 196.215 196.5 cv
196.215 162 li
196.215 161.2 196.923 160.5 197.732 160.5 cv
250.335 160.5 li
251.145 160.5 251.853 161.2 251.853 162 cv
251.853 196.5 li
cp
231.418 202.5 mo
232.733 203.4 233.644 204.4 233.947 205.5 cv
214.121 205.5 li
214.525 204.4 215.334 203.3 216.649 202.5 cv
220.696 199.8 227.372 199.8 231.418 202.5 cv
cp
250.335 158 mo
197.732 158 li
195.507 158 193.687 159.8 193.687 162 cv
193.687 196.5 li
193.687 198.7 195.507 200.5 197.732 200.5 cv
215.132 200.5 li
212.704 202.1 211.389 204.4 211.389 206.8 cv
211.389 207.5 211.996 208.1 212.704 208.1 cv
213.918 208.1 234.049 208.1 235.465 208.1 cv
236.173 208.1 236.78 207.5 236.679 206.8 cv
236.679 204.4 235.364 202.3 232.936 200.6 cv
250.335 200.6 li
252.561 200.6 254.382 198.8 254.382 196.6 cv
254.382 162 li
254.382 159.8 252.561 158 250.335 158 cv
cp
f
243.052 209.3 mo
205.117 209.3 li
204.409 209.3 203.802 209.9 203.802 210.6 cv
203.802 211.3 204.409 211.9 205.117 211.9 cv
243.052 211.9 li
243.76 211.9 244.367 211.3 244.367 210.6 cv
244.266 209.8 243.659 209.3 243.052 209.3 cv
cp
f
46.5 136 mo
147.659 136 li
147.659 236 li
46.5 236 li
46.5 136 li
cp
1 1 1 rgb
f
124.393 193.8 mo
124.393 195.5 123.077 196.8 121.357 196.8 cv
71.7896 196.8 li
70.0698 196.8 68.7549 195.5 68.7549 193.8 cv
68.7549 162.3 li
68.7549 160.6 70.0698 159.3 71.7896 159.3 cv
121.357 159.3 li
123.077 159.3 124.393 160.6 124.393 162.3 cv
124.393 193.8 li
cp
121.357 156.8 mo
71.7896 156.8 li
68.7549 156.8 66.2261 159.3 66.2261 162.3 cv
66.2261 193.8 li
66.2261 196.8 68.7549 199.3 71.7896 199.3 cv
121.357 199.3 li
124.393 199.3 126.921 196.8 126.921 193.8 cv
126.921 162.3 li
126.921 159.2 124.393 156.8 121.357 156.8 cv
cp
0 0 0 rgb
f
119.334 189.3 mo
73.813 189.3 li
73.813 164.3 li
119.334 164.3 li
119.334 189.3 li
cp
120.649 161.8 mo
72.5991 161.8 li
71.8911 161.8 71.2837 162.4 71.2837 163.1 cv
71.2837 190.6 li
71.2837 191.3 71.8911 191.9 72.5991 191.9 cv
120.649 191.9 li
121.357 191.9 121.964 191.3 121.964 190.6 cv
121.964 163 li
121.863 162.3 121.256 161.8 120.649 161.8 cv
cp
f
119.334 210.5 mo
120.061 210.5 120.649 211.082 120.649 211.8 cv
120.649 212.518 120.061 213.1 119.334 213.1 cv
118.608 213.1 118.02 212.518 118.02 211.8 cv
118.02 211.082 118.608 210.5 119.334 210.5 cv
cp
f
96.5737 193 mo
97.2998 193 97.8887 193.582 97.8887 194.3 cv
97.8887 195.018 97.2998 195.6 96.5737 195.6 cv
95.8472 195.6 95.2588 195.018 95.2588 194.3 cv
95.2588 193.582 95.8472 193 96.5737 193 cv
cp
f
73.813 210.5 mo
74.5391 210.5 75.1279 211.082 75.1279 211.8 cv
75.1279 212.518 74.5391 213.1 73.813 213.1 cv
73.0864 213.1 72.4976 212.518 72.4976 211.8 cv
72.4976 211.082 73.0864 210.5 73.813 210.5 cv
cp
f
91.0098 210.5 mo
89.7959 210.5 88.6831 209.5 88.6831 208.2 cv
88.6831 206.9 89.6948 205.9 91.0098 205.9 cv
92.5273 205.9 93.8423 204.7 93.8423 203.1 cv
93.8423 203 li
99.4063 203 li
99.4063 203.3 li
99.4063 204.8 100.62 206.1 102.239 206.1 cv
103.453 206.1 104.565 207.1 104.565 208.4 cv
104.565 209.7 103.554 210.7 102.239 210.7 cv
91.0098 210.7 li
91.0098 210.5 li
cp
115.592 210.5 mo
106.386 210.5 li
106.791 209.8 106.993 209.1 106.993 208.2 cv
106.993 205.6 104.869 203.4 102.137 203.4 cv
102.036 203.4 101.834 203.3 101.834 203.1 cv
101.834 201.6 li
101.834 200.9 101.227 200.3 100.519 200.3 cv
92.4263 200.3 li
91.7183 200.3 91.1113 200.9 91.1113 201.6 cv
91.1113 203.1 li
91.1113 203.2 91.0098 203.4 90.8076 203.4 cv
88.1777 203.4 85.9521 205.5 85.9521 208.2 cv
85.9521 209 86.1543 209.8 86.5591 210.5 cv
77.3535 210.5 li
76.6455 210.5 76.0386 211.1 76.0386 211.8 cv
76.0386 212.5 76.6455 213.1 77.3535 213.1 cv
79.7813 213.1 113.669 213.1 115.288 213.1 cv
115.996 213.1 116.603 212.5 116.603 211.8 cv
116.806 211.1 116.199 210.5 115.592 210.5 cv
cp
f
90.9087 179.1 mo
103.554 171.6 li
104.161 171.2 104.363 170.5 103.958 169.9 cv
103.554 169.3 102.846 169.1 102.239 169.5 cv
89.5938 177 li
88.9868 177.4 88.7842 178.1 89.189 178.7 cv
89.4927 179.2 90.3018 179.4 90.9087 179.1 cv
cp
f
90.9087 184.1 mo
97.2817 180.3 li
97.8887 179.9 98.0908 179.2 97.6865 178.6 cv
97.2817 178 96.5737 177.8 95.9668 178.2 cv
89.5938 182 li
88.9868 182.4 88.7842 183.1 89.189 183.7 cv
89.4927 184.2 90.3018 184.4 90.9087 184.1 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (Line_8-Template_166215824640.eps)
%%CreationDate: 12/9/2022 5:55 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7R;*UgXRedMa*%nX58^7i^;p:t>I1e!b]/Wp/]fi.M7'5PQ5p\kY&`Ngo01G8'4(V_r?F5J_tj0E.U
%+8sU9GMg16nuK77IerL4rl*^>e'[T4hKus%nrM;dkF__#+8qP0IeiipgLg,mpOT4'4rk$u<K^%+';)sbp&1B3Dnl1=p[;G%rq>*%
%G@/+3s6VK-*e*_OmG2-`r3cIajk]t0qWk?BrTi:gY@#$?T5r5@5AsoAq!.1s0AaBloCBN*IXb0r^>R+_pT9r3*T5h>O"^M1NJN&V
%qRc4WhP>'Hs.`s#g!fO=7EXY's7"4`^]*NQn(thWm]1PMs8*n5l'"@#g@_XUJ+HS<+J&Jj0$3W>q;^;;fDkL6qldc`CYnGZo$?e(
%p^UU-06_pE%4'j%X=b;]4:XIF=.1<%j6$aKD`<%@0DmohQ+O'Jq4#-EL21=:d#YfmjNlLS8<5A'aj53qG_:MCqTUs+^\mLW^L1s"
%r@I'ukP.PM7t3)[e)Y<.8'aiBpJLCJr'L[=rI'1VfDkEll[SlPh1'_Ko#oYRm9;c"s4slmqL@RqNFUe2;X\5cpGpK4J,eX)?b_'i
%GAk7m:>VRKEU!5mbBI=-r`Yn:p[dD1Qi+^uLW0;d(4Z5PrNBRX-R8<?fAGV0r8MT8L]-VD^45_j07WR3K.ktJrq`,9Du]OeJ)q^N
%]Zd+&G;^JdngaKAC/s-X;4;tsH#.repqkTFqEdu,NA9q9r^I+S?bcX+f3c5i`QqIIFM=Opn%n,kL@:bJs6@cjH:P]=qLA9fp[e%W
%QiDP^!-oUBIJ<T?^S6t-GkfJ24?2d/nlN>ZkAS+_GkVCakZdt4.Pp"b9TH=6rS%7^J+.C)`V89BF&DGG?bMX:^3Y]t5QC)RoPa>Z
%^\R_Qq;\*\J+rn#J,]/6hL5CVc^oO[mN5fnrR]Z)^3fT\55COhJ,PH.6[nt'h9S&Nn,E%Zb?*,Ir/N]00>IAGO+0ZTnso/Uhs"M0
%>lKufr?qO3a.+dr=EM[Q5c)farlaW2hgKS23$^07IX1\F?G?I%@ljXZY@#"lq>QD(Lq`oKX+-8H]TcL+Hf),il;iYe2tE,V'&22H
%ijUa(rTU(0p%#_E(@D"qm?c^"n+uY<k#M12?2j+JDuT:_f3`t'-9=7^inki'GMg)_s7WYRl>=98rnDq:qqH>`^>:M0)q^eV7t1K/
%T(=&d,160Q(Q^l\a6if`jk!jhp$;?*^\R&r?@AdP&,\RCoE49*e0oX^\,N'O?N1]UH[Nh_V!IduHN*#-UATIJ>6!/3^\ZQKhnAl!
%;(qtEroO$\?N6%rLsPro?bM`$q!M5@J+_X`rOq($q$+joh66hRjYmaGjbm'\h/E0W(5VP`nFN:Pp8+J<4ahZpnRq;tIef814hnN(
%g#'Jkqso`J$GSK]XK71^jhl+ArS$)V00fL'+$T_kJ,fGQ"97JX*pjM#icoK+*%t2^-+,SX8l*o'HCg1&Em6bNr%pX]cc]0XBr0#,
%rj4ePkOkdQf%TDf:Hnf[5-</ro6.LrC27[neXj3^rTL6D?@2"5YPt=^oOn,JIkctG7NQ]ZdDm)>4;gr8_g")2cXWi?VcX\?bUQ,P
%A'VXGGVYo:L\YaMT.f>bFf_t2elGpr2'./T1g=`YOlND\%rsdrj1--_56#H4=>-8e_`gY4A2t!Xb+nLj49gj\a,7e7H`G-LT?7+]
%YiD,lcS*<H5Frp_,CT@^r3N<sd8<)Pe/p[(ooL5uP5\>!pu+Sdr1UmMJ(l,0IXLJS0o,Dr;=-RHpd:*,eDgM\)C:58.ABggBU*5)
%=,rMD%F+H#4\IFr[q*l=/J"8d:\$l%SmR^-qPBX8&WIuer0_8e,'p+Rc`!//03W,=;"RG";l9O-);#Je=aNnliu1GcK0H8WSr2BM
%q"uqu4ed@tHV.tD0d\bSkTDllN#0u3cp]6;O`X*1AGSi=PR^<!V.Zs!W1+:^-e2%nUUHJ?T(6CFU&R]FVJ?&%5/d!8NotDpn:Ndh
%#gINQ6q?@f;*JsK+#quLKA'1Klp#`RO$;\iUrW:X*p^9Wdc9e0nbX@Lh;_$*-Tuq<s8N&Gj)<<n:IV$@V`msNA]b"&0O#iW[IT"E
%apYIU1A/bN$+u.sf!&?#$dg?Tm$9*sj?^/p6%)Y1:W?P0Zkq4=-1o;tdjV@t<3&^A.SkPl<cPf.&B$<jo&QNJT(BJB/R,tT_j$(F
%;*?.m7Pr9=2#cARY#ddXluG4<FAU_j*Hfaj5GW_u%idMH8B/TgBr'X_TAkqRJ'24!%EED=HN0l&%mBo=om"k4TCBVQg1.E5o-c^N
%4g%OsVA@Snl85o3N[1Y_F^$`j[U^#e(OKa4/rPI:bquE[*l;g;k*^ABFKh7iEY?\l'Ur3#PEY,pm&(Y.5?6*TYb3\gU$nRMh^*A4
%O)7^M^`dqL#II_Sd\H"dBXpFTD2EF_TQYtVG#5A"H>PX7Frkma"uG)3\k9@E3tRCGs/?d.Xtbpq)T1aNIoBEVk)"fdoh<%N)&)MM
%[V'aVSBg!<eUP-;DGU:h-&hkqIGfALiT&nlXbV/2&,Du]qD!ctpegE"qSsZ*j%$TWcd\_*PSYuZ4F?Tt(;o[:]dPP^o,#`FaerK$
%)4F78o^'Q'B/2l@/E6V2I?pKG%keuq4Zo!<5,FnJ:`e'6(G]/8A8Ejoem3[u+sZf+nm"ZU;_a**=NaFYIZYB<OHoR.b`O8.>GfW8
%-7aNW45^\)i47(;Vd_Y;YoneF^a_,PEKi9jYrnW$/:B#AaHC6tA84'.<JoE[BcLTu4I>mB^mY0iB)Im]haIX'g(6u?73`dH*`23s
%B2,HK:7WafI50-)BFt)CWDTs7QIHE.)"H)9O_)$G/:kpT@.&j$2:*q_;AIN\<4PN(a@,8Y4Vi=&csEHaE6&FHUkMsEM?=2tn:6te
%716^VqHq5c[U.rZ[@:OmGg>?;*Bpknbi5YB9r]'99tS_9j8\g4g?GQ6UKii6s3a*,8,ViGpdd&ei->6*O(YbE4T"@&iF<A^nY=h:
%5WJ'3L\1AhD>uEbp]lfL#EA9ZNUd=6o'(JuK1>Zh7eq[+q1D04F?NNse@RsAip$?d5<DX?0DYYFnULHA&`8XSB*'ulpUWi15FRNt
%8B,>&s%#YL1On=)q5taZH)!_L[_DN9rB:*[mM&d2EnAb<+hB6XE?k1C4l%L]n#k1;Sm&fa^\sXo1Sg(tqcuDR94$Y!cL'NeS-B8T
%\KM.OldKJcGMq,)O2hpp+2AP#i!IO4:E\tU*]s@@NKH@$Y/=>A;^BDELYqQVShr3ErU74,DB<AW]Vjpu<lum!5<hAC[?TcO<_QX?
%q.R9,%@GI$`pIc'5^Gnp=VPg1.&N-BV\U7u(<?%$j$.?U5(PF,oUB1I@l?[5lWh3YjblWu%q.,_3;,\naP39Vm[qRS*osB7OP@k_
%I``J]EF8NXncWF)aAYfY`eHo%M\op5T<QR?M3U8)f8S,XGSTUeeCFXbXf3jBN`Obo5Oa^E.Bu[s+-_BLeII,$V(49rZqk5nJVH<c
%YD*@Ldu*A73H=WS7XkB$mA`DI#sRbRq!fi>bR\GZ&PM<[U`_7gj[jPiJG[,_<Fli[LRTUeXtZc&8`g3'.F*2[n>PB3,2?i.q=:/M
%A'%M@"?]d!TJ60@eAD3=iVk^o3]*\>RF0@*KRQ8:\XUtTEuCkGo7,A5c>!Wg7e<PshH+BS#6#>gV$R11Y2.7:r'h;b!F3>=3S\C'
%,*PdJi:h&0IO\6`VRi@((6oI`GM?lS:0@.W/j8DZ+oUqi%b(Tq/\5(YO\E>b3'+f$ga[^-KWdPJC>IKU+1teNX7:Kh/@hh5N%:@g
%-J+Drn*BcaP@'SM?$n:dN*16J$imksnufr3PkPJSEQNW/\c*c(H]Tbn3@rSdgd8N'7GL-fJP/I:P>N]^Tf@MIjKgEUO%i)T&f4=`
%4F+"W,8R%!q6cE_ap9Xm";i:fesS3rQ83g,PhBJ:1PHbWH)r@r2*N6Mi#kDfWO'as)1VdHi1gO0*s"'W0l-be?i)\3W/DWdnBA]M
%"q'jarsrhZWt$D2;F[q--Z9!KB1V)$n9B[>##I"\@_':`<WFZl2Jh[aFmZ<>I=Sc^YgO2\oY[?M*mZo#i2$Fb&.Gk<+<r"@q]:5X
%X5E48%3j8>E<^H"aMrsH49iTm?s\/'#0:!b31_L^R83a4oqOZR6'*R^0?YV\@rh?q8`@NS0[d_^RI[IRn04ii'Q.?JFtrfMUahP$
%EH_fkmI1X=58!\<Yg8)+OEJ0i0Vn<!+JG\Aj@k;H)M9pc@2al5ShV5VKYa"k&5-R?,r$\9S3`(2J%3*4H$:&l]$#KB[-uGJB]&LC
%W"Tf31Sqp7(U]ONpqT+-kcK,;;XGjln^I01VJWMlkXB46H:ek%Z+N5FZgs0?L>'i1ZIb=*n.56EoDQh2SF?!3okER_O,ehaFH<9o
%P=ATc:OA.X3)g?J.S>E@e'_)/5KD0L54]C?Fai6jO'I?6dG+,/&Ur&P%T[ghc(LB"S@f2mS372qh5th7HDu*uhUgW-?*<j,'W:jR
%om7RuSI^,B7/uH=rtYS2^&ILVf"_6Err,.Dhu?'>s!n$+h-]%;_gao=^AOL6r=TS;9&B*o)b;&Vn*Vh]@_]+]3-XmYiO&b%[s[_D
%:YpTqm&O2914Aut2g<$`.+Y"SIJ</Fe-t))pd0m`^3KMFec1m.aZA-/I`[2_rtT2EDtlQegjen.p@:m!qQG$,j=8G*^A;gpd;'T%
%<FulE;.[PcO2Opr?p11jes,-6p\->KYNqZ/.GZ)BpU_c@i/eWF7EKU_=nqF=]'lr5h2/Cq9%A+:L:i$^047ELREJlOpIS?Gh(,'U
%gV)f[nWpLT+e1L7I2+Vb=4b,6X"K!QT1#I2eT*=c1])I`rfG\'Y/jrT],u@44RZJi0/u`Fp1pM:4RPY--Tc7rq_D":gnDdLH<m[p
%LdEUpD[V0Fk.3)6,ittJSk)9hNB?t,;cHEXiuW"9?'WIJ*6Z%:pMC"a>c'_lQWYsgb?aN05i1@/Gs?$9GurIC&bG0<>*L?`f[!1a
%ict1,p"UKq$6!)u)rLO@9rm-I-Jqk<Kq6f`="=.YQUl2fSto0HCt:*4]9R^N?-(/%B@X"8mcWgu[=gJFk.PH.FB@Qub,Qci\I[7K
%1CDRs7!\GG+!qGDP^;,CD^-:DVoL<Rh\@%5++F$@/!pn=>31&*=j[\VMd07=^AP/1h.jQgS+Z5Nd_5R?iRHu^MX&H,r_,)GH^4%I
%9:7?2EZ+,ObN7dugNbRPP.\N@dBUP_^.MOR/'\h&:'<=X`LE$N\dZ)*p@seRe'T,!k?U+/Tp?+;=lk:ZkE9Ppi@MlF(3B@nEbD+p
%jjhOfXEYI+j)X^4;bh6d]S[+[Npi*Q!:"k#V8_66>e5[&Kn=Ls=-MB'>01uLAfX\E-_9AFo]o9WJ8biCcC9_kL)FHE*'+ICQ]*X]
%8*5.XijXmm\N-ohG9`MK<Bg?K`<:Xp)!rf<Z+N,d=[+\4pipd9([Q^2HeQaB=e_[\LYIks'&JFlTi"2ka=qs^Pu\o;@QMSDQM2s4
%n[q;1LdH"M771H):e"`Rag.C9^%1U4"a3$jc_^G$MeRFF4%f6IL;N2$-F!+>[\B2IG]\'!I/D=kjR;Sfs6fV`9E+in=ZX9BrURSP
%?\/X$QB2V9r6(G4P!?VVju6Y[q^4!_<^1n9FV^>frr0\2^]GdVV=ap/k7GnE@$A[q*V,f+nqaRi\XceCnX*iAns-+JZ&tJ+W0g9/
%7eE"`kTdc-OdRVUZ"Ua572=!Mf+uFbM3Y8_/;`B.ONJ-_o45!J&9Be!Fru<I/bD/l-886b`/Fk+f(>3<8OPl<]M9)&[G'WT)p3]^
%L<%ej$],_OF._\p;+$iRn^J4UESWd(2imT^poEsh5Q[)0rJK`_F-VUd"21!gD,tY'>d#G)9_*VuV`fg:;8)EVGa1]5Z03G9G-1__
%.2?&G9jGm=3HQ%W`K&EKhKK[9r19[URn()]&iYHIP[d`R4(A,R76@FWA`06/6#)A.qIC.Cr.m1H#\I4Zq0JMmkolKiPq(q)/3laR
%ar2f,lB"5gPB,80`j!Z/Z9$,(JQk=$CXke:\bHPV>[*lOP%]3DOK6N]4CuKr\\;Ub\m)ITL_4+Z@EFV/>bXJoTt',d-k"T=P=_9=
%q(8TjM%(_gc<An&0ThARFla4cFI-DR%=,sMA[t)LmAH=$U03LSrB-3CH)`r/-kZL<jn][l6^HS3@8PdoPfIPOjpW#:\TU'q*o:.u
%G\jJ?o!ke;N[kO5/BT[*jkK6*nZp3Z]91_Nn-aFn0!L8eBeG[S4iAt2IKnYKmJCWNYk.4QFu-o!kih0fDF\'FHh,E/d!c:EW3!D2
%>f:`gq&@a/hb:bl4MZB613V_':(1n$RNZ0$"K'/VcB]VnC*p-jMg;]lEe.NBc?&6[7pPt0G9dB;PL6V<B*(0@D_%:PNCQJtcZa\p
%k/-@uqukJ.ak1;]TJ;0hHg7Ybl[]e_bBFTj22U$'A!hJ-`5.d3/;ct^(M<?WKWtP%ismPA<-6%A(L-`"A"q)Pk_Dj!1m*[]3<]1J
%i'G/#nl@N:W8^J?[D<"*$Ct6"PDTOn];UGe4-c8Lg3I.+c%-TtZu[c%i6RhoS3p7ElsG^V_*tB'KtJ^7L3/DR6S(,R^h-iI(;:A;
%0>arhk?;>jDMar7Mt3;l(j89Wc-^:f)G/!5,S<OWV<4\eR-LMu!_c&h*s$Gn-$U?fmHH[$oNURZ1(t$#[B-AK2NiIKqbj[Salki"
%pm7;M]P3mB;a08HM=0JEUq8!=jG]MZE+$7!p,7qR>&$&+n3,6OBUW%\;"%!R972LlA[Wshd`3%L5SWlRP0YQP<P.%]3627rKWJkX
%c=C'[LYfl7BRRP#_^XQ+9t8\lb@lfBC<FG<BXja.Jf6h0;Fc<%QGd11=:%_3Zb2!`:47i3Y%_O'=PcOsl0d&fR'^/]dHRAPYuB]N
%U1$/LFE[PWqdkT`X02gSr+Ob7IsgJ5TO;"UrjLJM#:)&A<kCnWH?&Xm6B'#EgYJhbR3;kYB4'17G&"S6U@$89AQ>m0XLkg#>d#(*
%\@q)W*oZfq:[^Rr%c<C.b]JBm>c%"WiTDQ_%sZoQWkY1EjX:t3/dO=70nZ6(TDF8:UCc)N?MWMXBp%oeF#c;(p/H#p'A0\dgPTTl
%j5/2NoDK/7mmdPni/&L!^BD$=rntqEC^U_B.l%r)[[!j0E8nlC@p?0TAYiWDgJShU1k`oX@-Se'Xk22@H<W)u4LPE)b3O=h.ktW[
%3ogq.U-=9/o[oHlr]RL(&_hm[kF9h!b#Q\O$Z/30MF!=JZpiLnI`s[V7Em=UB8!^tXN7HC&_`*XVpH3DC9;R7H-0Sb/Ol9f[["-l
%LNSSm5rPTREK=pin_gZ(9Y4Hi]#M1ORp2:pa0oMjXc+s*Ksi\aA<",h[U__5"7OP;>G;mD+D6aNaj3j&R68HrTI:.dN>C*.5"b(_
%UKXDHjb&P.:eU.tjtf,s[:j67#\hEWJH:-)BMgXiOWpHP(C2P@j&pEqHfUKqnZ3uPjtu[S<g'^<VU>mF::)a2n0OZki#@^tcGE2#
%b[)NaQ"JSjI0jOp8Y^"di@MOFXPe-N*m]-hd2jr]1+W[CRS,anU`PB0d$RPoBF@h:bf!Aj`3Z\LA_;^n-m=%sR%O-4JkLK*9.^Pe
%rHOtbY',Y7`BEU#r[cpRmDE5[\X67e)UI,8$U[3u(,7R,:*g[V3/MEV_cb?s5Vnq!*I?]#Nsj7lV(K)'eF(E;<;V")E)tao[.;t3
%IVtbFs&7=H*t_$T"ct)HPm%NP>f8DJ)(ge`LFi3U\=dAqNZi)9ei^#C+/NSh!6R?ajH(02"t.]3`?M0a^SQXc0TjAZ/-Y$*9iOi_
%)T6:I9GN7+GFh_=/4fh_J*^3lr=<lRk-Xc9$eE`6lkBJrQmYDEIEKtc8nl]7THSq)EUG3*4l@%KL%F'R`>_Jd6%Af-*sX"0Tg;a2
%(h,m9'Pr[rH&>Ns28IEM8'[F=JH"meD2GqlUe=<E2p@`<3-F?r^M60e9fsu-(nJJhj*-H_]#7A:gP^g`ah4rMch\:n8s,0bc.r2r
%2ebPP5#h0:#=QIm!@.)%+O&WlH=ZY!'.>BD=HYYo;h7Nc8=CO*fn"9:49j,"GqtJY@c92!>H_=fF//osNJLFH'?Tfrn=ofqW:GTa
%F<GKT14iWI:'!7K$"C;8)!-ko'MCe_6>8M3LgYjos7i+MoRj1l(?O1o6(&[4H-T*%K9/fMD]pHD4GP9hl&*U%cIp%.fr/\4OQJ&Q
%M*4(ZP['Jh7tNGBC@PBd#srt-E,?db#l@V&YC+J(<kK,*+*NN<(-[-rcOkcN=9KqUKT']R'Zid:'B876"lsqq"9DQCJG2_\hVqC"
%2gVKc:=I($HEJqD"X`Nga[/k0@Q+&Q("pIJFO!QA?-#t7b`OPHN-C=-cPN=n3HF!`6\J+spI*/#<^JP54J3BK_jo\%b*!Z7_[Nr@
%Qk"5/QOY%5f<c]1:c)08D[=Ckb$2W-4AgSfF,205B5_\+;c`M&G4#o='0]=To0RKB+.aBSC@K_U8F3A.*$Vc-Cs6?mB5j(QDiUlQ
%jI/P#22k%]c>K9I".@(Yn#XXc]1F:mjMRZ.8\:L';''H7p0;R]-15BR:7Z\<M-]\@9uQ44Yd\g`E-+uA?.&l-FQ.0R2]k3=5378,
%'.fEEJ^[R0S+L-Lookslr[n[/(?5Lj6MUBINo;WI$;QFk84paee^U6#g=^/XLuPUoonXsB+Y";W\>)^@+"Ne>g^TAsUi-6udh\1F
%WO:6KT]9!kRI!mU]6I=9odGV4+^g5)ld;IkG-;5m2MC>KEE^.RihS(<qEgPh;;meM$m6.6OJtmsl&hB6Ndb^kg1eEhgjO%]EDf81
%/.\I*IWSUZ?0"s\=*;V8s/<TBh9I)bqKhe0^V_]#,WTY9RlD[r8S^_\olGK2)Hhds$)^<u-S_>,S[cdG1P3kM4X1ELU;JT/V4@io
%LoV%A:L3/G.b%DK+h=JQG=,.tB?lBTQBZA-AQt,>g<RfT/:9socZOY15FfL60WTd)HugN%Q6Q'o_2a6#e&iiDB!HPA:JgMo[_seE
%c"(l]B##NMK<`\ZSmTtNf4=TS>s(CEFo.t!=[!cC:"71qEC3+[DJ0/"h$q=W@79;<L-iS0muYErKt!AF-q\\N&a3Wdo&>Bn7+'i;
%#Re4rM%KLHH!K0%31%\-=[f!db4p-5e:1hq:`"isMAUY0DDHT4Ah2'i2bkbfBqs\]U1(]!G=!Cdd18XN\qWh[:?WJ*hoM`-L0=;;
%pdZuSgc1u94-c71%F`i%j6eHD(O,?o2SX6Uk.]rklGX(c\$m<rP=9,nchbQ4nK/LEYK\a\Ll!@+rT6R3bb(ocF.?N!'25k;G#(XQ
%>0j/5W?LU.U_S)d+gJ)&Ahih]W'teTbEhA&I_)OP,1^\Cen>n]&=qW@lVEltc^;Pm1Wu4Qa$H6sECn_(\14Q,OUFPDK?4BR:D`^&
%(ed^*TX"X5,,9iP1rT<5;WXqPMS*]o_D8A5.qa9D"ptINOc_rK)Qlp[_E'@aiR;4C^s^c"&$L(F\cBiT=[>RK`.`2b?A>%4<j0^[
%1C/t!/8rbQ3Pl(+:F69uHMC%Y9hLLI8%;q9NFTg2'-G^E8F[=(GtC]l/'dp_%EZReJ]_I!,9m1E/qrVSTQh&E(\aL3JOO</C"b;L
%V?19)Ju:^@ou#$;a'M-u-mq!>fQRX)<<N:6U.7UICtHN87k*D*2eFHfmqh8*XU9HK@B#:Pm9k2*4Q`e+)4XYrFZfF7H^FjZL`pGW
%2$8Q]FFt<7?kOD370,rWL9cW4g!6.B`3*jQL:A'oG^#HrD*;/^T2s^qm7"p;K]qdr=arb21,m67*91R$L)=S)HJULs<7!!>4rOUl
%rlC[o_$HMNO^A62WYQkY?$Z4%n4K+o'[LaQF"g`%I2\K:)WPe/#0r2iin5?4P8-*ANnrN1/B:L<]`uNV!]/EHMB"QaW(MI]1/?Bd
%%>i<*D+/@4-uQ">m>!ebMMO$cJg*#6`RZ(7[R%i/n$i2mb!5Nmo<:`-8LTR<&Sol/lNj5NM*XDqCn9B;-mme(>QK9&A`!]Z')a_D
%QViQ&.</>tpnLRn7`fAEQIT9^2Q`Z`95]\e19_[pWe),QSmfnhgH4ZEK0%7?c$XPY))J<I+crX7oKTlZ$>%EU".X'G&=<9rL5Vj_
%b(*k.o5)>;n\BXUF>,t2jhi;tI.ubm/.9h+)JJAXl;t"lIUW?*Dr;7t*qI;UPj<3H1aRP7/0s<s1u.)FMQ:iCl3n7R'H-8<R`%s\
%gP^gV#gq>mZ^u2k15qWd_Z\n\p?"iW1o:UV%eFt%<&CIV3oH\7p6`d+*(dD-VhQs^F1ZN0'"_nKC>rYV[ce-6?c67E<F'(3qX*[)
%nHdOqmB`D@K7'EDYWdtP8W`)(Wu)6??mak%p^B>9Qd&*<7gMEn*!A.cG-WG=$GZHFM-nb-%5CO'jug=5^dLZGf<jG45lB3GeUAq8
%kg<o.=+CSG,iT7epu6SZPISJ]<k+k@URDI^KoR9mSn2_pW?h[D&A33A!H#J,n*D=)X4jNrc=R^WcB+kfC1L]%,d7-#mIm8_4G%_L
%pfUD]Tcd4''uM>HOD"JXN8PanGppf;,>mSGNBH-obH]K]]Q-Z"d"PCc?p'P$N4qX<(CckN`"jKKSV_(bZuf[)"I?p/Hh1;8TtI-j
%O85!Y$j,jV'nmO:.gR2s>0j<f'Kd/3hN69.(d+N7AO_!]Jai.G2"ffuGbEV,_L)B<cXJrB2:MOCJ4@@UKgk**Ge>cU`]=qX/PD"D
%P(DR0FK)rk1cu3l^hWu]%ujfE/K>g-7uUL,i=V0X9AR=U&$/k;)TP)+eQj?gE/BHu6A@_fdLOK<i7(-b.c*D@Ki:?k]Uq6+M-i-q
%.MGU+S'dR-Mtu+U;3uqNWHYfj`e/PD[nlk<&V*Z/O(YUJ#7,L2'oEVpFGqpl9PYm(6Xl/i6aiU*)YeaT'`u"ESJbm>pcDp)dFYV4
%oY0NKa056n7DjA#kj8"7:[/EuA0`W:)\>0l\<7D]q:1LY@SAN(L;k-qAO)<oMeS?X`!@KHgA@jX3=NV??%p5#)+mQ@M!b<)[QDD%
%Wp>%4Q^CpS2]'`up7nZYchS6o5QZIqWC>b@V-nhn*2Ag+0nB)K$F=eS1'"6:</'Tp"3a,!5t'*#Cnrq/hGjY$1"/\:#'N']#_:`K
%Oa3:pFRc"t9Q^`d3_BWjGH-""[0+d]gJ![f!Ta71,Oq3&HjEoL>LF,)Lf6YlG0lA>G-U$-5adEiLuNuIR,qkt"1t8Y"QX"\M(S8e
%7MoDX:A7.OHgO(12@?AfY8mTGWUK`Wg&^8*1dL63"%[j)dG(fEJ891GB"W9eYQ<`MU3;&N9Z^jI&"rgebXD+(TG.h&Gjtbt";PiS
%%q*'OZ&G/Q<^$LB^X#jS!*1r5`T,qS3$dn$H@4"kEg/LA@e&g#_@[o=55I<?&@`he$pjp*RFMJ2H4#L7d`r9+H]6>gY[[E5[1Es4
%eaI?6N;J[]DBJN32)qNUkdHqS^sk+=+ca,69F#0N:6Ke'SCqAibE/j]S\\ha]IC!u&j+Vts/1TP(NAXj,hK)O3,UB1Mat:*f$etb
%J3AY8W"D\[@aT(Hq`%V`XC.IN0^Bb.+-KH(`;]4[?66=4gCh-`.j'?i:):1hSK7EKql1tt,nRO%%HA&5ZU`@<47)**;GD*6aa#m4
%@-"&R+>@h5:iOCp77BLMjJ&Fm0QN;e]40iqW$!d7;,n/E\L8u<@cX8d+>@h5=:c<0Y:R1MjJ'"(+EC=a&.lCn"^W?m;*5C$\Yq.e
%LtllhJ]L880chQs$j%Xi<<d)h>a-*/6>kBm3(>M-%5&L.-o;3gS/3(H6nTqu/dT!92/n)9f,=cUcDqDWpc'oc#^Dlk)[&4I.h8`?
%3%m8tCn0)s">nD]%^*UWW&b2lS<k6!/hZE!0"AEi3s](r'HZTt]U'[EEH,<3&?rYm4pY7q<$,@RED_/rYdgVr#[H0F\bUfhXb$,J
%\@@aTTPT2R&%Gin"^H%e;*V9(HATK+CeN%Z[?K79CscD$h;YG9>[6(@WF7o@GP:6'YNl:3>ut:d8Si&u8,k[-/SYD@Ydc)-fZgMM
%i7(Upc5<sQfYD=80>kEh9:fR3EF[BGDEU%lIE!B">'Jg:JNcpP*af=0iY=fiZpn=W:^(@FSs_Q09k#7M?O(aAd9rfJF(ZZ$X7#2)
%MIiAFfq1;])rYnhZdj$+4`@hP_)m#9XJ\Y\UV->*IP/3hV.q8h5T.5F&LX\b6JuJV5)M";'K)7l*eYd_53A>'_djm]h,d/6U9?[[
%B]>b__PbZt%"WT9W_)PV^Un.q%hO0F53_m6rWoD:H-9]rrur5V>I.OmJ/T:qJB5cO%Nmr@Lj#/4l4S1"S7*]^Z>d)A;eK<D=#IDS
%icQY%H?U^!Z(Qd0W\1QWqX*[)rWp-BgLiZ`X#eK`_$Yn,oB&N$[qp<$eXH$B!99VPigSGafY[^T1\8/N/4kfSm`n..=,l;p`3U,k
%ka`l52c&&ThfbIGRQ!8jPBCsDPb2]&hX\A-+k:C9;>eq5)_nR(E97bDA[8cl,75kJ[mQt@-$t+6SBhX1WT`OYm49N+eVGr6=;fM\
%YKAVpdkt,:g;*.$S"6-C41]jao*bLO?GN\C;jWTBY?!1Mk!fc8?-uPkAI+B949.sGo1pUf-0>1K$7UgTdfI;4f9Y&X,AV.*ERYU1
%,ju,'?8EMdRO3=AcEl>31lMZq^2BS8-QAie`?<2Q4p4tg4o+3fWp:P.:ihnD#Bs^Y#=`!8^[9.]<ZH/)B[eo][!QeD>qCAQQ-'65
%9]CC`6YfEie],.=543-08W)E5FnFnVc3`F1rq/TX:ujc,.^/7'R^"GIDIm5Z(JP"\6["$[hPJM;1]smiW\^=hKtsj(kID9o"o9]0
%_PCB$F?L:*``R.0Re_qi8%6h=;b]leb-6!G]eHS]k!fdVYZoLP7]$NQc]Q`X;,TNCKU1r#P]K4)K[nA=KuC,4>0b&R61:_sVHG,?
%Wq/W4Ek8qt(lo6!h*1-PZ9W<bBl4gtVqmBsm$k$mJK:PmiV1lMBXEeCHM0mi$-ZjIY-5!,ZU;'FVk./QQaAP9SG>-g].XAJauitY
%-$H<GgMRjh'qO/EkYGb:6a_*tr(2Hdg!X[B%A]DKP)O-ATPJl,!qQiDI8Bgi%Ps/N/C@Nim$cm4RM\U8_E4MK:u/!o\u5r%bdb2s
%kP$'(h)sgq1I)iH3NTet-;=KH6`f(lHjA)Z`ZhfW&h2C3qNfd?EEefQDKmj1EpCgOG0N#:n,[hH#jXX16p1*f\ti!Y6g25NL2m7@
%g$OE@Z@s.2V4oif/-(*>PtpM%kSC[=a]-f`1)T_o`!hgoA;no4$oG1VSN7.8>r89>.[F.+p:T4L86A-bYNh9PI_U2U]:hC(md'"$
%pDa#nlfERh);HT5EWR7b/GQkthS?^&9M("bb@;UrBI65p",5=!%kf'oM9;+:2TC(t]N-r/Hf44S)h>Ck$8EUm`cm'b'+FO7n*XT-
%+Q!!SmRBKIa7jUn2ZgEq0+VkX1*g@o)e_0^i.lrp8EW[*B%auf7[X/aXBR<$nDcU1RjG&EDcCocpjp``$.V1p=K<Cj4Vi3XRN'^M
%A"3#11Sbu;j>C]0R-mA`-.BYqp*:9LYB>K_"ro$92"%#SQu]TN8GAn*r[@+n&Hml`\cB=Ne7.\cj5^GfPVrm8b=FR*mXb:(?X#SP
%"t)NBmq<*ST^"*dnFc4jnCd\bB,pZ[/T2C`DB1ld^>G%RqJdXCI"U=2`1bq)&-B:'gD-qU=DUn;Y:[=*]LIJ'-7_p,_.k2\PDj@@
%:i.'/)h!^nN]o'<D40#anbA1]ci]kif-oUh7;%snkh)!`is(EiC_/Mod1]0C@B_Q#RTfnQr:Gu_c?:QFW<OMHml/>R8s7%C"?1fg
%W%DH0eU"cVXpqHu6.8mS?u)DWaQe)sp1$@J<]AHQg<DV&)WU*2klt`_VG2>'=l\n>1"PD6mPbDe;(jMtYlWF3:A;K]eT9Au4PsQk
%irG6Y%^+s`F'SBL/3]Nqcq)\BFW42kV1sOJI2%c>%[2XaIY=T<=KV0?*@MaqC%nq;B2J2c)YeT%AGGAug_iSpDp"mQ[]Q/l:Ucr<
%&\Q]K%>9%#*V@Qhq$@grWeGGNSeeYTUicl;bG*b;h1X\nST^ubS\:f66eg_*Y\C]s([dd$DB:sqIdFq7lP"O=bsgn?B?W=b'ZWKU
%:d0qhK9o'S/^73E/8*21H9X$l+IBRe&C0-n6(m7IB:sA%OuJ7GnP3sDD*KoA[aMEu5gikOY\(PpF9Y,l(3uLEctX>h4G*R22a^K.
%DQ@sqJhp5K9+B7\4#5%O^>9_H]l2)``Jo47\'MN**T<ha51hYD3i!6sQ5R"9)2SdhN2Y?9qYcA1(1gS=3(]7%4k^3L*J+YaGtSUf
%*$#pH3A,Nq6cVoHUNdRCjn@Y^.!paAI3oiI"Y[F*%WXrtDlR-7%3VIJf%@Y$"u(o3GoCs$-Wmt3$$dD?$Z[ttNc9r;*!@/2]0I\:
%ICXU[]6ErC+ofg4b"kOq+ZJuiF57\sq:dR)Vp@S>VkC["J\?Y'811(rj*+OF_['RI6-=JM@P3oEcXjR.6R;]G]*?q'^&O)\\Qi20
%r!@Auhd;nbpn7-1_8#<55n'<A;A*Qd%DYdD$<pVV\Uk6:=]NIA0-i&B$%tT(=G+"$;HQ.+)[D'D":5eEa>BqVM:hMV<=h]m8ounC
%GqriR=RQn3<uP\e7W"N'0Y\]O22*iT\R0m"f#jLe!WUUK#6UJo=X"&:`\>qX`*bia!FQ\=bI2O9\k*%%*CKnH.fuG^p3D0(K!275
%"T]'MqGPO+_3+pX0EickVc/KLJl$=D\t'Hh#,"ql&ncS#d;VtNqJ`_s/8U'TJ06-a:"#j$,!0R;!@d*f.b"G8T#J)b4gWY7P/bhr
%P&Y:YN$Y#iD3IRHA(UFuL2(.k@C,eZA\CS-[JLaCR5p-)YRad`ia2n0^bjH(#)qCh3)BCZLJXX/HPL?n?0Or6/fdA3WMX(c%Yu]a
%j&#kShn*a,_6VU_/;QjNJcf.(/[Eru6@]M9620%QG+@?qm!'U_lpGf%<g-LJ+NL]^XUOqMC^45tcq=.D&9&Z5Y0&LL89/tA=M)1l
%EnNW<CWn4EC0qs.*JrNB"<8cA=sXue$u:g)rW1kIc#c%YnYdHDg!NY"Cu?`<U!&ru:cBmgm=E?668qQBX\/B9/Q@H]<Rk!FOg-<u
%*-UT+4#fs49dE>Wgb6HUG%+r+AV*>MXXT!hjUI;jEO=1+dQfVlT7.]%:mhe(jJ@t)S`YSW"HK>G6_%;uO'8?g=4CG7^fRh'GZGe"
%_0@BkY<?XI@$cK3"CW4#f++p+!PWbic-_XXKlB3$^/IWJ?U4:ip5U:gLm]%4*H4OD]12K0a\a/`jdQ^l:aEZgCUZjgWr.Xp&rJpK
%2^G^p!N.Xr.pbSr\Md%*@21&!9R:RG4t-Z]'k143'g#^'"G@I[Cn+m)bA2g)Vc1DDZh9E3\5.PajHe1(!IYO/U)_(E4LAdu;.l5j
%(e>\VDj*#uM2BYpYpnl>Hb.'^4WLn_`FVse_4dHTjf2n.,8>XZ0*WS-RcDad#6D`ML^kuo^^o>T9*@E7aaon+q(nhcc4`RQT$EhJ
%cf%%%no#Z:3l@Kp?PK-B2]4@V=,j(KI)`G3;Qn$10'W$5.S-jr-=P"?5bAS+9,7YnJ;-:?r=Ms(iIK3^CUV-H2A(`teY!(-K&D"p
%#r4T*L)Rt&R>aUH>+m#2VF80r^'J=#`$E?2@+/,KBc"8&W*5>-$oRSa4TISHqcD]b!3rc\*att_D8@FoR6Xu4)!"_1OCfAs[Hf>U
%PVh^gH/_d5""Gr2YSm5ep]H]n;MGU,=2IS"2j+Jl]af"%hMQN.-<'oQe)`h+ej>U1dqJ"i%tn.*"%'"en>X6/4L$q#9k0&T^b=I[
%.dpYufO-F1o7_PD!)!!],=6q/ArEgk<JKd2r01I-bt(rmGVo@u`Y6Cm6[['C8.20@S_l&rE\a0s@>5>NNP?#&j>%Yh5t!I9&X3k=
%ki`GFm8Mud;s#0);>%)Y\0ZA,nNNs9S%MiD.3pDb$rh5%<90jZ=MWd_UnR4)o@;$iL86%\SVP5QaX/m<0tJ"*>`?cp;(EOlJ.!ZV
%Eap2MWhjg*:eho/GlaM+5bG6fcs0F'Br^b_3jcV&e0oE""TY?N;Mg\S"KZB5d+D4#!2l't,qPE^,Ou*6ecM,Jg&gN3l_oD:mLL#U
%\S-_G!m'NWTT?"V%3gs;jS=umC7I^@Vcl.A$)hH-/(Pmph'Y`E"0`DgqJHF'i*\>Cjd<,CMVj8eG#dQQ@G#7a-]G!tc*XpDgWugX
%PUgND6m&m'nTC[a6M552lAO'BAB#sgIUc0+e@'K-_lU]tbo4+/G0AOC5`Au#*NRs<dG/-AbJN0ei^GG'\-:Zg&CAUT9ncApduNA7
%7i`MVk9BGUKk\'-@tdf\g'"Fp;K\tGB:G?'`MdE3VP3R\ONcPq:=_6Gk4TcB95ef)f),W!ie)cEPgR5U>Bt6TAOJ`-iiVt:c]YgB
%*.GB"=oS]o/I7ARZO\'^+9SLP_=nS+#Fc+FU?Y4W<1FkKI;i+LiQX7V:l5]F?u*S)V08noQ`i/i`!Q)-%P=]U:JhOnLrkV0XaDOp
%Yc<AP5s<Zt;jmA&*=SE2/\Zq3@1j9Mkcgdjr0F_93ro2sg;M&C"@-uX7U578&kq)#kjt3k9D6fGqB**pgG:UBZg3'bHr$,gX+Z'\
%S3.V7b^@I8]+hI!GjZJnBf(BI9r@VNV._\Q=X[<)W[-d:#-<o=3#e%9C.OSjHm6iNBF(^9[Fr\n\u<h)4%^>EO:J'e+YB@"6YSXF
%(^_.E$<U8g6EtNhI3.YFC:-hG!B0#tb=Tj;a"gKtAcVXjRV7Z`cAf(oqBOK-bk5T(fEYRu?C\`&0fP4kCY2DHd*;k]e!47G7]g2@
%lFOa\AY-OQKUeN>:;C[s?okc.lKr2KLD1gM38:2bCR-@[CI>Yf:tCQ^1YsG1"/+d1N8^,_"-^l2"upIj/O2mG/A!'rk!B]ANs53L
%eVmre2;%Q1NFjuJU6.Gq$j_s#bQZeD,mptPMYID2).c1#c7;"Eo%Vp'X8jT,dj?URA/lfD<13NHULV>OQp^pj_V0am_+VU'M<(tt
%-A5iJX(SA8oa]/$*7OWZ)0gL<T>mrm3bq/I5%4if:%C+AC7eoGDA<?s#+31s806TkX4[*<d'$?*J]`T2Pf3l0L.46i_0pgc!!BiL
%2H(['MlMW]S@BL"*39?4F1TCl-V0\]RB;7,>N3:1;"nHKoc^-!rp:op$'aW]DELZ]<!T7.Vob-qLU#g=LO%ip_']E@?WU3kd\$2r
%#Cp_f"A^(Va!J,<Z-,m?3`N9&geau[IRY1n4C>21_eARrc-;2eBi;GBnK>irWooMD,s<X^B-Vj<+H7o./^Aq[%GpW\e&+UQla40Z
%dXp^qgduo_Nd+Hl-`T.)cA+1a5]9b2Ls5K>C)]cm1V,4=a4;Xk"l\gL$F9-Cj)1KLKp/n6AQlN@3@2]Z$3n+^\17130F\A?DO.,:
%=e%uP5tNhjE0dp/_q&?LNoYO*0X:c2:HK&k%p?QHcB)7T,*V2uHq/T+aqN_t`o=#K(8-7oMF16B$/rt%3*?mG]-'3\7Rq[/V,9(f
%B/EJ"!`WL6W4WKeiiZ!9#\EtnIHmK;Z+Efr<)>S(>?oSGB4UR>BU(Wr9;i6]Su76a@HGa5/'Z.'Vn$$5S*(7g3@Qcjr52.uNl"'L
%+OFrFL-/6t7#61_\hJ6=2Fn_oWA>5+C4\^Q8Tk))NnEBs+sGS(oi+i[lSYQ2RWZLt<:9R8iAJ-+)7)'+jT0/,YWd4]5sY#S/db%#
%77*WR9WP<"lfHQc&XZ/mZ>pZKfo$3:8u+VX/%m9/%F`=E$C4I)C4qb=FGC(gqh-b,ON7G"JOrXWj5(99C>$ZtMf.pfl5[ORT!#'N
%c*#22m0X()D\rBh8j\I';8o2fSXS'H;R<+&\?2DnQC>C(j+@Qr;W3hMD(<qBd9"O&N(h$.aW(fMFhDNe[5'3?b2*E0U'=@Oe%hDK
%=adlgdKC1$`'@UDPab)1rD[g3@9\P'\(VNcD"/Wb.C,F^)bB2`a/QEY+`7ZuV<Ek"6BOZLC5Er9C#O4I6-b8QR1?&LcRg*^%ccjp
%DI%O='Vu>?d(K+rNJW@3LLE_Ab)dE5)!q_E!K79`.Ws"N]^hGZ7YOc"6k&uC>*@[0:s4N;]*K"oHoeM^0/-mNCo*L4KEQ?Sb".u(
%9rCD_VXusV4:X$2]50+M*s?tbEfLM@k!b'9?m2mcZ\(=l@T%_dN)]tY24go:9r8!=lOc,Y`)0[C_DfBT1,q'Y(N3TeYrsHbXU\Ca
%T=>fYE7]i4[dc,BMsL@U-K/ouEPGt*6\:&K<b+bZ3Ft?@ZR>qV+;?=J\MLS:FKdqZ?9t'Lr@#^[V^h`=@C?`AFU[TY>@:-Ca7(E6
%-!^oa,4J-pX@8.R'?n>)mhM&`0X;QqXAE,r)oe>'bVH3@Wo`5g%j3,AcrX-j".W2X(X&$Qju%QeI\P]sq*6o6HC*[=YS.4".Lm9h
%I+314/d"LGL#PH4L=Pu8/7;3<^hmF0H>aLJ49^H4_jP*bA^VUB*f6AZ"K[Qr=64:%`u$9sVn"[SDS;V(Taur!ag)$mM[2"h((^ip
%ZGG>`]s69\UV6KM)+cGXHS$(rUStk88t`/M#6Z'(^/-gNoJ[D7XGfZpL/l*qkn]Y&l#[]RMbYTU!n%(bD,i+O)6X$W_N'1[m/KUa
%k:uIBYV;arVSukDKQ<.UT'/$.F@P5L)!S9l_R\GFMHZH#>+!^M>3&:`0#Mmao\f^46fSLV$M3FGL'<(Qj`D7IOhmS!FR+K(,85[=
%)L%errD9T<L`\np0Og#m=Hu$^Yr5+R&O`>^98qra$u"pLNs49I2RXc=#cJaVN*?QQr4*AM$ALT6Vs`Jt==<u3[1@G+-\;mG6]&6`
%UZ-=hF6;Q*K8a)/_g'BJ'\Y_2!Eqo2R!geKg()9XKCmKX$iQN+/eMa.R.G&)GCajfr>F%<X@tGLj0^^F7C3-fZ6R"k$@t]42O=dX
%3[ZZU_32&l8aj)@ZKT>R\n!*n?p;Yj+!PPP=qI.d^_PgUk%/flcf)_>bH(b7)&8J\OSR<1,23a#'>Ul$QejUoIR';(&kJ(@cCA]@
%X9B6Q#]WbXU5VL%6f'3EQDTFlK%Um,2kf4*IW/$41IJIOM-u.FQ,(/P>d&$G&@%dkaI@icCMK*_beL"W*Y1m37sDtqg&0s2,Z;'Z
%!J7_QY*!8H4k3ERMTLO-,YI$;k8MPl##:Z9=N[-uD$\d9#>Ar34*=IUV&<o5P7/b3bG_YtBBl?G#n/0uBoj_SW@5pTYqp?>'VNjS
%qoqkcOWDsTllH0*&.lV6beV,.dE%bu'N^#Q:MS)sWi'Sr&KAgIo^"+]<tLU&p1]3"6CM_U62VOi_nkMSk/mJAcQRc<;Yu:J[%b*&
%XX9u]LbT8cbmS`EG'epO?3ZXW'`fqc`K'/8fcZ_B1P&^=TK'1rXu6@s"("NRAZTH-/C"Lfq[r?q8F^lXTbpYfU+e4SU#BB)Ait>$
%is7uSSuC1P]PqBjbulQop5nQ+Y8b:XE],m0J2&gd9Ia8+LGPHS_H!Z_p=me7gYL0pOjXH,`ak>Z/q@:GY9S^f!6,>\Kj),")Dj\k
%ckU_T]uIp^q/-AJ8=lUWXcCbn$a;p&>PmN_&F9>BW[/iB!DLXn<+gljY+9E`O>@rpB)-fETd"X"U(dn&U9R59EB^STX'ZW66:WH"
%`aVBX.u5%.Sp-'+c`6I78=AcGQ!iV&hkS)V*/KXuX^_)<N@For"hV?lE!:j(=;3QYmi&R%):T`Q2LQH"RdY?nd*>[N::G%Qh-ld<
%681=0hm+eP[RB7[Rbd"UQ1Qtk<P`rNI"S+n7g8MjQ=H#?F>XNt[+s/T.7E@8a(3/n5Z+7^m8/=]aU5#B?tjTX#V61C"Y`?\He?"7
%&<I@l"q7?*.2iN=lZ<p6`/(atY2qd!"d$_sIu4kOYG]$A=,rA?/8Bl$3FPJo=f7s3QCf,ADBo2_nc:N\F&Um3B;!83]W-9@\QPH3
%QthMjU^_u.C[%;V4r@1af<4$Y.pBl)hqOMc$Io077DeC7JG#q]-M?.kUOR"0Z[=7nN,:"^(Geh,ed.$UFUjD"[!S@$I!aN*Nn?*@
%%!*^RJZ/]!:i\^&ZSg6h"+sUCb-jm&93.``U;W/53Wc[WS)\E$[tAC368pOACN(/O`:th)oRR!UZe\9B=9,$41M+`fX=s2_6Hp[\
%bpPT/4]DqQEA)CQX@%LhcT#beU;CJ48%MN\"+#p%bJhia3#+_rWsj_CM&6s_%7cP%5<D+5jM+?'$lDYHc\='0`SU)gpIKkS_16IS
%>U`E02R+]UDO,H8gP-tj4H2u7IhslZa\\QV5#a-G#g6n;_UuoMdkQScTGf^B6p4i1:H-,2M/oA/<35_Bi,hZ\5sp;FhpRCq0?B9-
%k!bV-DR9Rt=#PPdcmcJkgk@qN<eNDSG@M+*2PZ!p`.\JtCk,)&d>npl6a9a'eH>Jf[Zm,GG`5E^Z@*e2/G_&G[s[*jQ0A91c6$6I
%)0MK5,JCrgYs<Wn[H"Q+hiJfdXbfENnaJ-\.:ijn)mY?p_Sg%,MO>'l)*c#C,bt]rc<cK(R@P.[kU>i7@aYn\hd,3:JHY%l/,?3h
%>=AQ,c21sSLXf$c(7X2\$9J56,[*6.?r9PV-ENOVA_$Pdpk=iJA`piB5`iPaW&#ihV`5o`D!7EDZD="6MupmR8"pB:-cEpsZ^Id"
%S"aF4M[J>a"p3h:)@J`MkfL.F9+$.ng<[I^L=$u[?g4DN/5GNH+_?T+A?rsYQeS?5%18aq&F)B(=Kfo0)+g_3@=&8mP#5[:f+oA]
%R>`TA$])8H!6OFQ)$6is")n%)`[4!OeT9ddcnf9_MAc'Ug:AViFD`'jiC&o)4[kOT35V(eQ/-6@[\]u8fE)s@F56N=H,TP!L@@kP
%^;WaHeZK-7%7(<8NF>?FD5/gT&iarJ@gJ<V,?NUdpNnKC65nLW'D_e]2!e.e[4#<+49cBKhY5IJWigOor'a]tT*A^X5[)9&QiS4]
%2$;Q*Jsa\0S-LJX+PnH=9E7q5%Q7J$]@OW=ZG(l)pf(8>`(/Bt#7KS&$#`[k.g:Wkh>4_C2!1t2Ke^V>dE*$KA3_+#BS5d^no6gO
%0:\B-bSBp^;G`$";;OaCdBMgXk3(,e^qg+M0[ACT'FB^m@^:(",G@D5'cKf=I3-s%^r6fVFU5-$VKj:l8sFqKNfB`e,a-6%.nmkg
%jWfYoP=<HhPl\c^FPc9"EP$'u;O[lXOI_l.:rpKU#_;7]d;XWiV:[=7d\_g_bq1,rLO^0QSlO*HVunVZ=iYg+.mQ.Tm[NoW0:&/]
%!,_imTOGu$:]iW@@tNKlH:,Q,7+^K%XF[&&`4+p!RM(416Z59lJsE2&"D%UrK[^M4m3d9aVUNqV@BK'Hn[ARA\s:8.UunhN<A\%b
%HLk)NWC:@jq)m&2=ZbKuc-A@sEB+tUh7\K-%>uur0$K<d/6ndB=)6=nC]Q7Z'GBY%Q;dNI0>1/Pc`d81F4LBVbe!^iM\_E"7-_US
%mgAJDV87/8;\>U,)_o/HLee;2,-fn-2k`:Vj$01;(B#H2FH#;.j-`NQd$BDJbgKJ*XBQ67GJHSIZn"t;(h<?-cl$EXDOQ/sTj!i(
%_lceF4u<fT%KoIZ5S-fT!ru3/B*]BW3\7Y!I\uKRebsN:muY"8<sc5PEs/(<5S2+eC0'jKq2a\tNJTri(_'S8X_S]+T:DT/Xu$u'
%D4P_1YRksPGc:R;EjC3ZB<+j;'laWQ->OO,)`eHU_#YfUT5HDn[P\PP*_8[i=iUXoQ`45a?6>G1.]D'BKJdpcf^jZk!oc'cA`g_+
%<_J0DN'%>b9GW'F0ilecAnlU3BOlk)$<Wo5TgW,ZdDSBR"B'DMCjBe3%!Z;5m`=4>9$i%\F406n!;PTd5Q0,Vn%X2GlarcPIJW$T
%X7+sDo%eLCdJ10DbdU&m@6n]6K!5NA]Q*IPrCK'*kShI?P7@aDdZu$S1]k&c3+>"1\.4=-<MP2f?*3n,.Kg[#/F?$@KVL%i&J<4/
%-pOoX)BcPVbCYS>">u%(*mS`;)_RZ^V!h.Cb7e@;PAQ!3f\sMWArukBmMGKhfMr]&JVH.N<mLE%_f&1/]X_J=TuJ#h8LR+V+jBfV
%bX31JLku,+UihYr>@g@RJe^fnfa+cWMn5beU[\=@=cj`D..lBscpQ98I9ZduR)DiN:G>("8Bs*iSqD_Lj*nVe\nC`4P]0"rnC@%j
%g"0f'(/Cp<mF)CrS)iP/H5[q7L_J:62'(2]bMYSXFDqR#pJ2e*F@F(r_ZS`A@F2bkdPfs8Gd2m"QLJ0<U[#r>4er'8/DV^F[crX\
%LK);Scp3F.FW0hL%7TIh/Rf$^n&s7VWFc74&)M%[64_l];_r/^&O1q)gl8IjRq*HGL0%\sN]*$lY5j;!Vic4YPR\PQoT9nh<b8'-
%O=mK'I[jp7`?<\/0YIck&`FH]j4@g&Uu:u0K%Lo,`58_a*_3W_8K/*BK^78"/Ei\tiU!qh??n>6-<gf>!5]?A4m[,cC&gF\4j*t)
%"\_rLeP#S/`lFF3*b;!D&Y*+(=p43iJ]a?nKuLMK1/MXn):f2h#XM0P=?W&S5dV)Sqi1K.bV;*:F9r.'4mZYogVq(()uuT#o]Z\2
%NmhfHQCPSJ//H=i^"jHkD_S4')<XTu!C.(GSY7(XOg5(3ocbTD8M5LS4#-X6((45Ij%qfC.E[4%^u0Zd#RVG71!21UjRG*9=/QrN
%#JbQ=<<i+-ZYGe203=&MT!UR54TW.V>ucU/;h/Nl/;alDWluSaWXpL8>N?E)*1]5ojYC5F_Tlqsm`>!V[gk591'd:NQpl%H(m>C&
%fQf)$(.5$$:4d=3!9ME-R4IWNQdu/o75HQb(%\:,0uNT.5V[)bVCnE6P6I@'MIS')!->us-?:7[2T#^X+%=3U'G<R[&#DXGq8aa=
%GTPL:PjVuD,GYI#IKuFra9ZrHj;>dE>&Q6H^Kj(AZ&`bgd2Ui]Pi,(#=_@rDO8*m&LLJUa-EjJr16!.n*Zfk1Jr-uS8q6=`/gaY/
%.g/B]#$0<]F97T<:fHu?-%_BY"sRL%k5aCcA"f`&aK2A`9Y'UAoM!#7Z83]E.0,87')5GmXKl;f\u-'FpX%1K0aNmn,iD@T!QD2B
%DdTBi>&8*ZhcoW1#?XC*ngMt!`Ej+Pl(2-bQOt'i?"$?A.8"8JS**&3Br2m#4*\Mo"hD4&`O;*EYX4Ht`B#h5=io/R*$kpt0gtFl
%S3HX*]/Ik?;4Qo>;o6R+<l7;H#m88a#mne@m^?A`)*D#DFAom(Fk%#08TB-BJOp-1!T9QYb)]Y,?EGp(^oh_p-'#(&R2ZJI*alrM
%4H\Qt<)7*%'_=+(7U?TOb$Wpl!YTpbLFPV_:,0>R_>com@O]hVPm<.Ee;q\>*42H$[b"_8c:8S0cNR,dZ%KhO)W<h^Q!LTrD@FX6
%Zbp_sM4h_3QGBJ%o2P0mibfLE(kD\9,i+kSXl6=cros@_Q5+@[S#N1;LsqO<]tlNP!<>sG"@Ekrc!e(!ir?$a-`Q.)F_R4e=t@Lm
%C?QkX:S#')4`(=-#@c;DY$8eWRADYV1@'+&.Zr?pI[j;,P^V-J9KDoO6b360EtoZg,]2S(=(D4U45XLFi#5F^9[9o=P!_c-FS^(Z
%ek^17UNq856DW(e.6u7[+kDN^S+LGH-sXF.TM=LUR"a!P)aO_Wl3+Ia_+CuW=?9R68#eNq`Nj+9+\6i*j]#09Wtj\9$U^(j7#9F.
%a_;H#LIR['1b<_'X;_Y\P+a<XJsR1Gncrh25XKY1&+TqW'4tAb"ct"^mg'Id`kel*%HGrsK#DBRR'r*!30XGb!`sBWR`;[BUNH^p
%8P-1fqPp5T:qNCr6\,1K91Gd<C,@oE0kX8*"q]gC+u.9^)Y\8RVNoF1&X!/%!t]h1>ni+Q*3An,+8<?4!X&BbUek;F(D]Atp/TId
%qh.8+Bce,3isnmd[&9bu#Xt?Cjgp3c2ab#])bLshrm;E96p]p(b8R==o*-0Y\;Qs:AoKkTVo4tBiF+:445@jE3h5I[CCV#S![Ll^
%[YtZi0J%*E3V%5LJkL?(Lpd?8W$1lP2OhtSf\QaaPWQcdmN19mh%*Q&h%[ZrcBfFUTFO"A/OG/VmS65\(?k?u]9%$FAeKK][YJ25
%(bW"a23(J8hR4(3GZn?V5PV]tr=7$(P#dVV#ZE8[b9T40b9`d.B.!QX8;3;)<l>1V-?kjA<:E4e[%8Ft*JBrW*)"k_b:&B(*X*TS
%SUlb6:1GSaCq+TInVS7IUAgJ0O2>Y<(qr1@>m_P3IL`Fq7PS?qY,>CX1"A6A9K\=KmgAC8MO3ZS-B2TNR!ZjhJ>3/H3qe#V`ck^S
%ii1ToalA]WTqK\6-=C!!V6OOq0W5>ElE!cObGeS^P4eEFEt<qUg"4E9c))OQ[bEcR?8F>:J0?WS0h(7;qOsr/#Z=fkldW'[Q3Kqq
%I$JG\,ID,?n+-fVLK*T'N00cIWfFh+d:bll)Km%Y,,24YdEu,;X*>1'q5MAOJKeA:nb2?(duXRWH5sB1d`%"pQEF,.rjHeVr?KQS
%qTY_Z1B\+K5euqD#a"J*+Q@4!dO7D"XID\i2F=JVq"5@!2A?Ysb*P_HSJ=O<;n:1rLeZ=*&3U=O<fFOT:J7K@=)"qV"@W:2l*R>d
%:+Rb44*LlXW\_</O9-WOL6p'bNI\+_cm`hp%4,,l?@:53],CAg:Fka9]C,I2K'L8(+"Up(!c2DYb_Ie.`G9t8@a"k'MXV$K4[d\[
%lWn-"(&b8F1]6A@:RVBEe$rNaWY`3dTV'>rEn+NM;&(Sp1`Iek$jplDAee6#i)2J5VJLs!SrsHhNc[+Z;4:Z8<#TuZem'bG^BXk,
%kOf),([RKN4XG7'`do[AbZ6c6=lsmt.mY&#A]:(L72XrR7SbPi+p'5uA0db-[[*:s$SDg(32Yo?V28<t?;tP=3Ft*Rf3t8Ao,+Y?
%b*V"M7Uac7*r5qbT>RM;NPc<>-5,'4F#USES@&tbOe_Vd=!=(p'j=!j2=57^HqU.sr(ULsWUhf=X%Z3&blE67_`Hu6\i&5l!m^jM
%)H.`LGfd4_VMmEl.rOV)27(H%GVj%D3t,<IPj#q!JO;"O":JA\NF3u)ls@)OS=CEuj%-sC:-;r9CP1-(1Dj1_n')#0oX0mDK\hPR
%5W8O"CdSB%.7c$d!+]!a/6!nuA;1E;Y-`:uB^V2mFc&FYDFUt5R6U\ZFPma6BPk/3]bN-0eW"3\q4pm'a<IX(SnuY;1Q6':!T@(R
%+ok&KfJn02$RcrJ*`+/%7lHMr5AN^h1_'9fg]c,PoO!?`SD9kNZ&W8"1aMb5+uCo72.NZ^'@"l)&p=Bq@T9sIf#r=c-1a0fM5ff'
%E#U&tT=.a^$d@=o)Np.nld0T-.Z[\2*eNF*4:CCqL0ql,!E5H+m'19K,Vu&Ka0V`,R,mrpiaQb)8(Tm8=Q;TK`ba&n_O6D<?lG+5
%O@j7M>]/bN4)Bqh+p.tD!;E`>%Y`Ni>e1m.&SUiO3>`d*+GB$=""Ia*.a$(@maXO4[FSkRF(9;?`GEJjU4j$Wo'=r\Q22K]L<*)O
%0L+^c.[JFf$n2geM%h7bP=0F+`S-uWc!k6B$aNMQ:'K6R@EP\)d^X)p1FNoM6]B:C1dpH5F0*-n806jU8fI#aQ>3`6-4T04>PWOc
%i$X?8_Z>LB<o^Quo/MeVDb-!.ArYW_=5I&dRC.^&m!A&`YfmBKJOE4J0<6k'?kF_?"^`pln&n(H@XC5tDhD.TUuhRn,RA'u\KE;<
%&Gue>\DGnD()*+)`?u<$-'S(c(#mD%akBn.XD<%&b.q?IJ83d*4SLWgJSh%91V/*9)XBG*>?iZf5c)S2'A,)f&$'fSQGA0,WX#2X
%p($4*\I)VOH=@^qAi)m[#C[gJ/Y\]2H?-OG?$/P;HaV:;ou<D7W`i:pp(!\ZA_/:Hq:qgul@_FG0tRh&O!YP(moYR>k8>Ouo!`/U
%alJr&j@f79TeF/,l!.&iV-0eJLN4gejiaPG2S45P&csEVC6;@D$r`Xr".(j#+P#=_<n#*FlBir4P1@WTj4]#nV6l\1$C7u$W@c#d
%CM[M:L/Jqc<;/8/hU>#4fS8/=!W19QCMLp$`/^+ZX=p[_7r^'rDBckeA9(q4$'J=K5U!o\jR":0VtBpZR3qa\p:b33&RMP<UK%ft
%QtiK9*BeF)BR"PIUsDd^rGFiJ#1WAU9uZG*D?^J[VEZVQDJ$[gZc"6u_k7!2\!!.`/*c)W)eslnK/D'WQJVVYE)o289E$lu,X:"3
%Y3R.m(Y3+jjYUS2->.4_<J!"ETk<Z,FeMJ]966_#R>fs$0ftm[\T?)[IN_C>T8qmtI*(l"jiTlU%'OL4L5;<N3O?f)#$E^1j)1D<
%)8E4M/8qP!Ss3D4-)9WX<Y-Qi(B7`UP(C>(^-uWq&`6%P?:g<L_9gIIaT.1HN&HQ('UBqXisa&[Y[(=^jKk*KaL)lNY1"WIU4M>T
%4)uoVb7NaU@"P:\k1n&.de$UUA7kl4E+\0G#UL]bDRT%@G`dOo<RtKO7<[\$?q!Om89Me;'H)Ia>fPnok3bKUD+\=?#>2O86uH$S
%'84H/."X/JO=BD\L(:a/A$9i0A9=(!k!EqiMRub0@m_:`K2<n*J3+.&Mai@.7o/q0c900Ac^):ZOBG(22@4Dr%`:>K+N&7K#.if/
%4,2a0SH0VO[Vc7f-:$_ahWs;gAmLl>:1MFlq:h25fPA$VrYS(GF)rGpVq!Wm"9ApAc-%$s0fG`Q2:mYF7qF7:6@1gG(uhX;fKB7N
%X-4S,%tJE&$g7&cSNEA4GU;KgSF@@[\R_4El>Y%Kc??j`/k8BS%*K$=c@tS/G"n/]eM62C4BZ;X`iW<*GnV2#AVR.Co,P*((c03X
%Nk$Eu<U[dDc%WH`i&Tp\BnXId3As--\ag^R%u5FK4NBk-,mAUpM[BKiRIe9;f%&`%Sn#G4_r._Rk3A?=5I2=_gY^%SNcegsVHBq=
%i@9jYg4eZkV/leX0a*0FpY\"m<9IP#N]Cp30K5G1g,VQeS^(`Po0RN2N2kW8N^8PbFG:?@MrKGfrnHQp?<OJn'Z]?13Pk6S"p6sY
%)afG'jn-Ou=eGiQfo9trX^&Aq!=rQl7]DA%'+XDqn6UYF#hqKS)_Y1i[1p9n*(SO^NNo"jLHKVrK2L2X(1Lga/[`lodC=&)]WINh
%JJk$)(d&A>XOA%G758,iN11%)SB;\VdC>2m)<3ZZF/CobV?FtRk:uD=a-,OP?rWA1+YiDn6'-.)GKX)LKeWYs(d/Z>@oacIi<7.#
%<S8qMAM7b@nNpSfXgZ@)MnqGEbbC49.kb>AEYhe%EH1F+C)&g*?&[[6c+,ME7o)TZbZ"shhF_$XX7?U&G`.KZ9rBR4&A4=sXMlm'
%g<m+*`H8=bERNk%FTa[:nZ=+HK:iEm`Yq%a%:q8/6P'DW`aWn,2!$)3@<&Wu&2/FMUu"(CckSJij)VS;S<SjV4r#*UERF_:Q)ba'
%lJ0cn3J^m?-f[m"9[\b2ST-N5A#CbF4rlA\1J9H;p<0C#;N/bB#-a)^fXErS:_\P&'a)YsM4<lt]71IkGMsnR*Hg'%`%>26e]<U;
%RoSBZDW5DFE2P&FUd]F=1)%^S1GNm?RN?Q[@e%.=B%XV5RMA\)BShk*#9U"q&iZkdE)pH#Y'BaY;IUJ+]`oc;1^l/h7S/P'2^L69
%N5W4Fo)'@K0bS^ZTQWNY<Z+$4YRs7B8S3(_pl1X/CrF[MJ>lepLgd!>d+,X^!AQtra17#B@FLGuJ$0naM,FL-'/<m]Lj_5p0tBnL
%^%)^JHm,]9Bo&en)k;U![)#Sp(D:12?_/[%X/3P$JJbJ^SD@fZikc^IEpsU',ZI6jdgtJ_>33mjS<oE(3VdXFGb\1JB+i'gM2."+
%NblAGKitf'[)7UMf6h-M7P6?04W%t?6)guqVRWH4,5?;W*(DD'D]3'b8a%-Ti@lqs,[nA!%a4(T7lS:n/;3krbU<J)6+p\G7VP:1
%Rqrq%__F($n=cfX/(H?;n&F!R_g"TtT&G=en%pi=`='Ycc8#enB@2\P[;)nn=1D'8K..WF7o0U=5GB.5atUJmdcj@XN1A`ZJm]FL
%6CV7?)nPOEnfl,CPdZkh#W=/X;[Y87a7W%VN9iIFS"*Uu<I\k&@U]:bi>$O0dg@af%2`M-3*Y@HT1O`6JVrih]a7u")O/,/qogJT
%673I:'bpKR5%,CN(HUNodear!_VcYh6/uLm#Mj+U,M@Uk!(T&=0Q8J:$ZS)`K>=s:_^:?<8plQ'$3-N@/pOd!-[`/H==KfM)FDDZ
%0./YdQsodW"F=?dre3u^oTN[&1+H]M2cPf',tn_[\R?,j>(37i&dF-<7,6:KKV:7?=LetLF6iT]2j*S12K,ArS4OPM2DjQM86?2C
%dcM-*N7cHjKFtjGo?&89Lc&XB:*L+2cd@Vk#X]OO,@;mQZ/Tj>iu3P(W#Ac0jlJi86^;]R&'dlc#3-5+Bt+q.',Q2V;g2?raY.a8
%g'I7W,eoV_a\\s2K19M=?s%;Pl^,_a`@\W4%H:cG-P>.En-6MOBnLtOR55"^0]*659ht2&^n`Z#S22#7"Xlm=%*%28/]a>7(rFD^
%QkYW\X;KgiJq40JmE-1Q;ueq0N@_Rjj.nQ8@#tq(jnCBOX9NBYVI4("qB3cXgkm9`/j-tSp(7s[+_$,##;h`Ss*Z$s%\[kFA#J:<
%BkAA`[s%0tKFs;(NjLT2Y\o7PH;FaBC1V!C&IeSj;NmXgJlApJF"d`lRBjaL+:/^;EKghs0ZE9EndC#S`&^,%@eF7N2uLHVCp9T2
%FDBF@)hK0!P*sK&5;7C/1c+oXQ/ZqObn$mXSoRI89^;C^fbC=C9=>gs'*ONlG,0CN&59?,`>V#rrkXh7&-VSHb]mD1Js@1_bfp^C
%-Uc`;(kVR]AA$'S9e9'j0Q`%WB#HYuS0=8,Ls0uXL1')D1d>R\_0B*QSRjS[lO[Gbm`Z6dF<(IHc4EZI>*S23754HT@#X_E&WBAU
%$7HaCED)b/F,")ra\_G[+d`Ne7PgSYQl@,XgPK'!UtPOpXpi,Rmcp8aQic[rirm2[-nEf$+dgKb9WpKE0S6#;Ap/o:7MdrZH"I=o
%_G99Z0a':[[-VA/\o0GP2nBV)K?HR^f?+U4W_2iT4$>:+1=M6UcLeoQGr`%t"1-\5m(hgt=]T^0"!\Z$0C7K0%!u]*M/`XX;$a,3
%EW`LVo>7JX=&R&W?j9)$,1RW=?pl5^UH,(QSjho$Je]+(\?/h1i0f"S4lZ["5`$G>&m-q;jb=?aL$i,_CP9K^cN.GcKYYMIZnZG(
%Jbe*skaN-NT9-D-$%]osMX]e_%sV7)VU5Dh'#p`"YlWm/m2%B_Lkpg@.U_mfB`*la^naJcl#e-N:':iu'MQ:\S%&"ob9sMX.c'3S
%$(.`PgtL$Vb]dE:cm\nthA5b^KaO2Er1X!sOp[QX`:KK+Qia#ohGh:Z")9ipJ2KnS7o05%qIe&''ejNpBK)gjB)N=BP'sZ5eE:;L
%>e#<pW<FCTc34WYcad[n^jIl<-9Q>M;i76]E<.kNO-$hl!COZh`J"[:;Pt'Q(GH!uei4I""l-r^bQU["-NQM&#0\Z-TFdV%(b14>
%M$k9,69OiJ2IJG\ioY'm.9jCE_?LDt'-#4$*(Wn;"&<B#)XYZO$n6$'B*5"2O[<[_VL[D(S_8Oed)gBGAAGd)_b/2Yb[&Dc`\)YS
%OKu=I$%Wc#?HWaD?j^!?IjP;!.In`R#gA<2Qt_5h&<O$o63tf[07XIM6=;A]aib!A\Z77doU-7ml\*'SCP9LU]8-j,1BI[A:%7S)
%&X_d#@g4;*E2pq)ClH1-blN9j"Julh#,_T)'RA7L'fjZd4i46PPe[VFf9oB9$29$T=trT<huJF;(kHB([]I&9!NappJQ@gf!i()"
%8@O8fO=&P<3[6=([XoO6d='h2cV4_9p3%0?$-^])=,9cVUDSONd46LsSl9J]VZc.FXXRbTc%@#nDAe!3f4+ED1BQT)XnZs,@(Zmo
%MRY>A"1`?grPf,%0ub[%KYXS?[\Hnj@$V97al7uhgo4#3`C:,,"!65s(II'@WV@S=<lq3@IVeeOS-!BW6fIR)%Tn!(Ej,R3lOjPB
%Cqr(7<k?][;[U^ml%%/An_27n$isG3$Qh&Ypi?QY0RmRIF$<tHoQB6t`oW<<Fuj$V%qYX6d=l_\B]1lE%Z*AKlSon=e"irJbqF1f
%D"C7'$pA6K:("W%e#HB_*GXc)=!h;\&#8K^g4j]'ao`%Xo";7.F8&"HGtnFrXa\^Pi$[$mK`\d=?GXne%-"EW"42ie@2!*$*bYIZ
%1?kt,12\;kHEdGGmkacXaGg"?g;<3P^7`#Jc-i$UG;Kb+8#)de/5H-/^X'R-+Z%hZ\UOZ?NV.K:8fW"$rH67mkPUm+l9)!BSVQS[
%G%UZk8OhLYLsIoVMt?nm6c\_NmW[<T8C$qP*1]R6aS$!^"u7*gaaVA1>%VaP3Z"krr?C#Kg>PBj$Q8)m'E-oLP-`I*4-Xs`_X]bs
%[cSjM_mZdhNaKfEF2(WNFu(G7iYV3)ZHcc.^>Z[kS/HdH\]Y;.YlbWEX3U1gZU,&FoY-QT*:1C!LRaJrmL-<HVIWK`^*"aQ,H-$Q
%>X^,IR=2nC`i\Rl293`--g1.kZC'8_U\,Yi='f!W\OS8&Eg>.`X,H&'^>11T09!WXQPt7cgspeYq0'd-lBTS[F`/+_`oYs7B%<l.
%UQ6(NDmr-0oCregfGlWLNPu]e*sc_6`##F'SLAi_muh^gn-')WcAabdl>J\60+#\?b^8@<,o[+>lnk,aT:KmmfmBV_.PC)$e#7kh
%]GD]?eoVdR0Be3hb'7Od>mqsE+RXs4b,mh.P1kDXBmW3ZXM(:Rl,pUt%/34=jhf]_N.AqtHf<+e#!6BL)'bU<-FP@M+]\$=#/^^3
%@8L]`*Db95s30+g.]T1.9f5(a'I-f4.!sX!JD)ej0,?RJFJnJZ&R'diG8C/L(V3p4=s-RZ[U.h;Trk\")A^:KK&']h!NQ9_lZBgT
%:ajl!DWd=%(ZGg.Y?;Sdk^"DFQ?0WD$<[.QVX('a`g\ou??/q/+ZWou,NIi.m$=9,YEqO9E$nrdH7;9>e+n;IE`[8moJ.IX*re$+
%0;C*aauEla3AfC%1A7lN,ND,CMas\[mtAC5;EA5>ibI7(p-RE4)ec7&6cNF>E8*7EL0]dnH3kK>%>Y\kC=',m+RE\4,:WH7KY<=K
%*L9Z'5ZChG]JK7:/AagORBed<8YbY6J2Ag0EX^;%#(kc,fmB#?et4M[mZbEGb@m=mg6B:(fE6<WPeDpDaZ0T;YH`\D.qLBmN^PE8
%AZl`R[1\_;pltE8/sO&J;h7$qN4l0t+q:t]!AE21jhfUW30hmFe)H*:$glko]o5Wbh'R0koeMEQFmj.CF?"+&=/YA\TP4_mW>(0:
%g4QPp*?ga6FM5=nSl`@,"p2=I\$>VSZ`L5q@HA^9=QG,tOnBp8A(uUAA.#D@E&X>fQPCdV?C?+:8O_??,O-:Jan2+$G?FgtKr,['
%U@k"/oFEIXFctTiF5oU8$ZOoW:0o&)Q/L.0H:QR8d=n6;1ug2BIblfdG1YAl&\K81rL'/lRrq!X3]V+c[TTVMo6-&T?)W$7pk5$!
%1\5dL'07d"$)0o$ddhE#)'m:fPo!_6ZoKQgpYHtOb/rD?@+FRmZ&;1S&c`^?iTB+7?Pn(!drd6.aNJ>kS:ck=HsNrb06Fk2QF#E`
%drsAUZKS'FN42uqjFrL.DWoG69,a[M#(nRM%JUD0rBeF1p^>6PSVNPY.-2'u]V(8gd,r3^Mcs!3lUJbGRPo0r?3#!'CL8K7+bV6$
%'YJtc1hFt/@g\$Q;<[C&r)PZoiWQor.an'5''lPMoXcNQ-\$Y$K")!QoXcNQ_)cpOhZ\oCY2nZUD8rHn>S'^H7"XJUpF_,d8l!(S
%D"Vf1?//"+ikEJV"7M7pSe:E8^H"2K&KD0IEP\+W#EQKu4p%OdE0*Uc@%=hWYluT.KlVC*LZF]3bI2A1`a'^Q8\B6og]\1R"eWfD
%bG(`=Jo2A1Cde*ECqC&)%^+W!Z#chs`G`Ld0^UV?!'B#)G!0m77(Xjj!kZC)B,@D'oOEkmG8\Z"Zg9<&+(%Q^OcIdSi\>7"I!6:-
%12>oj-/#,Z*74uh8u+Vp2+Vm.6\gYJ+kbtcl3K+*aY&m/@rEX5DXqWnc5aI.0B:]=J<W:DZ-..kKK:_*].eJWBP=g_eiWVB2i_0:
%(U#@00'tL`r*^SW9Sd.XEfSsGp>$46I:A5mAK1GM.<Z<fAV#IillsmDFW9t2Ykf_Wgt`O37IiEJh1[&(5jN'B>o2ZYMfU&nAJ(i/
%jeUI5:64^o\Jgbq;=3(&L;h4H9lGgS]r&>"j;Q\HV),A/%=(8IS62+Q'D('UXNP"FeN7Yl>Xf-):27GQ]JUCn#Hoa3@oB!`3jVm>
%0$oTc=Vip8?-qk7_OZ-/[(8AP'gY<ib6Q(6A$ii;qa.@,+>W0lN)j$GRV*(5?09R;<cP"eA_`jR$P#\a*K!p@?<u:/=o!&5-((pE
%EXGuU"TDPTAZWK@HVkF5c)SsV_Y\CTh;m<\33+Z)(8,+iXLaX:XrFDo"k5ELW_5L1RY_EQ/knah]<gch^rg,!eV/P3q?s>VI8m?Z
%b,S)?`mUNE?6<?\C1_4elI'=a]5q.]%!%R^3304E4%m8mlB8CS9G,RMWsSRNK2i_U!@jQHX"Kf=RZcg5U'(qbgn_NM:f(0#=`k%[
%5UacXFX\`]U5LE;:TGBM3me$0d`#:*XLdI%9H#f/9"gS`/R;J$!R3l/d7JJKqjX'R(W[VO6S=n?i&5*=4IX+/+HqMAl6>o<O`DVq
%Kp:?l.]G%fQtSK>W@kJE$pe/iFiagmn't!P+eXt\Uq.6?&:PeQ,rZGS&r]dkacb_U3iOaXA&6KZ<&Z\@m$q#k-,F[rS5`SaNX$Zu
%M,]g%1mZo6W@mYOWnBX8?*NUVHf<2J$_^nO3->o1JSGWh>m_.,\T$h#8g67Xe7CGM"QS!CcUg&!fUTND8Lb1*EU)NsP=NhWF[L-,
%eD4$_e4'*?E]@3>,(M`#/#P!T\MVd0=]Q?[.<X\FR8MRi:8jXQR0L`c&aIBO]Fa?`+cH2?-e)_020.kTW6:^"D0`>tK9S!rk]BQE
%UB\3I$$DXQe).dOK>YFg2eZC6I43\OaY3-b32.3Q>nW,S[6-=S?(?Pn$$@+*RMS.nZ8Nb,EBlm(MNSB-T.];mA[]ohN)VYWN)(8)
%4&Us]V[EM7UC3\HUeDC\T.U;Udk1B;.6+]0HC?lte$m>qbHro'>0a&SbT0=[YDg'fhVH9Fa^Rk;KV;VpP#.M71X`S!$$D):aNAS-
%Eua&H-CToj(B]b'KO#I<+XYf^0^;Pf0,'S]PRs('U"!Y7FW/.ILDb&\/DkSB>t>eI4&bFm/7hl5.!8*-2MdiCI[4NGSnCgS&-f$b
%f.'*]SPtk.CmJ:'?&3WF)6#4kN#i,$/t3F8F!9)1Qs\!-Fd7r'(sT3=XCbIc=&N=5!=ts;lFOEIeK.#V9BHJ5*1TTC)'NT`\!-*_
%8<e?\A'<sJi3T%IFm8Rp/R6#FSs)!ci52G)V8dD+9h^e@`V=Ns)<O/7$QuXK.Zqc.:04Le;m>N'd&3f(A@`$epNj`RM]``"Oc;uB
%.uZTXFJj-Z>`!Pk366;ZN4;,u+=cVD\o>QlHdd[=(ER!LT/2#,$kciuZ!KG4;(RRX#c#bc7OuXWU("VhNODfi"M+T"K;QHZEtM_G
%NNlF2Jf5J^Pm`!mKThq;b+=Mni%]jG(PMu?)7iZ-!f2m%&uX$omtDI.1$@OT.\\T?\YL@6\`(cCJD(*D&U+Hc0qF^G^Dg*,Yc!aE
%(GPC]-",8@?k$@c94u[X@"u`BY3NGHec/C4><96(5P+!Rg;n4kN%UI/p)PI3E^;chO*O*Y>D`IuJh%YQpI7n`Ws4+T[8^5)>Y"mM
%Fe[[.*=_T%aXmeQQ#]6U>F&`/ac_Q%/X]FPbTIYGh(d1p\^dYYS0F;>[P`X[(GPo9aCg*06p4)7j3b*K#U#'I[i8*/_N#!I@8]RT
%Mj'GR9JnGL(mDk*)RgSRbF*@>m9]"p\BS*M'/;,415t-10eNGG(plbj$\NJq.k**fY0=?m-giZt+/d$tXFe(tiZ^sdQ0jlb\ANQV
%S.6@uJBZuhL'rMAo5R6SMfg,3g;\gS-lECLc;_;u7]batKSt&igoc>t&ZA*.pVMQ@n/eg$:4p`;]$ah=J_67Ui51'"D&3GT_"G9R
%B>EoSUMqBlj^&a7"oiER`u=nn@7>COZJS^C+*7!Wd'FopBABtu"QAO@^*P^.Y/,M?CuZrl^24(e]^XcE=HpRdW*p<]oGjsAXm!J#
%(Y7>U2$Ha$$aYcGm9(VD`F.I<nk==%I)IGLGRFuq9I(jq`G5H;oYPe[iN[^Uh1@5".VsoW[tVAZF="PAZ5Vo;/M(2R:3DJe),GEf
%]#?`k'_XqhgO`k46nuV''_33-/'T[2T3)K!73s8GlJa(uW37C&n!W4%Pn1D/`N?G-X^JY-lElU&^MWCBM<a`Ap^K\.B=GkKUTQ,X
%D+5l7BUd`le5!Tgq;CDQQ#luBCeG[o'8"jPL_JhhS_+]&2_.,[k-]&6QT@%,/XB2"P0Rg#d*n\!\=:ukZ0"5e:><pse4jWbFf$DK
%`+[ni==>#'P:`h)BT#/Re!82oUBu[3Ze5BiMY)b3fj`q$,G3(o_)VP#L3)#l8uYrl/4>!ijDi@R$eS807(.mPk[d;g_]<#U^7hfs
%5m@OS@'MRCClm9N\m3DfLFkh2V/?WEX=RorfHTXMq@.p+@btm<qHAh^mMB<u[:14W/K-d7f+p5cS@^]6qX)e?XFnNC3]#@h$dqQ7
%f"qG2;k_[kU*f.r\#d!qqQE1gMko1&"rNRSSKFSWc^_BMW>Hp@CD!PQ4h_ZtEj.)sD9u!\M`AH!J/`8U"M+tk0d/]cN^(2X%])51
%h$qe9^__M@F3[tPXE)HeAC@>qb\kF(GkV2_3ajV?`IVrI^07g$e9.UgKn=nb@;N?rW&:-I(;Io&;UmZu_E1[J;O.U`4&ITo=TDMe
%o@14GKJ"=9"ud95'BbtkTo(/>2G<F2Odi0Yr\n2:eolWM#Tiu!U)$).:M6V3[^gu%e:PnCs17H/&O=Crkj5[T#@d2H)Bk5u/D#TF
%G#$jNeu<ASPLV*pa4+qIKpWWQ4BNg\lr.>q:.sof0<DN5FAgh$bHS=tNikS1Kp*;1d@rTW$>7d`Xu"MGmkZ,h$_<?E1qK^l*UPOQ
%M@1@T+LG[;0eupOb9==\A@1EdbN$`64)EeaVkP2dcuJ&J%.o_'Q&$2LY/XgAaP&JnG,M#;DU/VjK7t(L]V;)k7QL7UC_g3//CTl:
%FrI'8;p\:oMTH`LD&;:As"#CjXZHD3PHW,3`>)76Zh6XKlU4=i4ZfQY'BIZLdq7X*H$1r9W^&BkdpfSC'@5Z^ee%N:SY\$bTUc6r
%0)ud53f?<FQu*YffsNc-A&TAnI7J>'=dHY[/)r0?R1NtN_HDg^/Jp1U=l4&l8iJi&1=OogQTI<)2ToR:2K-*;ND_a'AoUJEDk:)G
%hlp#K68ON*,e:uPhj0R>36>uYEMf+oT%#TOfkG.AkEGSlIc6UsSl>H#Q!SV\I=8pM40!;:?.``#'>:skfcDoH)Rh8+d^.e,b7<8?
%4d]eP37>tsQ6"!uedVcR3-N!<'&=S:bDW^LMEhPO0;Po0,0[kPgCGqk[6isdS/GnI:^L^FZ/>bKl,[&qFQJ]4d&,Y'Rk2]tS5t[d
%8@=>Z/!k'X?;>?:Z3995hj[9ToY)?u:1>EfP_oYa[J/pELrNLo/N8/*O_k;=#S("uf3/Odg#7V((BR`M1kD0@r`FJGed?Q,,cEPS
%]"i]d4K97s+:F?J<Y/;Na4@=rRp;q&/"Ca[U;d"a5c`"d3OThcnNn4R9b[3F/bS9E-`;s;2.I[k\Y8X#f%Al@23tjt&JtP6/'?KE
%_PPqgaJ9mDa`d8Zg5s2gSd>Mn'Ef$eE3lNAHHkMEegjF:fta#W"O*pIX(fjRZ9gU>)bkOR;8>EJ4Qq(cOVrXX7IG/)@8I#C&-g"j
%JqUWk,q_EHL-^#D>I7Gcl-oflAMV0@eY00]I._2IPpgMDZH-K;C&<D547fm=Nb34EJ"Q%Q^4QPH#%M'7`B0PD[TRFZ``iQY+<r.7
%&rGXEs%`NmWb2OB%#GuVd?AVa.!h]RR9ln/\]^$.Ag64OJKmme)&i[L<ZVV6!^VgOR7X<@F/`-*E0(o1Nrnt:O@t[Vg8f.uMF82D
%dh'iafO:83m7Z^n8UqM*58XebP.5\t;Gd?8p&enu9/RADm8BiRJm_S6JOcRqK.dtb;-93GeC4ZS&Q&S^K"9dueJ2)C9tWaLZ.Beg
%#!jJ!VO,Q8S!36o7hL)51oW[4amL?%Q>`dJm@ntIV4,@_L;o107BIn)rt@oES@uG0P:,?dC,*O:6kV8CicgH5pC%`LdYLQ/ql$M/
%880uF"MU1W,0MkiJ`b$nJMEM+&kQ&IpKYAS@Yh'*8/M>6C><qkWS$"Q6@fi.rcM&C4eVRS%haO"ctMnm`HtJH$/fXi]#]+k`@%$m
%8"17/&<UMSd<!6A(KZC1]]/I%FgFn\Zt'Qagl5iR6"6<&-DaQl,W?/1N_CI@"/#uHTrihj[_X]F6q1WH]mBL/J.qEcGe!AiLo)86
%pi`#6F2:_2K#UXgRq<V;3]iFJ0oC9M4Y`Bn@ANc^M%OJ(0nC,a$1T#:k[>$a@dYAR,V<YCEDANN6,IXZNPM.i9;>ug+]Xhq[/!gE
%@nFm!Ij!03Gm-sQV`mrdR_s\FC(dd.p7"7./!Q2_#)+F<\TYJF\c^/DR!la]'/>fk(cW?uE$3S#4@T?s8bkan9C3^taGt#/+e--k
%OK1IiGM!a[5)4=8@?ans:e$t\aAE'C7S5'KA.kT&jC(UgKk3U_#$N[UY:b?P.)\E./9E2IMhKE3f8E34F&%b.R[=3*C`K$_.?+g*
%%n17&mi8l.^Y@l_=V=hQ".1VU1/gXq'MsAVkWO>G#h?^)UDIe4K$_1t?]$-Bg5]Vh>tHD\q+<\(K;:s*N>N4$jRUB:,1Zr5:V\/^
%^(do<C(\IG,sr9V,"91J2NN%\Y`REYbpc*s=+Hf39HHe%<j$<Y_WgJT_C@$%k[JV4,ENNF.RTK4fTf>D`#_BZ\&_PZW6Lo5=j3Zs
%$]R)g+sJZpjQ4]6"!Ht2>_^f?ZKiWi&^9Klb>,hD?-lm[)GM?*cB,PJ';oYB*0DA@OFTSG"QH1aPf+W<hru%-7c:KYc\C/5Gp65q
%;6Yh93+S!mP8K9a+K'KN$3Q=<7pR&JN;sUEkI7(2</`Kl+\:/i$D!=H5El0Q>X#/RBKCVkCGa#%-&\h:Al8n&l(B70j\UY?5UK(.
%.<#e_W^-[%38g,16ANriilIFP:HsrVP2VKb<f\Ob7_T8"CAOdtJJ=VBcefDa&L#8EklB/rCm`SVUQgkUj2`"SM'kUYGTu4:JRXHc
%7NOq#pP]02o*pP=ejC))@?iZP;5E2f:3TDAY7e2NmDIn'BYZ/?X-CM,80$$5"5D8_UUlFmh*<HqgF2<V<G/fG1l9%u+:1r(#mg[X
%N?h>c?,l9rV*7s$i"NZGe[q3uPapFe^h%XUWoAh&e1UmT6r'U&fkiI6>u*Fi=sXj?#!XrEVCsff.6l(?C*u47o-bO?88U-iStZM$
%0JLV1']OsX8qD&.=+M!9Z4\kFpenHG"0EG[b[%O4ER.lJN_gO$<ln_hV(TP4\#6gB$eQ6F9(53A7pp!#"i$Lg6k&H=C,KrQ1n,&7
%l>,3p3f884dcke($]l]t$$luT@L\TVO&:CdI\?F/&hql<WNq4.c(mZ9''a5Cls#([AO29[(J'Q3f*=4QeU1r$TstG]<4*DB;B-[Z
%XrCl1%E7M"/m>p\HOd.moK-tnjA/35=@ZJ6+h28nH6N"`E-R;U+c'SV$5@JW=G5X"ihpFE:duRjat/R_6gQU/2=_`JQRjcY*f.jP
%=cXR/O6'g4ES23ThP8:)(.qPJNB*6R$:7a2ah):Zot;1Z/KD>AY,)h2M%(CF5F_DI^c.sJE"CFIVWteoI?5rpFeR5K;C,gMaE="B
%hF/&d'u:N$F*6_<.f7)GK1h?(9fDWcb':A/M*Og)!7PDSONj+%Z(<0N/g0JG@ICX74i2+(#!0)9nUsi"6H'MAD'\*No/Ol8D+J:p
%m#sglngl\`nOO"m$Eh=U-'(3TR73u&kSjdJ"geSUXc1.Po:(,7YfIE\-</3\-hJ?;-,Fr6SNnngDL*ae'EXI#_f[4-E>h^rGW<Y.
%MckXQJm9eJ,)+B'Q6a^!rIdEK%e=9YBp?UBNgorg&W>dl\L,qjDZFrHMF=^`':I]R,1<<Sbb1t>pjtXsC'7KDa70mIkatm-&7+;#
%3YQgk7:a"WaN9R/l(T'U95Kr")9?!<Y_<?9*X">>_>1SK,G?<dAiWK&OW8bjd#4`[at[:BVcZbr+@RKL?8]C&Tq'B#?]fCm,=+#B
%?E$i[B*:)ZL%l"Dq`$I&ThA&rdP^*FOsbeJ(WDkl"rmf&qfRQ8AP$;54>]9V#pAo%T:D?pA,..]BblMs&PKbNcpP"_j-KpO08#@6
%I`7+nJA_g`=%q42iiYR98)Sj7.2#NW/f'*j=iFVh<nX(D"%XJ[_"K0/N[J#Kok[m'3KPJ;FcDd,WQBnW-SuR*;IR_E0R&D!L.!Xg
%'I`rQa"p_Gku<:hgdAk+PH9Ru6NRYcHup\$<FED6du5DJ8.`"n*fb!GJLFs8-!l9:=u&B`b]*g6e"M^7;(6A0Cak^ea,9*%^/)0a
%f-C?ZYo458<"4[C"Yu%skn6rQ@blSEe%e2D+oGkA@cbkD7:G.670>9M=gKj%rg_=<4Hhbs6pX3aBNN1c1e*C'*OZ39KO14NoTh$k
%Lu%V]j;mJ)1*9b;<ad,n7Z]5l7LU%8,%Se(&bn,$I!KP2HCR<3Zls<!"rrIOLP]om&4?5jc#8Tf>H!coem2(rX2mB#V%:e]J0hl(
%,B!^Hf50h%N-@B)HL&#c+Lf-TJ2Nl]jNnK@U2%^Qk!u94f\]'/]T?2hWW2%!S1JN0`n^]Q3RjHPIF?KPDaKi#1D5R=N!#i')DN,'
%Tco*kd%PhYN6BZtKCnNg:nG3fS,isRU]DsQeAqqcjCrpFA6Eu<kiU7K6$p5]P;5THm,Dg]n-$)\\.ZC4d#<mu(%HRn-<#L2"ilU#
%o-m65k)[k=7HH3OG0U7&L,2b"i/o5k!`'m>M%P<2]+S@0I"T\Y3s`8<ou9B.dhdNJJ<3C/:!d"'@>Ak_e=$/!)ESgGZ-@5H#u;>2
%*U1B'Pe`b.KNuok;H+HD=lLbj%K.P,F"P`F16E.0(aZOpJI[irb3D6Req9_'0H+p*5cU(9#4*7NTVIXGQ6_\*JWBRFeUm7CESgA6
%c_-#k@E,cLs7J@1Oua"eP[#Y_J+V`K)^22V+![F9UmPj7!PT0c@V1/^V8/"a>;hO:a71!B6,AU];p&Mr1Nt[`0Op2!h'$Cn#@:5c
%2efN(mSH4U9`28@H5^rl@^]F'QqZ`i@<4<Vgn=]u'#4O!"XUV+/"qVWT%&G0B@4hb,Y65!QeJ\M1ka(=`%BfAB<tY[<dXTW0]$1j
%%QV:oSi7#=)1/*G=!:^6fEOkpE7!NOoPurGRj=\Br?Ps$3+XC>E)4!&0gn+9;j,f2Jc`tc08*'WB2]rl_#dDG%lW+O&nh^+LV_nQ
%#0c%H@1"n_a1Qf<A>Fgb)afirFf<]EADdsISH18m$=&dGNi]\'6cLLRJVLc?^=q))YaLjb.7JQWg+n1S,f/V<5th8KOa?C5/iL['
%;>c4PKcOa579Ljle@)Sm0U)4&Q4*l_"\%f!5,:1I-P"g"j\hm'V5[;\P+ueLGEna"cn0oVnf5B."1'RVSPZfIEnI,ilXXagN']GG
%_Rdi(KuN^!O:ol^O(jiA)OO9=&r5rf7%@A<%qF'LXW^j[3TM\21Q5/t,DLIXWX'Z*Vqs%0HSA>_MP=0`Bo%Z,#\X_9/i&^>K)jKB
%U>RrB1J9V.,1jbF"f1^E0X=o7&U%t>@YG`@/meo9*$1BI'JG9Yaf""7E7\3D^U"'+kFdcC(lH8RbVW:2a.m\A=I_F"(D/aQ>i>ul
%'[394^M',l(n=Lg0L<dDL*2$qQIVV!&PCT*Q#0,Xe&8ShP.3lKUs)Q!+>sr*f7R"Z@KB1T#QgOd;-21)*5jbIg^jX&cj"(rWWARB
%r@)!C2!J+8lqm$YCjrW+LM06h/7'JrLI,;rAJ1YD]?f[n#H7;l9Z5Qg?#cFo4&c0A/,WU0QIDSmC,ode:`q#T34gb_1MO'=ArS+r
%GTI)eku,RXHmq$*W7`5ZrL6.&EKEV*-&kpQbp%W23.*\rHZIJ/M@Gm;W-T'`G&(YhU8rO!/;??J=H`Fp[g>`#!/i(NE2[T(cO'c?
%@-+/%oNhIA3:i[^a0:_&/@K7$P7\,E(1g[T%M<Z"::bk\&Y1C\7g",UV"Qbj7#LRB8f#Ju0s<=?0b'7)EW]X#O?Z3tfS[VX#d5;W
%M1+'%bSUD+LU7aVY$i89#rQ]q#'A]H8J$]Y*7<DZWPj^X(r^j#?\#+a)=rBCF-pUU5!sI@P4lt]/IEE:(.M=@-rI@]O9<HF>EU*!
%4qTbgV)aF:'Iajr7DJrm`MeSZ![%F$31"bQp$4s<O2K8&O7KQ4=aUFlG</Q&!-ur[oS'&+?:uP_6@\(3""BVtTO(bDb:]2t7=c0L
%%IFrk<'dk,&rrDN:p@bjU[Ll2hMt&Rdq\!-AVC=nClqmi_=?T7G@:9DED8GaRajc'5GHau\h0b*3&(;/H5#"h,fIPbeg4CMgDg??
%38Dm$J-5Ts@S(V>j=ecM,r4Wlg'Bf^6;IeDT/.nYbEIhG-o=I-^qRmD^a^Ns!PhtTE4VjHk-bt[%0P9;Ch./*mmpA)!Ob(s#fAX8
%cm!<3@UD$m=<\>b;h0CHLI((<6rtQr!f$C#B*U&985SO[c?"n`-CuLGM"VL%#UN1>2S6qj)c*%mKS>R1@XO"MZ96).ZgV*;L7URO
%WiAJLPu).7Le@2rBpZb_jHLVH84*SRK@j\=`)ea)H<MFGG%3-+mtBtXb;=ks%3E=#i\r?Rq>tH+.!q?(Q1[dn3]=DY58:_l8jqi_
%=\VL-`kG8[-o;+rdRXWWA/d4/.^l.E:b53=ZL`)!KV$!4>:&in?1nW$m2RQbiG%_XOhaG)-k**-6QL%`OCl&6OJ62udps,o+(a6X
%lu#6?Pa%"I#tdk+0u?+@Ti.&e3b*;iZoU"2Yle]rd[_XLjX5]p`/[HK_*7Dm"6@L-\Hs=&dM"$+Ot'Rr,6U+rZ?=&F`24"7^;(NG
%X1=!2Ok_Tfdh#sgmgoX<)6-^SoAl_a8;.0)7>9-[@Z+olZ:t@5aq-CuSrH(a+hrBtrXpdd5#B&F>eXJr,si^9)0Am"\da$sW7h5Y
%0%mA^J/)#J3T`GcPhJd&6bpgfjmY34N)G51"$_m#D6Gd4*&D"S@4i5DSDkjA&4,QnJ$Dih+hK"=ZWFHQS]#&V!c-M&5(80H,Ee^+
%&='$5pfIVI\F$h9>!jTS>F['sO>:CSW@3^8E9a-YAP"E^jU;DdA@'81iS\N=BG`FcU9Geq/!"N1=@5W2,krJt)O(]j7;AfZ)/&DX
%J.X'0@M1A8Z_(fA*j9ma8_L##BKK2n)fuZR];VZ]]*`bKeEX<LTjUEY`(JTU8u'5fU(UU."G<4&N'g/Z#3:a2K49+86g=0jPt\2%
%\EqClKFnpjK>jMugf)o*c'@3NE>8Hn:gL1TjG6$j;A68FToE3rW*fdh&U6+*,H$%@(Q)TZ8-MER20J4@i`O&u;0O>o`Kol]rY2Al
%fEsH.O7kX^GE?Ypo];$i-,e?$*S]Ko!]H"+o9bbH')NhD"=>:'JP!^2B56I<_RI=]_ZrNK,)KQ\9a:a$'b93`oK#p4.TBW1b=ju7
%l7#tu,M2-.,#;9uM,?LJ!#S-Ecni^^&s"!OB$u1-!g_)N!1p6ViZUbZOlPo8Y)!oX8Ed".Qo>/5Yqb-10BN+RQNn<0=EV`-O4ZE^
%_I!nOi;)M./ZDS.=]u82]RjZ"[5\@FYE1=TAaNPcRUPIa59'94Q*13C]8ct"KnBQY[O&0!'k:m@rbdb-*;N#HZrXsX)u0\qIeMGI
%`oDaQ4,t*?L*l+R*6ju:p1u\J,Br)88_a?F+^ihP@rQTOi<`9&(a'60IJ_"ql\QhHk7+[;)n?LsKqab&'aWTfP\"n33NdB08.o#B
%F"0[*,,<n)AJqHj"9S(4T&kRfL]N@]NiGj6]$)ipfO@DpbQHE'7nSisaG@=#F<HE"i`up)\2btY#.aPi-'<]`]5ba\;GR41`Q!U&
%A!C*s5<@dp@pXGBQQI)>44^nYS#6mn0nDlkZjnHqI3/\bC(m"[&I1lGUfkSb9LiY?k99gF^'r2OHm*eRWR7,c#h^<^aC0`sf7>p0
%GSXGP9Z[<3qG(nP1a8o[0kcCgf9K>=D6UGLRiZ.BDc2qIP/(C.m+:`48%s@"epER5k3NE/CWQ5O9.LEoABTWOJ5%R/ecm`alTHO7
%`-cdM]I*RpkAtqn*3g4T>$4W.*:\2E3L?["kA&P@.$.+[<sgR$3WqdpS;_I:#"(!#&ps`>c2_6pH)j4/;-OY>+Y^OCacLS_VLu*4
%:Fc8bb1UB/(r&/F!coe\"<dF>;(XtQQ>O-I4Pp%)2aY>U)I=.M73p3F:j<<r7_&M>'I-jH'QYbK+iNu@Z]bP[+Ne0Or$`CcP43'%
%3YI->]8:#S3YGpYofVIeI0W6AkGdI9*bCM1DTa^J%@@!ZN^VWr6k24^4TN8G/Mr^E--Nqu$Isd4PeIh:$9CO_pA)R#^^mOG3kWi/
%Q]g!f0MD,[P/e4_5=G3;TE,iZ,`-=%aAIa"<Y7`,3YK+5SJ9Jd'$S,r)as^pBQH59&9aA"iJ:N&r1[[m$j6&Q6;I\b"M>t-NMKAt
%*RJa,$=%9^+C.[XahYb#mHid\&Cr>)o+7'\JsZ]]3(:</23i2%*&@]uoq`dL')Oj_f5WCWm%pYG`h/h,ln[)G7SY)-"`ghu)]<'9
%Tksa6WPk=YD#$hZB>Oiqoj=B,e,BLI$:<H5?3BnC2"2bZ*'E%TTR.mBi5oD&#EM-%nhT_=6,7%]6SX!s.n?h#$1oN8-mAJrd8k59
%?m>oYF=r&)X-FAhmGktt;9Ya1_2Z#Wa3.;\]<p43,Y7!;KJ:9hEF>[5I%u(P'JZGha+o';5B%:OOBER5%^-L<;JfPEG>SML)"&sF
%O.[Zo*nXo^90l`:9/\oI3+p.^U.uUG-:a+1^uEGu#U;G?=a1$?YbdF^A33ms2)VVk4GXFT,;=r%\-,]/H#Nr,=$]lX:rB'IfZ,jE
%_hdu:4n\;`k%uMDNhh;0^-ktYmRm+pTAQ&HU.e/&.<AoCfa_Pq7+s2?#:`c,RNWcF)KR[+k]:0LfHMo>k9LUFU`h^6O,>sU9`,]q
%.RITXq!d-1*1@tcgkR)m[Y/t'M&iC1,.a,8kOBRqDOuD]4ap@:;[_ba7SlI5EFJR$fcYC<ieS8<@TE4j5&<S!GiBA:E/H8*d9nY/
%_StY>;H=df;I_G&qi],(V&QCDI[V2iE82nWIe`M$ajG.u1r\88Mm!F";/dr(cO$ldKk$)N3'JH'O!>BsMiHF_i&G(#H5B["O*P4p
%;UT0oAmfUA3h^1]H8^h0&gM'3[hhAD%b9o]95TPbQWiBU[3ZFn&l^5%(Hs2bfocSOUU##g/="/iOJCk+B.g8oZ)uSJO@Z@U^N:bh
%/BL&1duQ)C=E*!6nlA+QTF0APA_nn3l:<)i*-SUFm?>>Pf?F&@FCc0=l'3Yr#dGu,)%I:aLs40%aT\%_$+Q.Y]#&Y:-'::SMQnR-
%pAcdf=KcFu0d/`:kd+A0YQm/=XUio<(*G&`"AY&hP3J9Cf&hN*9,UBci&!`cT0SX:F;r1jSTc)M(-jtBW`N^:j4g4A"u11]'W>@s
%L\H>JFD^g@*2u+j7[T!PB\5<t!=^dFC7$N>/O5#pi')4XR';Qr#:N@,b1]7\_:1j2C(NObZ,T\m!/s@?,qg-2,rWJ_Sr)eV.1Ca6
%Oj`kE5q#2`Qn.](:uI1bOH+Y=db!F!q9%*l@Z%N>""&VHnC/jVfi%/e"g5)g(L)L9$`A4a@STrI<u,#$<$JIr7!`J!O]*^5g"jL4
%I8Z%E8\Im,.L5TdgA/j/6<7"\X=+L&;"BY7$a%<9N<n!58fkg251\sl'KVhMTu8NZN@.,=`rR-.c)#5B-Stk4>`o(a65:qZLHga<
%01i7dHn21fa=a7Z1OV^9N]'ebTkTWNQuOK^^of>>^;u^u3936MUtI&OP0Pli!t(E;kST@c)U^l;@iV2T$r,<*e!_KLq;se7]7:#r
%/8-MF2tU?E$Bl<E>-u0\n_!;\&*HC)A'9d8kt@F^>2d7hU]="H?AN#VXu[e`68i>qPt(+r+iMjJ,U+.(FKXZWC&EIL[7*qnX=p#s
%Y+G5/0L`XUKQ=NG1"qFnTD^;NC0Mkf,3EE[1OS0<F+*'mpUDt57?hc0?N:9rJ;'L,/d"LgH2Nn#E%>1uY.PWY$r@[0<(;d!$q$Xo
%Bpt9?)%qZ$@URM/8aQ8SVE+u$+ph^\8``[u6-;cM7N?*C7*&t_peG8T+Pk+iY?IG,b;pP<8;O`ZS&7NDiXs!gMqLQU;WB(Odi+&f
%:BF6M1R$((2G9^;e&a%\1sdi9`f_A[aX=sQ9p.Ku-k5P>,f!aEZ(KlpPiJ9CM)U,=L#*@%"$88H3:E4cbi\\QkX[*_jF9FJ)b%$c
%E^#:H1@r)?"AQc9qMQnWYu^2uASlC'#nEWf"ph"K93AtQ$=9a"\Pf,]`'+]<p(qcuK?MZ)E-H7PK+k+`EpOJ(IN3AHnYmVA++!3E
%?5VC`3q^jXaTf\1+VZc9,tD62c6:%`&`3fC_Q66sCeO[:Jt-(AmLF.LZ+mC3Vg/[\ifBj2@V2kaM2r]i>cbn85t"\IQN9oJN;#bL
%KlkJ1f+=/%M'O(<7^b4.q`3@%8qa6s&cfeRc%!c#6^r29LDYg&Y6a]qPI9)^))jhc20:Cshf*HY@s!Cf)%(g[k>dZ`'<O5=7S"$p
%mCGu580q$L[U?YqL]bafVt_ArjN%ZLQ9Q?"If;nAGpZ4=MKke87Ob>Pq+UBlV?OdBI>$?:ip3CJF@8r%)qu?A*@[#-;AU%M7Th%-
%6t,t]@2+OS@E\Yd-[ie$V5uSQrZZ6P9+Fin"e7k<:"hU8$Fth?ZVN4_\^H0,#*r@rLbL\Rj#bp]Ab0o4%)I`l6k,nn;LDtL^4=n!
%qap2n"9K]g_;`[BXsY9r`L..:LdpI"i$OZ6P8%m+_;QXY^lZ'^U?`/WL>:9^?sG>W`Ll@MF56H=Q"[Z]50AMQQ_B8!V=-fe)LW8;
%EMQldX-#fod.Fcpq@8giK+nr/7r4=k"b]ct3M"\.,Y3T'"/P0j*[!B_5*9o&W)fDrBYVl4:fQe3l'&nb@4"-i*HnkCYQ`1G$,eb2
%>okn.3$&dO,+!'>%Z.l\9t>(+[k5$_U()i>7BY=39LmZHagVS?/q!oi4!Xi^`j:Bb7Yd)TLJ3LH=8^S7I\pX/>Mk#[p#-(s'kW[h
%p)D,T,4qt(-@m$*,t4%jGVP]3cX[k8W>8+?UR&e?Oob\16,X($E5R^^<bZV(f-m;5NCFYeDntlX$PP84#5)nN':M7r6[m^^_JU@`
%"]K"SLdOApJ=+"1Tb+i;a0UDq=/]9u0HH<tN84o.b^[b]8F;\,n]JRFS&6U%U]g`C<,@d9(Z^@_\\&de!'t-*i3s3Z])krB/'f'!
%@Q_9,58c7?q+(Q^1RI`OQ`FiT5UBX)[>fc)[P%9sqG''@Mrk]e,IC:5-g#$Z5esDf3LPL`)fFW=FkGNf&K9XBK@cKC8HO'JHg(qd
%0a^)EJ`cKHE.X=PB(&Q@16?$9OtG7(i])Q.OlkL^Hj\qfApW:9GVck589:S>iE:!:6NInrC5J3`91h?c#aFZAjcDqI-^=^*6/au2
%/UMO/6kb5",;du9)1i_gjS1gThW#Q:ogW<oKXt!'^@-q%/HmB03[D.NO#m]V%!+CmV!g_/naJ4DmO'[<OcTTSJ@\F?ie\R%oR[-P
%0hqgC-;7L,5`Ve-Zt3_a";5a.1bOh2(-C14db%rc%5Eg[SE$ILN^+STOMEC\KPZs:9<%V%XJD03I.3qJ-&T\beAYAC$fuHW)+%Z0
%<\3beQO=8--'AF9;RnOFK.uTq+]g1S=X9"/RG'?bd-W$X&<gC5.)%DZOr2m``(9]J4Y\6]N@Y!'$$?Y:,^)tm@6PD.6=S&;`?R("
%(aLlD@2\]jiPLqEM2ThO6]$T(3L'dZO/q\_e;Pc02KL1rWR:'5%]T#%,.ZK.>8#6"OI$!Y1_d/"Kn7_2V5RY#>r5;-d>faupP;0P
%`QFb'`)A`eV(t]."OGU4ofs-(aBrhD9rPH$0*6u]N?GR/#h\6P9.=WBH</bIJBK!A)b'ejZQd]&KPLlK-akT>P?[)"'$j&C=J>-)
%?K2>F!;J??di-c/BbX,#3?\DUk2^\%H5+f[GXpoO!BP\+q\j>$7,?r]=[/.QgBo6$f(3u>(G^l?9ha\!(HBr5]UA@BTL0";?C$>O
%nZaA,.4][CHGju3g#6CPRBSUZ?j;r6hFJ;7QrcW#'Y&G!b7KRk"^j(Fe`YF:\GO`l(`??aZWGeQ92TB:Pl!dP!&D]Z=\X3YWm["a
%3Kj=ZdJ#U&"AB5S<W`As%S;i'X_H]"Op!@3AS2gmUI;^9NYB1caMP3[@PS38Rh]gL$oj-I_n@I_OPGLUlE`>Hg1.XLCabT_QXgo?
%,UAiS\1!g.1*D+V:6MDP%V!.;D^)FfA@ThrI98&A4`QU1R:@4b#KM@VJ^!.^C<hO1U?&"-R2K'rFYule'0OBfi$"cp;HZ+5a&IRD
%@/bqm9PpO6Occ(Qr6d&)o`7W23/h8O-&jK?RMZPd*uABZFtdZe5u3eAfAfMlmQm"8/YRcnf[XJcgljgd%@bcW&hHiNnL!r5Nr]Ke
%8<1d@?hS2'Joe4p85Ps[)8Hn&hQEJbLjJ)PEJc&?_FVcAQFSj!4?cF%P7d*nlmd22mEF,]Q&)jdZ*,?g#`jS`%NaNNrbc;A#E9Q`
%`nj3om"d0e!)i$3Oj\Pb-gQgp!'A-%A6fAecDD-u#_6ZGo1HD@^a1b=#L\]$cXL,:&+l]l>akL$5fF*W-'LW([]o)=<XgAa"gfKJ
%+Vp+RO'Jorg"a]j.n*SSrtL71fF_p.YkMarO-RQtTg5diIFsZlh@a;:L.<t6p3ZXq&h=O"i=q=er`tZmmu4$7kfO;i:6hS6@^6X>
%Kb9->XmGP@@V6U:;4,-Cnf7F@Fu(#-a9P+fQ45sJ/Wi-"\16T5D+P=q7BsY)L]rZug&M/SXK`l]b`s/G5lQ`sk3PZ-QCq-ajI7<(
%$QndA)94DQifLiFP(c%'#*Em40G_[R7\N4d.`<2JANo[U6TN$&Ef`Zn+YpBch232O+O(e^Rj/FG$Mq[\,luF"g:8!&HAM9<Zs]62
%'\WPD&HiRMkaYV;bN.OFLIL@qg9J604\K``Z1nHalj[N'QP:[,Y1d\>6<ZGhd^6F72T\QkAEl756roOK#e-ZSD*RM=OR``)*_?hB
%7j"PkDTIQ_?'g/2/VZVrm.:YdXMKTa$OCek#>rVPi"H\SM=?g`"srdgS4&Drk$UZ7-.lI.8Z?/L!qP+MQ]Oh0>_Z!'[Q,fR.0nk,
%8%0&0n!j565>$Qr!:,3&*#Pcm8`?eQ7/<!\$M1JBB0sQ?n)+LML5pQ'_Y(EJMa3D6Yq--'H7=pq&F4NoOk12b'A@E-0UKu3RGF?<
%#.?$-5XI1+B0^bZ2L\'Wq4)hu-D9"CW<F$%Q5*cL!'$pD))=a;fs#!<1-nJkHK"tPe&2QCk[L&@0.0Kp8mFb9KH,LkQWdX$1jotM
%-,b^<VRS8k^'L;ab9.:Qg'QUNi2[84;&+ouV_tdAT<@gG3TsQ)TPJR:*eR2l3BLb94"Qh2:5?YU+R!?+LIEN05^-^X$S)=MOT0=9
%)/[G@+ak69"*+Nd8n(4-QiPL@/t([jdfC$AQu_tC-Y@"oTq?tZ")U>Fpg[H^EpRjPB61csN.CQjTkG[D\i;G-nE%1CSu(4@_4Hkh
%$18.sT)0-/R"q8KGp:-g8'(i&]co;SPK:<tnN<'DnD'37XG1poTLb/)Ek$2-89lhoc*;VB/tW.Rm+dd9LHOlB?;QD5]!7WI)A/jB
%F'j.T/EiUuI$qo)#'Qh')U(54,!8=M)kqm*8f#$*c7-^P9<U+r&U*-EV\&%*A5aA_3S!)0,Su$S_mu;iRH'd3<hDY(&[+p$i^>6N
%gm;uu4PLhe52T)^k%*Z76B"5hVo*$npQu#1iN%-SP\Z:a4E_RYYo,qJop1<#;r&["6JSd]'1pg`3V*P84PJ<d9[=<qZ2"XK3=!nN
%focDu#=VIq.e>W@bm-'fF+BrW#%im&@t$iqC7CCRfKh);F%0UpC',aQcst?pNaj,f-,s?:PJ[u;EJ@pD923Ji`10RCW2HU'o9d]q
%.`"6Uq8es/Qm3/u07mq.T8b"mo^Z+A<p/H';'8VDAX='I,62.Xd,e][XKt%"4H?pp[K2^>)p`XdFTR;/<"NIpAW@1[_BL$k8i-"/
%]X^]X(N;B+fYs!UQeP?SD2joOFV?>@Uu68a3*8)]iUm74>:[4R:?@cG7[#?^c;3qfk-3s3"UR,[@`t_Z$b'&N3JsKFd$NdYZT-t"
%@.kRC[U_@NJc`;)-T&jq-ZR4!"2ZW[JXA\85NP5?cfVb!Z,$/E[Tk=T.CG\/<I?eFVU0A;9O]^o^t()m1d`gT,E9I]!m=.Bf<"Pc
%a_2;J:<DG:l$e!iAPBGFWL>g$KnNGILI-I?E9oOus$r)K:'YGlR1rUAq4(9_Qu^>i(1M"c.1`4rQXQ-U0roX*;=8(iPNd\]9=Ur$
%apE*?03:?JcV^Qb3k6nE5\6/VOl0R]9hkc]?,ds[INcY</!sRWa"!DqJX\d.;CX[H,RD$s.!_KR>\0)qTo?,oP+;GJC^Cd<$jEr)
%$%q'_(=-cV8+((@SDqUQ9B/VjZ@GhBI7[j=@H=#QN=:d$dsNcZOcpp[_bqOESpm,iaPiX!H'TVP)/2D;%qIrdF@qK;Ae(^LEc?'M
%P[MR(ZNJ92LEUkn1mJC^EX*O(CP3Z=FBWZX%Cd%Y:5T&cZEjs[8e]'m<"\2ET^d^p%K\X>!jGni!9E(_=DZ(aQc7Q%5fJf]^3D#H
%oPloKJcDe?EV_loH5.lhb)c6Fni1S==[KZsaE$C&CN\W!G+@>Plu<g+\/22O?D-?>+G=kp`uHJ.3Q@`o`p'XR_/--%@l&2AEPg&6
%r*`-jUu+$5)")&M0ZP:D)tu1Z5[!-s?gK(r)G^N>dPu8:4ZasLqj+%`.qm_i>acXFgt+l)ar0q2SOP?o^/RnP;9"ak_D7M;ksWWW
%,[lX1"*P/e&`[t3G]l[r-WC>Vr"UpRHYiW(iPeC0F&Vkn,iF)>nD^f5+Z(T;(C0C4k[f=';^a&Qh?k&Hg(PiZA_H)(60=G<d,LWM
%&\:RMVb%Bm@1FiK+;]r![RfuY`$f*!ii_^g3N>'X$=oRaSd#cT;VY9rI#]WCC-7FV`MoF\kB72.*!L4+7O#g.4-Y\6o6!aJiTcGX
%-18]fR`^c2?2.S`)BX9\$\os>/AYrb\cQ*]@`4*__"N,KLcZpa<S?:u%'nnkSfo/2.o(d6cD_:@0][=Mc;lB/OWfP@K]f69nN_.8
%R3-=')_mBaQRq!X*c?gibeV,1p%P!*lu7jpM^^^BRa6W(8IMk#@DcfOUnZ?C)t'EH04tc6?DtoIjW$'=K)OFWV9En:JRg2b4;RB\
%SerN,F&IkR3;oY_E;DGNlr2ZP,6@6;(63"0P@9/DnPR,ZB3=,%(,VuZJ<TG#;Rd>"5iG24SFBWS*D6?d8^\)I!T0b-<aX<LoP)2K
%:B_V(\.L26gbHpU$4,6lRH&ou$A8qI1ulF:W.k(G8dDh5rNs7:FE%'b`t'E6K/<#5F&G+[9lZE_cJu_m^b]7T`IlLQ$g7b;ap0<N
%6Pp-<4^H*!:C.SOTQkE!E>UaHUWDsF*1RN*n<YOB4GJIRQ]qqSb>[Jf:8,KqIfKsDaP[iJe<AMm;IV*F5.O+mdZD::L%:s/0c.rL
%8IHFD\f*CbWt$,iP`ij3Tp3W_.2\SHQS%`o(/G5>fB9EsNaNk9(#3pkCVrERBeeXeW%8UPJm8AVV83O#`<cmQK_*Q<M(ZpO_#]B%
%,f5duh)W*nnA%VG#aQG?S3G3j=llA_!=C.Z,gLpmNd\0oj]LH:9EnAs"kX_=ejnM&,Y<U6)`jfX#i%t9"&8k:aM:gb31c?$SYCW:
%,3+D,"Pf:?/AhIc(9fXY&E"hQb>A=#786lmPQJY"!tnIpAq<i-Y[ApYgPqUPD;a:Wdt8.!@=NVB<i"qt8f5D/8V,`ODF3tb%fB$+
%'WnDCBj_7n;j"@TOJ@9&;Ls;oZ%S#`oD8be4Oqtr@1m6^QMJdJRDL(XIO!tc$'!+*7`6NL"1$!dR_(7*)!!W`A+6foM%P4U-DW3_
%)cAbMmH1\A`!6!R,?`V/:BA4EY^sfU\ME(m0EV0lmu`-sXUIBXjB,Ugr2/+AG&]#$RtI]qe&6/I1m!$a`,>d9_LAK&DZH$[kKaaT
%+_LGS&ARb,_SAs(h[$cD.klbV7[T2(7L&[J#TFVl'`!_8[SYC.&3ic:J8&2Lhh].WI*WqM.>!@QOu_S^_YBPX/BD`K6tW5q#kFGh
%.&2Z@aDZ`M_\T;oDj#Vt@@5qGUCu:+VQ-H:Fg__LS"ch5TrH+O6pef:SO7iN9Fdq)7=M!g$I$#3r.Y2]5)9'u!4s@"IR?A55"#5p
%$$%NeaD^>Z1V"7r9bHW+@TVVL_Pu0@S4.n%B!Y5_,cS[4`dUNGIZpJC(Taj_%Nr(tN5Z/%NdZrI28!iW`5j5k1VE2/f=Z#&I\To1
%ikFYe^g,.3^>hakYe[t]c@_*Z@GfQJ`3/31hinqRAppnt@p95;MY[N%R8]7WkaUqA>VB#8h\;^#l/.*g7_k&%-LI&g9f:n?>,X^#
%8\c0C@=6OHSm]?4`&Cg%3NH?ihlo-c&jlu_-n#UMArcA?DEAUq;qNI08[0s:pnm]A^^Ee\^iq=Y^kV<;,4=H/!IYRqk*`oR_S&P)
%8e*i5hXigEHtK`E$I;ob,W0+N)fZS#TIm\MOQ(!imEPNeeBUb8h@/IdV33F1huR*qo7o')L%l<`olFqf&kgN[Ye;3R&jOP4L-V`r
%.GGeN,\ed_)dhPm9(F;L*Y,S;.co@?ADBXjTj`9mV1[7T2>`*U^bL7XE,R"b+BD_*hNXDDn2,iGj!eshC)65S1H6L0)7VUT]>NX3
%E,XfZ=@1n:iSI,.0jJ[LHU@kpP/=mUi?Fdp\2U-u3Q+PRhC'l89@bO^OUupcO;uFXn'.!(i8>"")\%@M;S4sU<Er*ZL\HQ&_aQ9`
%n"#3s.c-X?SjL"e]Jk[M3>&n_">G?UhA[([6^G]<_p4%m=eU1`)&ETe@R:\FYH[*L!8fb>+f%O5h_n<U;VZd_4=">r6^I5d@a&C,
%I,i+(c^+sq,iEth3Pm_TiZQ$'$/^,T&EYnnW80-RihqHJ:*fEk5VV31-<Kg?7==-s'+$H<7=6=&SP'(kiYsW<4@o\G%11@8/E7[Y
%`/#i%Ro9D/@4?GAIM4+tQLW4V!;qCq-muDKQKeN:I%(-94Q7;@,RT,RigZMY7n5&gRr'CJ$/[FuE#Q#)^0r"t%]G>)2O=Pu6SXO<
%4"XeaN,Pu06n..8(7Id6.-\2f4_:0Z);e7.g"ig/?J9pZ5^_$(Jn&/PnVLd$cBJLl)e_?<8opndDqLDeOG=smBuGSaTnI@=f:'lc
%_DbB7&07R"Dj6=Dn0T<+6iD4FmhFa82N\D?ph!+?p\s^<O?$7d\nl)@KAh0@0+tud`I$>>M-,_%@Vq4bN1fV#ptcQ,oNCtGoF2dK
%YCLPSE"ma2n4dAPfG;1["RMZn^c+pEEQ\EtkrVb?9_mQ++b^"bn_W>%<01RHpP)$L)-b8XNWY-r<,+@oI-QDYl/&,7raCon>-;&^
%h>sJ+Mqp<\H]uqloJZC`&hqa)^tobY*jK9-4V==i/#(.>l5aP!Xu6YMnY#!2hLQA@2b<Da(5J<0\uB.#2P;&:)`[3:9;O&JmW0L5
%E8F'GUNrb8JU'bkko3)NiNkM;/W900IBgVXAhJ.Y%*@60EZjgMarKk(OK_p-GS?bQE4m71gMkCPi_;m[Gb^M^9`hJ7Qpl8KFc,.4
%8Li.:,6`<^QAkb^^H9r6CPqR-5Rpk^'RVjU@$hn%V0@RE/Cm$fBFMa\g"i@HR*.%kRq/c,n,]pb!`*"9;\0:&4,<25/bL_([6'VQ
%=9dJR!i4-(R,*<A/;DhP2HF@e.'bqa=e%d$)lfGA]*XE$2mi_!$05iOjp!4CWQS2X$.*f'CDC#s,%,A#Nn,6'm"Z?W2jo(+DP3qG
%mPG;lr^b=r;c#E`i421DE4SCsl/j_V-mg!^.A],aK:?:k#Dtdk+hDYp?4,nnkDUr7_/n)oXsh5;js#O/.@`Ir%^NCN1EVgD\H@!%
%.[W:spQ\Xdc-h]kEYHET;kA]c9hV1N7;tb#<\qeWNWKO"2pGf?n10WjiXgM=D&XTVd%c_io!h7&aJ/lu445OD*0**Y!k?[g.D5iO
%6%s:lFW=CdZRG5Y<c^2GERTa`DDqT9S)89,mSkYQDW9bkX_OZ;7BZ+nEtIbAR8h>eVW0'X"NoZ2&]cWU%T<QjM>?Y9#!IVGJTGS=
%rH,I\[WYg^RR490!)j"Z8ODK5."`IU0_I41DVATGmna44liH.>!,ah.@:\HogIW34CGGU$g_HEcijXJ+Lm43rB$cX*M4Q5I)a&dE
%;!)#6daj<D3W:pC.M>.&^Q$(g$f[WXZu(Z?bk&;@<`FF^Ap)N1Z+pZrqaZW[fk==!'#4t",NrSs!&qh%_,(+j)^J]:"`D6)aCRZC
%#]?$H&C@3YDL0Fq*J32r<$m>mNkeB8J5\.e^n%'TQ,(X#4lU<:@f]'T@*uO;^#s'tWc&<@JLE."hD!*F)aiO1!CnspJK&=3>hUDq
%i23)dBUodGBc&TQ9+fsT%!!n(Nkq89^<5BRGh$I?VI]bt&[E'%AT2;#_Vdm8B_WO2_+bOPCs+QC_9P<)PVTacd*[P4^t%^!6l=*B
%NknFW=Q2c&_2Z5s:)+NK2n`j!iQa0f.;'/N2+;I_mM[>>,r%QK.Sk<i2[.38jT(ed8H6\mUASjH0K@tNptIJB@5V-c2@N)LGE>f-
%&mpf51Wa,<9;Q<TUuK:R>H[m@I&Y"L7O`d*eki/P.=RcC4RA"2^E#h%9$bkn.BA9hfE0rj69[@Jp,948E:[6)2H9ffPdca`.0L?d
%!sNUuRM;1MDMNcoSVl552<.o?gS%B=/9RFW7^4)E@;-#O7]a[JU)63_a:YmK?[3Umg^Z]n-5YGq!SUrYaj@JqAe8!\V/7IF"5!a-
%D$OP.bd4_aOTr.^U:(/*W\4Zl)bdZ$ZcH(j2MtgDbi;1Ek]8EtQ*MF?>!+2@fa]iQ>'&+(XscC?,`Ybm4H!V].:ScU-kOY%KPb`G
%@VR?"S&feM>B>1/EZtR#Xa"\L0u2eGFDXg[FE;D<MY%6]%4@r:79(TJXUV!nXF[Ai$;J?.?jeAb)^XD^2s"cfq&."F3NP,M/+Wd/
%W7ns=bnR0P#:h'-k*XjJ`VDrjg(\>a$O.OTE/MYEHt=(m9m[02%4G*.pETu(Euh1Xk'5T>c@L]n<#fuC:nBS!^L0"HiO#R#pcbNg
%qb^N\*]jhmR5"t1$e+f:R<cs'p2tFTPW%?[/*P4,2,AQ/Eb^i79cI*"M,3dh.;k<dBTq<!ec_[[e(la!6Qk(sPnhtlStR1j5u/BP
%Z*-S7"ecqAilo[\ZmeD3PE#g>*=)0.b0O[eV@'%SqO(!'#s:9b#D?MuP<cl77;'NUJqJcOZdf:iaOq8r#*qjkS/m;e1dee+Yl[`:
%RiSQg4\O$H*tJmU^c2?/h4S313'\YH5=`tQR*kC9_InL*/E)2TEI's-a\fB9*.s]Qe8.slA;"p7L+.S8K4\a[:nZJe@8rOZZY`nZ
%!;"QR5!$Z&$I+;1*"fObc"8)O7)WZZ%Zo7t#ZZRj_s<7E:SHH+.\*Kkn0^T0@js^0B4f1='.XJHS%&Pk%8pXnko$oP[+"dund!!J
%V7^UWE(7=pZKXDpa`=b),SGGQ.m$eg[1]^sE1(-Ib6Y#%;ks\742Q">q5gCYMut_+b/WBATc6VH`k`/T"\Qpl5ul?M;qa+1W_<p>
%:c<3O$S$n1rDZmOV_8J^VMt9q#WUure@ZPe;Jre1Ca?9)esUK_dIe&RB#;YJOrPj=Y%2R3EjBDJU4.aRA<RekEOno2P>,L=&ZqR>
%Os!$CJ?kl[j%\W#g!K%)D?k)++YPh<O"o=$J2`h4AE2NS\lMM5D+`2(-6!7F=H^"XCe-^g\%ta"P44LOQu&jZ8A`JWZD!OEP*=hp
%H,SieGD"!a$"mi10\JE_o<':)C`?N./k7G`D:"`'9T:#=)eX!*H7LA4cGdkP;+rl0RU,@r-6!.,!)OAnNAD>O"qaNe!-OmOY\*8"
%NWt(c-6%KH8D<#;4%`r)@BpL=!rJHpZ6=/jM@D'ZY%1XY(6_H&<-\q)ael!O0'9!tChgj`/VhFPnhSQD!3XpUD"Ot6Z!t!+j<3,@
%R3AWP2"Z4<-W!DnSN_<9jXAe9BEQ/OP\a5k=XR'=2VB>-d$CG;1J'&';bAt-(O8U[,o[IB%-/hi*"s5Y.4(JR@\C(6,o`1kY$%'R
%%D08Ndpn(&gN$Iq8iD^)%"cf'Z8iIQN`&J-HCu_#TOa77N/8`]82a'$3uO1j1E,/?5dDPaYpfq"-8Esc"d4jgr'1CJN=WLpL.DZn
%`p&<,2i8`#@q#!9,Wcb%+P@X;5dKW)fQ*bRCY5@@\0)1$V?843K;P=eLGNLPVh-HDgIRTkNAD`u&I9Q7N86T>)]j!\)O-<mAcRE$
%P`Q>MVUe@2"$[rh7=F6>J6\L%DD<:Rr^d"<,Rn`I^:Y.'DYiA[;a<7pi96[5A94PhA>b)s0q1Q[+WE>DkVOD$A6$h#H5*f4VEiL)
%5W0saL)X[H)0qsJ-m5!)JLdu59W[nMf"U^*CtP7CDGWSV,eV;T+<(BBK?+\2nJ:%S=%"ron-HI$6oLGJ35[V/a9GX<8oOc!9EB/7
%=-jUf2Q_L7qCY:Z7eDP4oeE['OG^u:Ij&@?%--'e.7?(N_07hoCe4&uP`ZC]Jh1u%Cj[F9Lm4#2CCKC"a4aNbC!&6;Ta!SV1IMXi
%Ji>HHCcF-H;!W%ejiE5mP)To)%_NL=N<_s.\p6n+M0[;o-(?/"hPHHQZpE>FNfji+?C=]s)0cu&.4#pqOBf=BS,J*J:F)M^-(EnQ
%YgO@\2LIkgJ9-rkR)o@X:eEW$S.S2hn8$H4;#W(Cai;`Oc:DFS),Y4M&`aMVWDr@o<#pgp6itI/i@+1'%NTfbQCe6GE85F&SF)KU
%A(0ae,C\ND`t"m\>oo"H#U7m)Ylc^V)`2^`XG]1Y3th.[iEJriInI_@F9q$EfFa'jfuoanCoH!KAC]b7fT\RTO=amMA%_Ss,-`T6
%"d\Zu&R4eD#)GunB3=Mb1@7VeE/o]J_FPg&>[8R^erdhRiQ[89;_2`TZA&bqRfk.HVC67+%u:f]-.7?!:1k\=@8d>o0X`e3)!aIK
%$c8c/%A8*6K<7ZoK>D`=OEce;9d*lJ81Of^J^7Ye19_'f($>VMY-3/Ln?6+LorRq(\@KO(S'nL^6-`dlJR;@PK.i=&Qk!C&TB+AN
%,Qo/cak*\M.k:=_>[q<@a`FX7$V611@hU12#CA^I0N#+bPKpM]CJRfsb.NJj0Fh%B2+=CXH^uBfPQ(pR\cT&a?7(aY!!8hq$3/3/
%Xoh<GPsW*[lX5ZQfJS(4N.3k=[4a7Y#'K<Ka]9]nqm)@G8_6oN;*>g?>uSZN*07tI-HCAPIo#fDSC9$\;fms.Kn#qXld4Tqr#F[a
%NfK.>SC-*u"[QbqeoVc:iT0LZABA8@VU2G:K`G1]iRS\faLOE9[P`1eOPC@#D%TM&ZOn9k0T(m@4Z`nWk1hu#A@U3HC(N<;S?W+T
%5OqY:5RYCVe(QJX'PSQn>U3+P7dV1CRK0J=Ui,-o]94;,a'!c3mSoW4Z'F;@<1()^VJ';RZ3IoF#9G30pf\G/8_1T[i9!;U,]uDJ
%(617k2E:[A`gXUN<Ch-ICJXLs%)n[b3\Dj2:/SOO@m7Q%$u9mV^gF2LCZ5M+hC6:pPus_B^tLZR*edrq8L_kE'mqm#Ee9rZl.$"4
%V!r+Xe@e^aKHpP#2i"QU&<ssgloN)\6[ZIsWsu^)a/u6*3mPR+KI#03?&P]4%f+%r\t,rY,o/1G<g0<2QY'M!0jn7$%Tr*$SA8NW
%eKdD2"NFG'>#mLNX%nl[A6c"9C/;()b,Y0?dW3cGMQ0,H%@,@R8Xfs*J<a)."5FLBF:,&A.IGIPdSrkC:IE>S_,QWKaqDL48u[j0
%S$bln;XI'#Gf-Hi3BQpKU,pt*@gUgu7("UN[h>\eF>hICNc5OC.;`i?9#qibq!'%WRDjGb:=t53Z"&e2#Fmi<_k=lGeMMa_:!Gt>
%.@E6HC(p`HG-k_!SkC)C@S)HRQ3^,NV2"GiF#PmOC,fHT<KiHj!f&X$C)S2&J21"F25S=3_SlM9RKg6k@sHF08`V[)8u$Pu_bq>Z
%URHe?W0,R_9<gc[;sn#.BrFk.kYQrkBfOV,Gpb<4/;@?&es/Sh_rb@)&8I`YOMmW@:iiF*kb\o+ZI:.5]ca.J,<F@QM$_d#n>eH8
%`WSjq:X\Cp!e8_RJ,[Q?f&ffTj[u6?,,n\E&8Hp;)$[M;BTR0K5tsfT=3.&]a,(ae+=%+eK4a,"^uPY14G:mRH\Nla'O7J1qi80$
%Zg;C5_]K"E9g2t'YUXpeS>I:lScqpe^(?IG?;D`Kd"_`P9r4uBb@n-/Of`M>(4tl<Kdh+)[b3'kB24X)aWcV4NjWV[&uUT".h,DD
%5.5%g<STF-V6PSJRaE58)U-$pUIZkP.r3jhQ'EIdL_&^F3RW"_M>j8J$A4(?:cZuoOMabme53#0g$0#/RKA^nR*J!p.B]%t6m@V,
%6-1lk3rLp/Qr^0e9S8BHHRW;_<(opp029:69OAFDFQeW=?0Tc_LkLGOd:K_g]X"A$NN#g;FQeWa2+NrZcBg;cBs:*2gHiBu1lDc"
%fjLX$?ds&68jhNKYgTbCgS^^mO]&N=.32!j3(6GTSba=&R_Y<W3#A/C7@D$a.6)#K-cM:ndA.5H9OZ@7@)=9=/Eo];DB:)u)-aQ-
%>W%q2CZ-a7RKSXQlr0!&UpO8R8"03ULisAhFR4n1R%m3mfkQtOh>l1Kg*oE.=bt?PKJYF2?pdkE1kc`bMM_D0nSG>k'L+WVnu^oH
%@l]qpH8KXiJWnBpUBMQRd*Zr2EKGdIA!b)qoA"#JIn1Y\CilbX5Y@$]HqqhCNmpFtaQQ1M@tkMr.mk?p9jt]YU_[8n&_hmkK7OLq
%=_)T`kWm87.OC-:bj,Uo7W<e:SRP$O&'L,nempt<heaN/7iWp$3TaI@1c`T5d@AmS(:uX:-CXjK^=5#6_iFjRXrBoRTQt_'Lc0i)
%,!(tr+Z^0dPQ;HHiRenSE=.N!Op<*ObCPB\]+fr*[DnCu`B5-/-s]LJ&2l?cR2@.uBP9G#3VFmU1`aYR2b:L+FDb$+1hN:+nIBgo
%ZnKfO"q"'M-f7^^d%Q'61IPm`_uf("J^?C68Zj.5^]BaDUJj-ck\mo%d\-D0*2G9%S=2h.'FU@)fWi5gn\e#7-j2h%HP0t[-UAEI
%9CEnM7D3\q"+=?!>5mbY='m]/=/J&,T>-imGB)I;]\9I0-UH[Si:CQ]\XhMh0=f]F3KYuF%[(bPr8iG.\(SdYClA>'o6Te$]od]l
%s8HrQr(Qjun93jFAuf+QchT2!n>A@El#4V%B(F!Qj9@^=h320IMbYQoVGfM2B()t\W-2qR/=k5+HF&t;OoEo.X'NUbV\;5lHKJdL
%)uWWJS4K]u>5dB`G>>b^jd;M`GG#C`%<QgnXB0b("aVE\qUM"bm[)X6DlIm-X<tEeeG=?6ch9*??8_&^DLqfK>5,(aMsHuO)stPc
%BD_8feZ/k"7?./oR3JEpY6'.ICTtEihFPk6iLBZ%ZMPWK26hARffa'!RX;HcT*/MDl,,1shR<u#hN^j<HdX=JaD8]-NR2so^UuY?
%Q#>tdVtTd/H'(Omgo:#GlC;p@c^H6%>C4'++13;.I("%0qUB?Ko]j-'o=!FJf=GYiZJI"Z[p86NMp6N1YV5:Xjnir_j^j?>k/K''
%%t/^lp#b?hVq%qm._Sl\^mdobp1qn>Zq`Z/[C&c+I9>AWTNRf:s.!]K*:u,$hE5`TaS3U:qg;Oa*Of8/HEYtCq*fK.rV,k%=BMQi
%QgTfnEWasbnPO08O)j+P-oX?4%DnRDhl.mDDe$+Rmu@p"B6L0PLUdJ0T-6A@'j([\B=[P8DL@`hTB4Ab`qV+ZT0:ACUNMkQe=@aC
%b9a'VV:m$!`m/"hgA5k9gfALA#b6'qF^h`(41nMO&3^0mA-)Y>gT.L,rhrKR8-(:ugUpnlg23@M[o<7C,@!I@J@3Nk[p-$mQd5'U
%@-c&@L0M(,)H\$H,A4F*&m5)jkgO&"=0L3SI^dn??oAG`>i.m*L2rS=8/8"8^:dRBe[bYAiVDZ&gck=2UPNb`g@]7*'o7e3SojZV
%HaTEX9!JlfRZEegJ(0Hq]=,1kEo+GH7e:JJdgpTtUf$A-\!l,ZV-0Tq5@2dIr`R3%\GE>`C=]Q;_=Wm64`D[%Y2k)!5GRZN*m44@
%SfR3-h&,c/Y[==F5PGTaX)s<f<k[15<m8F'ldst4N_Iu9U,NLWdPGnrJ\jM5_!;,)1tc-Q-SX1kB%YBk=7^G@g'UYa><"Z>REN;Q
%C=KG\<MU/g)*i4jn-3')4t8>.O8:iTMtFh;dKd72IAh8Q]u/l6YD>PkW-60XF-^0AV]Y]IYu0t,=6et?&BC:#E#sV7@d1SKI-]r'
%h5GH+C@id,;VNWad73_Ur6i1o8,8+=I*V)=4[N"0s-\h*j]8Fee>_!4(\!"cINVR_))^nag]Dm@m5QG>^-E`]Vc'Xh'U`^iY[9&j
%>&RAt315QkS2i'mAd/#b1d9S:n)F`_H!du9<i:AuC:"HX/D1,M$lL^."2BeS_W!FFq1(mHA&aGY^S=G_5WikV4KCc?h?Eg/__]&W
%EkY43-hn6C_%q>+K0D"Z0Y;hDLr),&F58=?rXNX[It:/VEGiP`m<!7G^s9#ifm&5k:iK`W89TLu9i'to?G\+,UP3="i!3?M()U(>
%ZZR&JbeSR8?5.?g/0@o]c!"VTeu7sNZPi^d8\b,2=MWI/p&=o78Y:3rQ$TpqW9i&pCX(^*V*1&IN`FMW8jE5ekC1)AS`7[6HB0s(
%kXB%/GGjInno4iGn&'.X.pu9pSiu?d@ikNX`[t+EnA[maD6VX$6LSC1Vg=J9d\5`M'JL:2c`AeHR@cY.#App:(Q=^7Y;[B=6GXT=
%H_CV?<2N=Nb;[h"9D`n4r;\K&qjl;XOdCc6rTZnN#$&=OH`C-4^%rh)?BJsUY?hrG;L5Ghb$D&tI;$'X7:$AP3]jkpN["4,16)1]
%X\.X"b$X<PG4PN3YL4l0JT8lINOAoEW>8oEEN=P2UJYs\.KqS&p*u'8NE21[JP=OAFil3'DK`"r?4fsF\*NA%U=-+b(Rj^"IaoHt
%!17UU)FpM1_uX^nPTit^FCnY!(IK1!;WotHqSX5e8<gg8MF8?@P(?%=A`Hl,l.\JAU(j#"_m8qDGq;PgeT+2i;+>">/Mo6f58IgK
%P[[LIFClMN16+g!2g1[QN((#O"0j8.(6Lo?SOP(EAT*fB;2TI-=>];OO$tMi/d?a(O(p5ghC-@;'^<iGbkdsrV&@:?RR6K6$EHW\
%hrSgpo*Rp2NSh\D_'t-%7JtTGkiWtF'YeU,rUUA`0V<j#KkM=tY9Fas1$PV)^p7;K`pW00H8WjhG[7r(\e^7V[/uCs]WR7G[ILgd
%'^OIf-]sA<[F%n(C@kEEX4heuqerZQ@qBMQPdU%]2I=r5e#Q[',P8MWrp<!u,R#7*5BY'XPlktfNNPI)_XTH4n-I%_BKV8pA&buM
%IXu0#mduE(!K!5QrR/^b1Gtc4lecH:m7-3@c[El[*43!+W?&Inj^JW;]VXJdf(SFSo*]L!_ReI/8oLO;fc\bP?X:9[0c>Egc"Ot!
%`ZULS!MS.7BH'<(6Ktq8KlVH?`[$d4NO+dra0A7FTD[Fn-3&HBq)S9>S`C<X?^'Nu^D"[gLbFCX)N@cl^OP48gRn8r6A<F7-A]E=
%GQ*M/r-^V'N0qqfi:n5_ea1G]UVT`hD]Q;kh;me2F`Q>"oafZ\IP(cHg:O%`"UZ+DNm=sWAR>X!lC.u`TF^5]P]D3AqPZFkkX1Jh
%IalD`?DJ+pKk'6@i:c^5hl6>[O))EQ9CG^EN`TG<LLc`&I"E694n9E*(Iqqu*(EH:(#SE*"9XW>rPnioZ2]#%rP*a\%h@;q*rCH-
%rnk!\GO5@C@^jAVhgtJ#N[nNH[f7/t,C+e[lV9`?EpWB<:lEGGgOI4,hm(LOm.7or,#CN6W:02IFDK(%AtlXhMi=n_Y3;@D;fq$c
%'El,4>5,(!J(5Hset8:QX\h;Blm3,'p'<0PTQd:ekaU."?n">)lmE%:U@0\kI)+@J6/QBfHB6FM<4GG.$^n9HN%JRg4nf^og;dg2
%1V5P'PE!gt7J4]@_:Z#\lsJ6*mi6Fa[H=#J9<?r@p9+6XlcpUF<hn6Xe#?@9ZoXK7\UNqNrN%*A6WCjk=nuAg53\V>bV$AZCWh0d
%_Os/<C5q;`K(cNEgHM*@<pDA,4<pu-YH]N,I*d*blJ#,Fqd_E"@G?Dt2EhPVnY+^?m3RX-kEf`ioZ81Z@+7coY@*1bnWJHp<cY[M
%hqH0Ykt2si0,Y^8`eKhbiFQhM)&lo%L6o1(AScV%FJg<=$QEEj$3U1Kf^LZ3-d]-WjXQ"Orom"L'B_/*#,E8"n-l].C#hMm=#*AV
%]SU4L1226Kaf(g^dr<2OM?!^tY_g3[_k=moMY(<cS*910nk7,4%!]_Ki9u_dH>gDn5M+aUhAccF5oXa&K;#(LqW9aa0b*X7=F:,j
%pjM[i-fLcP)oi)Yd3:8MiOt9994Rfr^P;!&L/YI#=K/b.*#GRl[B09-e>[FgrkPH86_DY1TMT1,5c%@8lIXB4dYIGfJQs;2%Jo]6
%pslFQ^Yc0dBJssIeUgHbYg)tqo^T\@#5C8uG;Kg4KD&nH[93.tKJmiu1u#F@?TpdeCW.KQ9Z)>HGd^\L4+Gh^Kd,iY?/N*Zs4HT3
%-R4*;d[N8O0/*BakjX""iJViQL_B`)Cr[BKP<^h1@gpbQB'AV!d0SAZMY(=n`u*Hmm]at3YoR=j`u)0B1U^ePm2/3"a8#+nQ$\c_
%&S.[)BAWO-TeHAD'[s&JodYsG<kV$T2ICZBLWmg5kIhS6iX?:J`gSQrIG(`ECQCNaY:$a??BIV"WV6;U>7kICoAk-H)5)HnapZNR
%mT6<TXdre3[s+E`2eVQOFt`0@6@I%b*os:XlHB/D1fS/AloSmZaJ(ZlS=r:H_g\M+>\#7W=hf8<R`$Ie^-Ghl?E8l[e`u=p2Wd14
%#PVqkI6+Pr3UB]EN'CC[#5p$hcc_NtmR\YV(PgHf3-+YT6>H1d>7uB.oVA+Vg8cNFN=D^QNr>^fn5ZDKj+&e(g`6YFG.Ij+4tg\u
%R"E&0%)DrTq'sgHd15s:?)EnsRjFXe1fCc,CNPR+"bM`R[Wq&kBj5sLp!`G6DQqE,`R_]lBs'\,AUKpcTB=.k\PYQ8(!t=IVn'Y-
%_J#S(7PM,_jN_fM8.e48S1DsmnSrGoS/WR5`lGX[EGg/o9@#j%BH?7CF_?)l)m&)TRoZS9d&@`49EtJI2eS2eBs(Pc7f,;,C'>F]
%S.N\*LAi8m$RX428K#%3k=U^/Qt*;;&99)nfX]C4]RC>5UHcc^7\We%an=E#NQU,*SJ$iamE/bKpXee![a8p\Y=9*S[C#8O\1:Za
%IV@k@_>Xkd1jVOlD^]8GaB:H[NiZ+57YdX[c:D^U>p)(m7r)r\mWs-^J0n1&EOjUf4msSmK[X#pCVU[f5ddq".AZ+e>5,(!Ii]@t
%hJYrqo=9dFr+tOk?dQ"U'o;&;SojZVHaTTO/`1r'JGi!o-sXc7B_J:^KkX$sFCMick$I.rrV31Mo?=T.f8C(Fi.c!+jL9a'mS)Aa
%FU<tJ+.,1*8psmB6UuB%be&8g=5F2uJS27p%])'BedTQe5p+^U.i#?1)XX35+[S8>Keq/<Qh7D0"ZArcgXU60<jQtG%]5SOQ(kN]
%oF$qYYtjr?De)B#n5(W(,A4m.@_MO;<uQNrSFYUQSRF#c1%N?PU\!2M?NrCQfC18oGorU?f?a-+)sfa&RHI(gSE<9:E#rU>f*Ad7
%IAh8Q]u/l6+gh8Gm?"(Y\6I`R4o"naUYab.eB^9EN]4uZ?I6]]j'X8aK>'>]l,.ae*;B\^i:k2@SqP.2j7)Ms_e;=W(E4>nV<?I3
%Ku<LGId(,HjbObU'&4^&,e=\V15nEZ;9$h?CVGeE7"#qs,tn4tlR*pfr!hZ++tl_2%`?^Sn6=La-2G%P]T]&A[+:D@],--r%J@iG
%dHYOQoWe[JR2@N0Dc@;j^HNmFT6"]0)&[K!eCT8,AB^#7-0*T[RJP@&Xa_cA[\'mUL`mEV(L)(e7;X=5c4Ds,aH]#]HMPb2e0Ep#
%)1m&gn2&-<;JLP,p$(h$.Zd@aCpRg=($\ZMLM3d&h61rBeN82dIgk$MmT"Fg]\T88D`OWq2L]cCF\u@XY'$@<P=I"F]ba&HN/Z1-
%Rh&.mC".pkg3B"XH^NK]^R-VG2)k_/*(gNdfr6g?qaDt`%,dKp3Rc%!e?jeY3j5%U1),HRmT"`ol*9L5XLEhD\&CgHI)>]kj)l>N
%q.i;JJ'f9AYmAeN`HBr3]\9HU@RuUV,l51,C2PDk!liTWaHpWHok*nNs80RU2Z=K^hmOIOahP;]+t'pp`G01t<a+dYF:V"`Q"K-N
%egYHYWl[D1p;[gGFh,q6e.6fAOJX[8Xi<]L0=?/uV+6M;DdfM"0=R%uG5_\p6"eKR,J*(1Sn8Q"j<st(4B%4=PCJ&\h8]B%`D1?,
%Lu7$!^-->ArbURQRWR#:NPE'\b3-1'A8#d+_gpo\ZJtdZ1Q<0Se=SRuBiV8!jhj^(=lLchA8G*j(8T3WZS1(t<VDG*\SS7nXmbAS
%l*QIc(LQ7]Qc<&r)W*T`E$h,koj6/A>0.neiih-6qO!*sHi)Fprm*&W8UgN!aSmaD<b\?$rhEJnr\+*-$i4B(h^X%<c'2*]pSKa=
%AYr>qjYW#j$epqAn'$54\!kj2HLJL!?$nC"p6+T`EW>8*db\mg+8Mp.lThkbSLi0r:3/lkn?P?)n*Tp)nG!OhacC:O5.3Vd2!;K5
%47C0in?LK?Vf[UtC7fsJk2u.mPAVruo;FMEW`r^+UXn5#<j2"[J,YY;k$?Sr]V&f[>=%>i2Z;QhG!I-3+8AkV-3&s@5DZ74'RR8/
%Q/5R<pf&kp6q`MCZhf`S&O,/l9VtMPdZ:oB)p't<heIKcF>Nhb/_bJqASWV%(9/b@MamL'gZ#hlK<rGnc#<K_/<%>S3'+fd3<$#P
%r?i&2?a86d:1-T6U-J+"ESuSYU'88LKima%A;tY$(:s-&C5)>aYH-K8N2Y.ge(#4NYC9AV4?E?1`Ku5IU-2hia,BZK=L@J:EasmU
%C-RS"5&;R(F<"CkKV^g%>gcgYgC==8]NgMalbC,<qn(+mQbBkHhL:O*bOp+j*\Z,p9?3'@%sA*1o3tf;/3EQ2f!3>Yi'Q,j6Atg[
%oBJMG[E#?Ahd*XVQN&plqsCmpGr8p9a/eoYec%Y2G2PkFf'LbD8Ct<*d'58Sk&"TEnR@FU(0enTm>[J!nWNj[QgA@??P["MG`UWu
%Iu]l^nWH%AZELuQ-O[2GB[6,'7=O<N*c'DC/I<EKGA'^kJ&fb*Ge*hNbB;?a\Mi3so\IdbnT$d!Y/e`YeX#NNo'XPVmXI+PUUB?)
%++3n`m^G.8J<05p4'm%/N`j8\Hom,qaqf5N`5?$?j"Rq&#E,+-AD.:k0=8b\no-55rRR*t)CMr@AdoH/!El;sZeiD]7&a[MThgE\
%cj=2`k$/HC-WH7`F;hPC_5*!ekFA*U7QYmT1i&:6l(*-_p<QpCs2AX1>="'i1FI:=^gX..(!$.3..CK2UXG;M]H(8HB^F,l1dR4F
%RsOQ"IVA$[m<TJkOo4-9R"q"4I%:41SG?$-,[hBpCs76d'3Z=E@RlR@dL>[u5D#"]ABXoHO2RT57cg%+U$G1TD"u,b$"N49nq\P\
%4dfW:mpGQ8]V#!BL.Vj9C$#W\K:d?nhh;<lZ7K.Lk?[cMpoFZG:Rd<!c37#8QO^'gXs>8ur,npKTcOtui'oH7HIm395W<J>pE(&I
%QOF/.-D*LFJfu'EN^"QsB9!8DM^!<`O;e5Hb1Flt85qQ"%mF77kDt@:fLEcn1)L3UD6?Ymb5\,SDu$Wd9$W6RlN`2K5(5a-NW$'_
%?(?D'(RVa\qOE<3Q$PN;Y+0d-1p?-W53%6jh91,J;>Y]Ukh=VUQP[c%^0Sln7[Gana$M[53Z2V[E\"Wi):iMbqb"QVDH-Vp?ZhsR
%W)]"+p4=?4Zdr[r6#>V?bl\ii^5>tVa`G7Ei"&'k52*]K-/Y&J]pGiCs0bg@-W?\Me]`Lrrq<qOaW`%W50s"iK*_G:$l?JL_/^M*
%-*eg'f/dD#d2>PBV4J];U0`7Hq=-K,mod8;rd7Ibp">ma[Ji%5ESiZ2[<;Jl45.HL\b_>?6ZO$aIY](nbGO60H^l#6WBKA8%i5[4
%5>&*W>6F8Z*Yir`@BqZM[3,CX(9TS7-f#hO:@kl3[BnK"gaAm*ho0M!E@YCb]f*G_8*69$a='u^[GPP!N2Mj!7fE)h1LRl\s+48.
%l0G?&PKUs1(JQkJE2$aQ[MN0&*S?:*l0.sOgj3&rcn4Y5F>-s]A8YH6[H,llQGp<h(T2cprqFhA?,![&/FGY<KZ=2TV[X&iDeC?8
%L&VP,^&K^gk3'Ed2u8kIn:/g'nK^s\`ZVEJKHCYd7I^ct=33H9`C1%b0.bB,hc@klS='5"DTRpp+InKtbPi$6\1B^ti<Zo%LOF;b
%S=FS9*_>m"OSk.\c^;H>mk/5@'7&]8dJK;:c?AKnm7+[WBhCkgaFi+:;s[k(p=RsjME:==*WVP:g8nmoM3h-W[k!GA1.f"qgUkGn
%Hi!]!jE_XaP"5=f##F1EGC"<*5Q(!M[eJ'n9%.\gM7kEh0)Dq)(iROE0,IBu\7_)XP5en#B8L;K.IFY0hUOTLc]\1ONIb?Ef3-]&
%bkCeG/<o_Gf>=0Y2gLe!`IH\=lZfnhTTAr!=k)[bl$;//]j5@>SK'"Ld7U7%4P&hj(K<Y0RsrW+=V@*CF#)?^eRu;ghJ:#A9q#^^
%^Lpf!5!_,AC`'b`f#R]aD`J>NHi<PiW8d-8Vl-!>c[SnTh)gsDMNc'PLJ,2Xk&.d+?\eVXmFIcWUt_5;c;*(?O*%;NgVblsn@5dK
%J*%mQqjhT4R[9eMPBMr:hGLCYW0>s-B+BfKrZEhh6!sXsls85BcpaXr;<7-<rT.C7;7QQpnR[:*%`TWhIdWbKH`c</=T3d6&A?o%
%ON'gQCpMD%+0#:[]\0j.#jf<S5GL*$]DI'f_"\t&Q+YkMmu>UJ*]_'L@n2YrbNF'GYU4odQbRc^3Y:V$BZ9SGlWr5Z5O2=ZRkO6%
%ZlFnYblrY[Dd2bnrO]GP4RV4460X_QH1PQ>\u],&QCR--(m&XgC<&BE5J+%(U1qtoFfSG*\@h)7DW\ut#"GT-C<;0IQH1I<(g9A6
%faYlJ*7oM%C8,VEKU[hun]aa.`M-7Db[jsFAE#AqD7a=p1PqQBdOm\`1_3>2#IW!'X*rFI&U8Wq\Ui'"G,8A:5F,s+EM\#(>1RQ"
%HDb>>7U=&ZW3`b_Y0W$M'@C-ed7HF+\6`?$l*X,:.c"F5;u^/crMf"Gp:,4o9MVRhP@!LHdk^k^Ves-%C/fMedOpr82*rYA3\Ifj
%m96F;XWO/ld`@Gj0qfpW.L4V/,k$*KYN0KbeYN$8g8TWo%4e"+DQD3bQBE;t[#;ZY3RPBs8ksDNAfP(0p7P>?U[HRM*HRSYI,FVC
%De`qRiR50fHapG&H4P2W7]pI*UNF&pr1h]raZ[toX5*-m]!]g*[F37P[pEdV>45I7l]$5ZYOkh,/<);emB!!9s2PqO(hN_`U0cFi
%XkcV07BM!dkb]RISVUoQ.gj5[eXFV,_(G@Q);@t+$^Ei:NEZ)'N,=NXdYh9a/l+6T/U,%^8["Znmn58nC]?5'g>l$;X5DX5%dJBn
%G*Dgh5-=d+`Y5dQqkbTTIFbMbC7R7#K"F7M0A-^o\Ac!CC4!YT>pk];dbHp"p1CM]CXh+\i1RFE[q'Ft,[KW*^9=)>V>V`D@;?ga
%5EZiP\Q_.gDI(u!?0NAQ:TZMH7-._%]6o'*U!Zeb<r8ZC\E$\S7A`q#ek05X>4mNGm9ne>cW4L<>$QQ!dV.jnIpMBe-qaJb`odSp
%c`]0PohoflQ#=DWkp:C9a)5G-b]`Q*m2FdCCWY<&R8f=!DnU7:\=bG97'?'@LSVSgZ;YO$Y4Rmk5&9Oc)DpZiBQ1Cp@p18KU=NIS
%agKCmr?VnPqW].mSF_"RfkQge4kXLKc^rla:r9N%qo;".d]*/4mK)J\U1=ZS[Q<0FqF(L(-gCLGT9\2K=P>cLdnK%mi3k+Pl!uQ_
%?H@FL:He4i4J(e4oIQDIMmC!uYPd4IJ,9+5X]dqLcE&E9B6$Y9;bD5o9:!'2Gc'kt#4`rIjKkHb5&lu;rj#5q(M?NkD7_(rIO@)G
%XRhmo9]nk.B*JjRiFR,i26TkM\M_MneTU9N\p*tfZ:h7Q4'-Z1eG?Jk`Lg<&H#_lf+'?853DYSQ'msQ_M5Qu6SQ2h]X`Q?JeXK\9
%V35SeZ(F5GL%H(en>3NShkj#&aT+PR@m@>qYHB]#Vrl1eB&05.HT13Qd3\0@ahH0eelo$!G]D2#"!Zju#ArIB4&q]OdMokHA)\/E
%M&u;Qf'[j*^K&FXVjBP[Z^bXBZ$gS=1qu]LCMSELSe&E4pRU(<\C*D&rm:YG%coqSUg$LC0<F=#oFn][ktQ#=iH;h;CFsA0')f#"
%SV>aXUh="$7l)sjXRGTN)Y6u.E'.(j2UDA-C+em/-a='5[]@Hj?I`^)^Pd:.dSFFM8D<X9OdGDtddEhWT/;`"eb<c>B>2ch@FjKT
%`of8')'78VO42A=a2u8jD^7B$.Ve-q+uensFR/KBs5KoHbT2B9fgFIMc4/+aA=t77@^WT?=)"LpBLeV7"rLY'4@@TD%DpRimJL"q
%LN^Lh[?-Ypq8]%DpVWIj1Rr)2=hUiCDZ-5Reqs1G2/-.Y9,E%(>.4.jNEVI!Q0rP'G?eih\q&r#a,aMDFQSX*MW:+!p0,`%[J.bD
%ED\s!WS,^C&RTWGj%aa2eY-sA9)c2AB$:-`a%o[\n*0B7b\#KmcT"#cpr*L0(QUgqUu#G43k&6Nd<BBgdk5M4a!En9m^4!\IpK9D
%EML3ZpVO2*2!WU13P3Qs]hDa7UXCda32GM%*Pf*`CXRdq_M+AGF\S7^Glno.Geq[!N!n>d,JH[)C&6@JW]4oM:=aYfpJ.hZ(Mq$V
%2;7B'g6]2jc)dM8+.'D$A:jh6rE_P`m8c:(MdBdtT?(h'"^:Z+rOT(MG+U4V#\EG"5jS&;$8g&ba]\4K^Y,*[2D//2\5BlEhtka[
%F1PZOACo$spT1jS9tHg_<mFZ.](<OV;FE0al.u/Im/X,@(Up+@"Wb$))+2n-fm9*RHs4Fbc`<ECT"WDq%D.C\j8`#gk\3np>*"V%
%-4(@3j35h2eLWgumJkb/c^WR+HY55%FA?$JD?$-'#<t%.VkIpf)&(M&ml#%(7^GaV2X2*\-:nS#O]Cs"j`=V6g3XX<3,$^Qkk1]>
%oq^6^s3uahBHYFMY$5;S5dUEQk2&OZKc>l^_$l^;mgO%`c),L1>gVic1W/'h<f<F7^0"ShXfj>^FrUX+cFeS^M<m4Lk-@&*=__Kq
%LsB&#OmJSW:^csQnR!*4?"qJ_n*nbX3ieZ59SB`i1jR\Y1%5'4eig??k7?L/H:@N5T!d;IWNC'MriOc(Y''GRC!6/8U8FnI9hVND
%X5[#:ID;3#9!<P1[[tGJ?Ngt_%p.l-MetLVr\D3haLA"l^p,M@"r[=:.D'3(dPMoe_GXZV)N-]#lg'\J;VRrh"8ZfD>[BRM\">4"
%0#,#Jhd'C;H5tgf<4Ukr\$WKV1&9&,ZWSo)hH8kgn*u<k\$mFPiqfF0&)X.aG:/0,VUh?H^OQ8i0$jI0;D-k>0i9Q!5FG&+2Y*KB
%DLG=\Q[DN\H.[DVDC7YRld2gg(W2:=NT>l\c]`iQ6u,F+CMS;f;hrl<J,&m#f9t]T)`R9PlL0)c:[$ClpiX]<mQ@.L\%(tOhtCs:
%YC$%e0m`8rP96YLkeljA7b_;DPFlITdB>3eY?AIl^N_:)jX.C(Gd2GjB[]\)]!Y+rY:eG=0,NhRgoA+Es'i.#r%MdDYE+ubSZh\O
%/,FC+p%S>jVs/t/nup\QEXm:Tpm$1>-heDOa(^/rbPNCMI1Lc7g4u`@0<L($G?7NTkM9b]DRrIKF5)U+^NQeF>$\`(,gUi6j6H'?
%g[A5;D`kbJo(9m!KVsRfkp@L52__j'=[$q.f%gdJjkBUdf'fg0(Z2u'[BF]o#/QN"61Ap_h/CSRH#@?TnG*!a^6@Vuq@?mh]u!kJ
%nd9:VrPl^u?a"U8V_^>!c[,:@KQMJ`J!+pH`m[_?r2?cX-Z7B`gA7?;Ac5&D_]]6/dds"7Oo&R.hHjE4pY1VF(Y&ah9</Ga*q!]f
%ro!+?fp2G)pK"1qDf;d1I0b:/3kAV1p$h:ZqGLonV'!<<j,H5_o*D?p7pd'n>6cO:mQOh3$A,1&YF"SL*oEPph0<Nrr;'eSS6^R:
%BJXV2Sa:e)^2W`*BmKE$Y7o&WC-K2A\9$tEF1H`rV>QMGpr!(+Q!3oJ\GFtZUSWaT2np=a4PcY&_W1CaX&Jc!EG)u^G\_HR\ok=R
%o\JSWnijh40$VA]hlj+_f5DoV\(#ZTE0hLBp"_<,kjH'@S\9/mp*fo2'4p2!PN9?J[2*s]b(m;rX3U^uU>;6,ICOZ7G;5PUT30d=
%qr"V.D/@ulrF4lJI`Gjq?Cm[lkK9"1;I?#o55nG4YIsCg_:r*FQQJ?Sd@F%R$_+^&EM>S%q=\V"k3_pj#!9TUUl!=Pl&YJkjJ1s?
%A:5!FbV`uSG%V:/qU6Dno(#b*@d<"@o&Qp<c13`)G.2i^9P3hE]e,jg_2[4#>']s1j*c2bFf/6Rq=Ms[H1q'P;Yeo0:Tqr_+'-.@
%kBH*$apSIIHY)Mfqg$l_L:+<Kft1:.:L439J*QHcEc>gb;`V3LGKS=N%C[<AnfF-9^FF^_hq?bZf2TICod26I^].iFr8@7]KCZpW
%4^27(I<26tr-n3XH$--.Xo)l0lbi;Rlg55Eor[puq<?\V@ej0gqWIG3K@u[`p/J8&I_NEr0CPu\Gi`#XgK3Lg-XS4CDd0\ObJ/J>
%G=Z*4iU*\Mr98Le6i$JCriPbZlPDYElJ)$?np^92ZgqP*dOQD6=c^bH\)2Tc\$kGNb$Xo"HnG)13KGQ1l]mZjanF0&`735reAV"<
%gK,&pb7C\2\aK.J-`i<MSI*p)3)72"_Z+ZRa[EL]@s[.[mH01\q_p!K-Q[HfI@XJ(I'GKtkgNIK@f>>5A)c0sa'03]eI?HV7H8Z7
%i`5I?bDCFDnj+?5)\WmWGKQO*G)qijhS6Db9[mDq+)j?qr]&<^Nn3H1H8f.6P7p$KCQh]RK>Yg!qX0ip\Xh[KV!YmS-N,B;Ftu+]
%F=6PVIV40$iJTA(9s/:rfp[<$@m-9.p?(SqjS"AlhW2j5pZ<g[:!VO]r"umj-7di9c=H<MkBQQUoCP]H23Z9$bD2;;WPsL*'3c"@
%YMH^rHuNrre(Wb<ld!s4fDP3?j(n1?cX3m3J(cM^>@+RQ>^Pfic<]1lIH+[]EN=HTg7.omCY(a$]\^A'\NTcfgA]+@_eVcWG>GBL
%HY`6)bBH_L-!t_AlL!`?la%rt5$YQU/'[BGDfPLIh9Dqrf9`T;Sa1'HcO[3t4M<[pI4(P7Gl?Gdn*TdDNME]/X'b/.oe2qehnIt(
%h`IDZ="E.WNMGe1WVNORp66@ggmPaeD82]h=C7Rn^1M+3Gl;`!j6]]blK-NtHW.[B?e_-O=ESQIT]X"]C9G4;T/rC0H#mJqqe#99
%>]&He%I`u1q&=OLht_5$l"S>QZ+dVE]s7Oprdu/.lI5,>T2#kTDX7VsAoAYR>Q9)GGP(A*XbJe&h^_LKn&K@EK/gA(IIBhYRpLMb
%kO%n2Z:7U(D!jtkJ+ujnS$"qh5FZOA=i#2ul06.1NMY@cbeir;p.Y8Jg&7<DT=XVMCL:/S1Y_LkeX<mBQJ]pahC:a\WS`1s?Sh;]
%&c"AhYC)nS3C!1cnn.B2jm1.rO1h<XO54TZS'S!9Q(.5G[8/`*)jLpmO6RhEhs@a7^Rq'b3VYT"7'4eAG90QHcE@(_mE]\,>%u3p
%fm)8>X\<i?c[OQ'k%B#S0>cdcDG>VP>e9#Z>2Qu8GHUW<enXqVrRTP+GOj=sO5'*)^#.Yr>K=?GDrrC809>8XY2>kB$ZF?Cc7Np_
%I5CW)Z/;!sm=0*<IfJnLA+"%0`SoUo_/Ip&m*bcjq-[sH1&paI9j]^Vo_%jGq:Es\?CS,\IJ%j!nYFi?R!@WI?'p!/@Wruq:AP@A
%-]^JDCu+Ni$bsB$nnB6bNrHoIm8(@Fo^q-KbC)6nA3KE4O/s_Bm7HX:_9*^4pUTToc/afMlg*$GP-;.Xc'\b4hTj?=]j@s%lrU=9
%Z$5TsQJHr$rS"g][D(iapMS29pKO[-kNVQ8GL"s4o4q+/[M(]/T2"0]B3'2EDW&e;mOnCO^N-g$V'k]OptA+0bHliBRs;8N-"#[a
%oTj.'H[!@Vn&`2p$1I9+CH\lpmTS6.]%=Omm*X(L+28+0r3bYJli*r=XVlV,m_JD.hRXR/2fC<3#U90?a2+OIKq7/`Mk/21DI^6i
%I#[#XKf;5@5o@pI+41S-p?ChrnF_4m.'.Sq2oBNu2Of].2ppI%O5&(2jWuSVmJ`[$W;cGJQ[!Q:TbBMqVq^aieE_;UI.cuHr-Rg7
%1@q9Q[r1*)^O(G,p7mIbZ@"f;]D\mUfY1X@H#G#)RQK,m2Hk=;jg@U&<`X*[n%;p$q!:cKc'')jH55bj?#+c7^\`!G9E";PiSOFe
%9(ZQSmaqEpI_Ri9i8*t;q_tQ3pGOOWHhT_=^@q2*qhadu^U<dBF8t+>m`53o:N*Dns8:UU%>"EDH@+qngt_JJKDV./Nt8\QcaFop
%*o1"FctQS@LC7=%$P+%@pVt+Al0IGde`3Fu@enKnUIDZ_^:q*\I<Vpjk2=M`ig1UL_ke;rO1m0acVKRfT!kcHd\iqLaea/nD`7E[
%jn[/jmdd+Dm/HQNYP2RQIs:;Qb-e]+eWk)hZb,d=COU`oj.!s*Q1jYc40&`fpZnkQdES*0=!,SCX7_t&miL;0o;2?JcGF#fBX;mS
%lI#$#YIdiL4`bPdT8Pn8Xj:h3f;sD5^:1B@F`sYRfSZ:R5@3%2*'Jat\9e2Fn]f(iqQ6)[n#nCib^<QComUh)rCafSGqsI#Cd,C:
%S"+o4oCDD2PJc"[qbO-!hKPUKqsDkuVobVX:);0%n(Dg4H2$[^B8<d?TC(E9]_Up`p%pB]1NrTe`r5b^o#AjSF_BaXd[fskCj9p/
%\JY6ombYCsY+%rurm#ZV*ua9P-@tDnl!4[OQ_X^>RG![`G6hTHNh&.$gR5u?_"mKtp8@=.8QFJk\`<,7%L/:Th01MDV34e-<L$1k
%r89O&V18<cD_D(M&$N]rp?Q)ajRlUS[.r6;q#8nFrqcZoo!<gm_gc_$?f$%pkC<:'NB<4$o_>oQqr@XYIp7Eqkki,CI=:VhC?E#"
%J!aSho>MfbZ+To(n7d1>h>3n=^NoXEGQ.KA+5QhGGM`2B+2.L/>CUttV(^^)hY7'>_mesd5Q?eRhtZ`"YJ:&+j80q4o7MsFs5feQ
%55:`l^[q?3Idu0:^3of*T=p`noMbMPY<Vj9YM[%nYJ:#-]pE&N.oJ1l^&7F!GM`4FIGt(lI<kj*^O/9Gf,m5*s7IJJplkG:rp85Q
%^\cu^s%iIHX+,N[_r(F_"(-QX]t4gCs8L'2m!es2\,ZEIO+)TSbEmAo\GKY3i.M%9+91SXO8ee1ci3F^:G9HVL[u<'r;I4Vq!a36
%rUG5a4Sr2pk)Vb&c&Y*ej#b#(C\Pk>Dgu*m'^t16q:"Zequ-IX4X`O>kK_aBn,2b%CG38>kMlG9Ie`)mibMp$q>?r`m*C1Xi:4eB
%s7=s"J%5CI?bH9mh;A7lNOS>)rRr4*rU;1Q^@B3umsaos)]sP)K+HkPW5!WU/i@_?elV9lMb!g=g>.h\^OQ1G8&)`>^AR3ch%*i'
%(]ShRpYP]0mpEX"q>!hC]H@.=IkU6)rndNZhuE'B0>bcGLY"_=rN1R_oC6I#4o4"_iO9>Io#Vh8\pX79cTh<tb6RPJ0E'tJDr:B\
%#7hmTAd?<Ie,75)CS/?6LEBiOqSgLYrUdGh?U+SSZZfc)\U=,$VdJ6Xr',Z+g\Ua7^396'^]4;pcRs_;+)bFkrlP3*^E<I0MsJ,@
%r8k](5<QURdIPaVs'Etl5PjjK$L^.SjMRVg`ts2MrEm9`j/kCmro2<9^\?X8bl?6Ys"+-;H`u9(rg2LMBD9.<`Ru?jrUS5Eb("m5
%dL5g$s6jT8/b%m&/1-OD=#h=):=q16%,9@B>;;?=nQcE&HMRnt"*;M8LS'"oe`3uo7phbT,rtJ0p@,C%g`JbKK=:X@riNg4pYN*g
%rqu;=00[/Fnm8Q;2c9/*#:<C.M92o>.uuonIcJsch<>NJV@A3D;T7gC^Q@C%#PYAX`*OYqEna":8br%SLQ=&I5JX=\rpil<!,e2u
%[OUdF5XImO>PIW,Rhjr!)im14E2@o`Q[e>kh1m*"aB[j'kerL^r)_JhnSJft\AIad8U1-U]3fsU9j]XV*!,hlqLG^ejSba`X1jjZ
%4h*9>VgnRo)XI.cIJE5_H[k:7d'l65q/gZObBkUt5Il!dU+/pP]([%?lDp,`Hue]7a]EZu>'P)^i<a,P94C/'o:+A&h66<<aUUo0
%N!T-`PBXb#MWs$%Uter>h]@2onc_atP=H-Zm`@"l18N?ZOY>t86Rd4g-N(WN:rB&[LXc?fa,a'E`P%H?*2n#SjR]u]mVdohV_Onp
%-)&CeI=:Vl#_)1"WuN@WPtB0$4dnlJ'@i03.mX][3r/X2B?6Zbp4UuOB*Hh5n`>BV^<+V_%H3f6i!\"Z,VC;S92@;%Dr1BdfC643
%2&WUM\<:e0r9Z!TW^CIUrV55b=8PtoVf.(\i6kLC^O[+VW)H+_<NQ)D0CSm77FhE#GW910YEX*HIJk=kLL32jq"RQWTl+45q&>cK
%)j.SXKod[>&R$MtH@L8p*oP-j=lf>3k%_rc0E;acmc/Y4J+E9oLC`i;pq1\DS%<XCIS.Md-P6&I6/ku4D&f:)iI?4?qU$)A=q7.=
%rT9U/g<A7r3HOrZ[bUfoe(/V`40lC?A(_Ranq;7CrTX@=]r)VN[&n.>l6gQI)^=mWT%;]NhRpR[Fo;1u]2ZQ!BA[<K^t8ZJ''r\q
%>`bKQbG-^T1L#(YoEJO%7/??kK&p><nBl3n]C!DFVnMA9%EIbj;Ph-$FL@NZhoP*MFgp`Jhj/:YX,oL+-'rDlq:@eS*T4d4#K)7@
%]chn%*HC4@]-PiQ["!Z?]YU\%flGX2U[%:]7d2A/pm3YJI.ZCRa1Js5]D(Dg2e%qf^fP`%:JMo%oP"O'5Z</iSo,P]SpDmT&Ufo`
%GCM>3h)2QXdMAE6X.Ec8D;W+>hWV]E9gRukJD-[/p@*[@jF'TmLL0gHUsJirE;"!U4Q67#5*!9oI<#"5-3[/WRhtQPccIhirqTdm
%d"k95FEgJ;M>[)<Zb:ktDfCtkf49`u,pI%(24s984"9h*&*)XKQ]hPspYg>2o:ga!AG;0]lU9<)if&(fHPPf4n,,'<4"m.\=^\d-
%+29Ta-\9,raQU[4$fD!-GJEaWq*0)oneXGFin<>C`34VB0#fcl".3kepZL+l/&+Zbk#`DsETIGh9WH:6HK$fk]EXh7iUXV<);,K6
%h&4][0OKB*V=/p.47@Rk46t"H0:fcU*`(LlQ;+61WO0Lt"E1]_<B%f+_-qU<4FR"oo1q$rJ+*@9=+;\6D5Eu6R3c?XFa@E@>c"ts
%oVM_0B>@ojGU7$]hga&gHh!=]'4"dod10K.jlHl=l#/bSii1Zh$bi-b&8%Bk!OsqY,qiL04sQLZakqs30EJci=H`S/n;QQ]rbrdc
%")qm<9A*=t1EuU9CZ<@@0aH.cBV00:gVXqj9<kXb<(Q5,F]rM^ZqDth0O>(>im2)5=dn@OBU>/603efI,FW3"(ja(&oVH.knsdEN
%U2MRu6_ZXBm8C9T?%kEdJkrj&mT<N=Cci^)e#d>2=Q;2@C?p0]Eq.UNl^1skc@GFWcsY1/SJd%>5%[laV(GpY4r]*!JJ_jKrOjj=
%997s5Sdf[f4W+%N5%`E5-0m&Ifhd%,0j4BGRV(L:+J3OGeV!^ic._aS=\N^:=rjn!X5MO\>,O6bJXN7Y?s+@NiuV_IQ(]^5JNXrU
%YoX=E_>N$=PG,s6r;LNrC6RP:k4Tq0PRL,ZL7SjJVhYqlXVj4Ol!RUh2l>\c?-d22MD^r)n&)Ls%F?`&AAEF9BT#*5*QleM%m[as
%/:$2Hn/9V)C7V%W9L)rcQ6a3O4<s]W/n[^s#G>@/QEmQqB127Rf#/S4h_Z8_8,ICDg)egi>`-K%"g_-N2<'2UZ=\Od[-!U=,%d`X
%ZNjM4rkjf605KCJ3fR.*SXOcN!GGPP?>,MR<2N*q%@Z9c=?736N.G`M#;=lcm":!$_7#LS^i%I`Ff^UF6e@A_qRX?8H27*90E80m
%]"Vc\f3&N_O-s@PYJ*CB?EkY+BA&($j[jgqhoOh>A<>nC492KgZ^hS-KAX\)DY=(p2E$Aqn2,6VrRe.I=cMY5P>>P7o@<W:nCPFB
%&Nt2`ltALs9k(XqUGXS5qta3#i&>,8.lm-UZGa2a#SYR]^?qlV#/6)E4.oW%21#`rTXYfnJ=cF)`<Ta7Gkn\lrpo3L+5;o%WU;O]
%,c;XZX4(^$NR%&-bR9.4@om\%@Z'TcQ0l:I!:Bbuqg0X_D%,59q(LOVm!sef+o;K9=c_[>hkW1prq-6hme?0Q3D)Y@=*Dt*=0_Od
%;#J1JK/5I[b.'(p()+ekOens[HV7ED-;g3AL!Al5SoRrnZQ.=dqQ[/>$IXntfIEHm5O/o0jo#.-o);uL+5_LE]7?u88pt_+S1P+c
%L<_eWNgpsaf6To]R2+L[OEsmXd_#Rnpa0[35I82[liFq,IB]q!fN.PGGcKh/)6TG9;no+amqI]er:",T$dbnj7hdeNf&E1W[kXVH
%4Wo!M%i1akDR1EhFaqRYod5Pi-ta.\5#*>krE5"lSsg#?_&L?P_/EmQ[sC=/<Z`kT&)C8N[d*j8'qUm72LJiWEhS1MNT_9p*P6T3
%.VK'*']0&.PnDj;!PqugYjabs>Q*3Sqcc7#gt5./(5Fgtj2@5@o@^^PH%IMZ\us"2_/Egg2g^)HhaS\=4:U4\5ITkVp<3Snb0LTC
%nT%%G=^C<]0W)5!Xt.G/MOkW$X:b9rU$oE\,X9j9$#gtF@VK(=B?6S,r-B-EfPKXYF+mX]C8[IjJ#E+M%JJ5^N>b%E.I_t6U`43J
%g#rfE>s38NM(=uZ=&u<6Q9sT<Y%J,\IH<"5Oaa8$6hOTE$S#4&#rE%$9&kYN/E^%^,/kZgd)SSt%BQ'O1".h;RUA<d4jdV.qnbf]
%&2$L<`u*$57!_C^'Vnnf,:,gJBYL(?e<^R-@&U>NK;ANXjqLfrr=\nC,s]jFY?fG4GS&%tUhUI<K(Sg@WqE];QL[B@Vccc0R'R'@
%]@J).#>"Fkm8-Ls2M0>T.575m*0N@uV5gU*rMUB)9O?(El<\Sub!673jEta9kDA,`Hkpbn9OLUPpm2c7n?'(sW0oH%^;CM[>(FtW
%Uu)kp"r#g\j_t=X$KLL<\>hDq+9u@fJmpPMej?d-f'ScbFGS>;X*/AcJ5Vj5,UMeiUI/!\V($E:`=$:/4*agS(7p)GdbIe/;C@eL
%R%0>V.a26jQ0/'%V&`ubW01-I=0X>Eg'.oS:B?mdWscTSJe8eK]M8k6(lQV>;PZ25@Sl,Pc<!$:W1Y:r[q!KFs":2=?bcg58:@Lr
%;mC@W5pKFCMeAgsmt6_TCXb6Z"NM])p1Fjn!)GBndQbSW>#($XR0Cl.ZSZ7UL0l41K>HcjW^]3SGbd&<^='Au,Qt86A&0Z\18HNR
%R1qI,U5"ch'0mdE4]Abc4chXm<tSur\+i!SB*=B=h"\H[RYJbZ\3^8T!B6XtI9JriarHJ0$VXs$IK^=7YuqY.@B<c?OV-q"W'7iQ
%/`P+!i_$CJ^kpqHZ/$&n!DBlP=TAkL#_8#^;TdYuJ3]';a\Mtg[_T4K==3^ed';N7$33Lo!#VdD!7Xu6@MUl0=)'Wd*T`*Y22#d1
%)u]$es.G-ZrM,ba;>k\:)mHGo4u0FF+"J;k/6t[<ohXX"/D9\P&jC)'7KOuI7"Bkp##J=,Gg2-/(*.=I.K_r'B>HDg;r[]H3U#Lh
%$qQs8]SJ1IBrei[9Op)!J+.B?hFa=ED5U03_NFWMFo_e4;l$#ngH`b[\M#UlFUUm<mOcXZg9=58d>Y>'3RU:s/I1!1Bime8B+hua
%d&m@AN`TSB;6b*-[Bs)qK9/[1`%-F[M+4sb"/<[aX&tA>!.]`*cJN%,%3hO^Q]u'AAVfcFe<],=;g;#Y,R:enEMA%ETcTE/._sPd
%BHQSB1lD\cR9%:)/4*X-Q)5+Qrin/@CM6YR6:apg[,WN&R!)SaOu&^BiRC6JU5=tsOjlfRLY+P'#mc@qhOr?IKZdI$gE9(sY[h0<
%RpTB%T6#@R.=qJqfXeH2[ZkLCZdR@B2]]TW6B"Y=XXd,Km*C8;^*0.6PB>$]rJ]&n=P"bO_ZDE]A2oQEQ4]$#:S_A&FX"=M!rulp
%7;0;8=,YG7Bs#'R")35qe./M!CKSf6i[[q=j!$QtE(u'jO=G6j<_m#K&Y9$%H''+tR,jY@R^6!^9j$"B"<TP6:'dNB-ut7>=s+!d
%DRPN4BeS&A\!IXsqr):U0d/A$g>#hZi%>`\A='3(:Zu(.&tMl(BJ`=R17JUl35qQ0--;0RA66h`^V1pSK35.n1t`$/h"f_2rD>5m
%`O2kd3^s0A_4As?>V]Z\_i@0"ZVMu7d^I`C4Mb\E/-lHSHK]n.UbiO3oTgf&3Dk=0VDC(@L_mVPKu9Q(6U4YCDtN5a%J`bs7,!(l
%Mpf,VM9cus_T]MVZH_c&1pQt+^8.mnCrLsL!pMsO;q[Ws[4g138t%@UH)5,^7A:g/;VOKl-3NYRNIG=jgZJCAfglLu<?@=I]*KR_
%/1V6%+LN)C/8$O6$gHZ>gW>Pnf'fo!<c%<)Lhc!V$WYXnOc`Icd?,c]/2I3Hq"A"fAQj:^*S;8V3r%7P,aY8HO*aGG5H7H'_"7f4
%*ZT_+HoPXSSb"V<_ir/GBsjd[qM[g7aA(_a3Yhg#r??<C<Nlk9+d/?.*`Y0.J?427K[8ofTpb@rYm/Sd"k0!'m!7R=8n(e.NH/.?
%:6pcN_4W7].h#HK'sRN^.L>m;j@h0+(L-_OfKLLfjP7[I=K3K#i:9J'g\1]GC"bS^$23>^1K*Nc]lL*X4b88'Rs#%5MlBC_4Z*lQ
%pE_CkOZ$5`QK^4%+Z?Ge:]hK,ad/CHY@'FnE)jFj(7/$7.,Gb/B(koD.^\rIm'q^YN:rB55a!]MD@S_A0p?=b2#Z(ZZjbRsBl'r*
%k*k=o5a=!2+n_g\rrg[WS/0ubM/HB2M7?EG[_Sk%a^XGa-\)k%qgG(S'R6s+FZOFkkh1_ECnQDlPd@$^hEgPuGn21j,'jis[EeoW
%SN9:e@P*\MZD5@>!hiPKXN2"f0<H@P[@eXHTOH_qRpVuaI1j*lCK0b2Vc]ZkJ]b3so9s9;;+KKt5YtfsUImc$:S?hH!=P13eoLYJ
%>\&6^U[NXZX3LKVr::$iQS4[LB>eX=](#Y>>&b!dW!BnBagJA3b!sXJ"6Eq2+2"@sfsL#OHkX+EQ+Wf%(F=!5gI9MZ=a-^;#PMH&
%n4"1"'YU3"(I`7Oj[H_LfQjq1Is[>p>'qoL9q*e>^7!Lf-#[Jk"hck%r&0l1(+us9fRG:DH59m"FqYh!FQb&P@#7^jOWA[VFtCLr
%9oH60-h4QX'aD<Z(C#7Sb:q@_CtOJ>j,L.XXl,e!(p.UVLb1`GlqJubi!hb&i#>jW;=r49/Ei(p`NA@<]m+>ZT--\5/B8O?VX53?
%^7"X2-#[B[#.Z\"+O>(=duHQ,f<Z_1@5kJ<UZ`/haV#P8,CAtrZ=LkY/EdOZb>du.en#Q/OaS)NDe<EI2fEA>DB.B>1/!TcYqr-k
%2mP98i6?)_+SLQ@B'JK0]c"1n=I^a@mE9,0D55,=]HuLEm*>qq\tK9G7;ljl7a[].Tr$gEm*I/k@>P291L%5JEYE5q[!?&?(AL?7
%C$FC^Csj`ADj<659\l"GH>?jOr9N+ZL5!3m3UYY#V'e4+;@E5:@]("<DITU%kh5[`l[-[<eJdq.h&>4&jVm'Nm2G2CopXejq_d:@
%$T9KfY[MI4HoS]A[VVZ&^mZkEFm[l1nH4]X^c/Q5UZdG4H`Jr(O6Dm`)t4;Rg^"Y.Tp8iV9Q+>%Q@_'#FJIoVCu$La1M\po]4(0:
%,OkohfY$t@n!<'>i#C@`AINKfr>(.EaSn?-oQh;B/J_SOlSks)'<J'L^`+'Z$+<`Idjf7oBm;Qgj&=cK#+l1VLA*1NY`N(6O2)2T
%q$%3cXlU<Vp2[qf(3@812KQYQ<cb8;7Wri%H=/a'h"/d,k:!lL4U8W.5F6O'/Edk@7qTr%4q5=i)C#-BHi$$Wq"Qcsr8tDH&EtS@
%CdY+-5CV\cQ,t"S;BqI;Sj:0T&gXoNjDQ1^WahiHSh5t72?<i%=0_'CiFM%n>DOW)>2oo@H^YbT_;^-USrg0MX>'>)'=oF9R13Tp
%6sC5&J6A2'N7?Pf1_V?VA(;>[l9m?U.-qrn!N@"UJBLddH_3?<+d]>%6@+Q=6p(1LE[bI+ARMX*982*4e4YpH6PsU(Sn%gA&!AaZ
%Bh0G$2)bTJmrUhEEB<'_QZQrmp&`cmQ.B%dKX(WP!htN'B`MD%LG@YRNu"82Mc:_9(0l_N@nA9E)g4mp</G<<6XNrp36jRMQ:]"I
%3WL(US6B0<a.Q&`\?WoX6[pAhK/=RQO7Ls0K-'%+j(e`;=tqfGS+;XW$)^>J@+a07OqXg*-aX,@PRDmF$]ZLbrgiX9K]'k-N@]G=
%`em\`#;.:_3[ZtGksm"\1U.1RbM!/q5YeEJ/B4Nd\3X/cZJ,7ug:2/u+PK2O@!#;@)@;46&Nfe\1'U!=AMiji<!fQB7LGS]Bf.F(
%?n'>DKX=S;e-;hkdK540L4r&'KdVus1#T:#J2&*p+Atd`U]o_(oP^D;60HKhEnL.U@m=R^b@9eF;p!u\>KhJ91uE'0=h7!>3LDi`
%Bt6@8f%-(\)+,#Jc+=7pf0L%"5aiCYXj@PI%A*R(`EV=G$LAaT&Hao\(oP17S'oo;D/A,CJg>?/T`S9GBI\=1YgFp^X_91RW2M;2
%2o8;iFbG_U0!^rSSiis1_uq"Ie:55pGjFW12a5'46bVD-0[lHEXdr9lF;RK#%Yu6^:AlTka"3'.IP@uaFr!c*OKsL&0^,`0-tdTj
%=f!=>*S0Tf>Y(YJhm"1D_*GIrHM2(X?oU6PN3+e*82Uc.o/4*;=]QI7%^a>U+;=FC-uKC5Eju)MY`PqG/&eH<g9e^I%KUuIECZeV
%Nt8b*'kA7k(4ks-fQ1Rj$7%\?%:$qs#".LQ.l3K![AOH["EBBO9]%DV[8/B:%tm=^#PTjp^HU!GO&[&!J7NG`3(+Yg[lQ^iREPin
%&2nIf3G%5jbp(9>'MJ^!#%>G9Z.,t2[Y5&UG$5=T%p>BP%C2O[6KFbhd;3EejA*i%GdI,u&c`u:gntq-Kf0]-%SR_8CZ+Y2[QNsi
%$rPC;O^/lRNc8am:fESD_:C6e9Yn8j6mN`Cq1.6:*HAF4<asZ,N=p0,itLF,03iF!<\_kJ0$NXEon*X/,HocN[Ze8^Thc;%<nMKq
%ChJ;jk49^u[7\Cu[e1YKMt'.'_Q?ma14iC+cPahl6ZAiL_CYj6+[t.*@b)@:+;i!Zm.0L2YHEXgZ\SaF"2"gMJIJgujTIbtVOq3d
%]Jj>DUoAW'+DtV23=MuB#6I4rTs>Zt,(J#%5R7bVYoFscWj'ZtGj4%s*5FsYc2&#!Sk'Ss].ak_UbPn;Cs!Jt0P+f5i_,AOGj,mT
%5-E!-O=[g3;NlL\m0,o<8<Hn`C,,RFFhbZb_&Es6.U-R!e,0Q<$/98)')Mh;5q[%_42Kk'-q,oCBfXBnQkp1HB;&@g@&.\%(+Bt5
%3@euUG-Sp!_[CMrbF,Wp+Of:O^lAlK42g8p+ecePc*qI2SViHp,ga5(=r1:S!?3V1MHqrb@Y:.cYZ!d6gk8IHI$+5\L)%,3:IF+p
%(KMG7P(eh@cYs>&P%Diu!_@=jP<``\nc6nZ26a5%EAbq>\e3YR@@_KbOQ28a7RSlTGTHXoq-c3tqV+nK2eFejSJJ"WAi?/8Fd3-i
%S[at@@TG1jCKh<`)>aou-'eA,=X+.O7s:=kW,Z6Y0djstWL6-b:.4TpE:\lj,(R[%C''C1E0Mf>Br9_@-lCH4W4,gB8>M01C;5VP
%QM@Bl?"gmH!CTRumA3>\7u3PpRD]*0RR5^LT,n\s_5gA+Nkr'.n?WF#NT\QLM;YfDDj8e]AH[;jj+AA<NpS2\nR@8cDu@&nMaBHH
%2DM7=j:uk3Ll#)s(.=4I":=<1Jj*>;peC#6+\"_s.0nKo$%T(,Idb[n)%e1AZ#fN\Z_&\6l,]Ht3bdku<PWmZhg!PD@FB&m#'Nt`
%66C9\4[;)lO$^$0-(OaTTU7C?-pTR;Y$Nal"Bkal\n$u3:6aa*$te.8h/Hb[9RCrA^]=jF5cE[A@VqYPD",,Z'lsYYmT@CD`AX//
%cFMkY$4cL?UqqP\4<H8N,6Tol%l&_/8aTDd`]Ou7!Hma^'-?Y/6i(&!%pfL"PSokQD=QUbgqropq0Z[%mHm<c#9j+FIUs6%]ciP:
%M;0,Q0MdVG7l^PPf@7Nci=OM;!<4dY0bYN:f;Jt@2NY.^9hn#i0]Qi88khj%ZgoBBSkCYEdManMjpdi#lnh*>AMFG06IInr3=;qc
%4&sjAkrVe]f?SaOP+>to6\K#bOoL6ob^=_@&C@fu$;)F$Zhh"JDkW&&@fs$3KqfuhH8[KN8M@]0d<NX=1E4PJ56Sc*5,S%r^TR&Z
%5ua.^"i:\'4U#>SK/\=np'IC5A'[btXdCBgUq]1S3GU-s65S2ugDn'T8<?lj`.BU4Hlhu(irq$NThQfQ_?+^ZA_@&LCcJPY@!&p?
%5ShinB-.BU'jA`p+5hr+1Ss*<(o&(GEDXHkpnm?_[;@?^NI\J]3'A"XfIe.:U'r7j>Sc[MTQY?h=%?[Ob!*ob.u=(YO/''V\E71^
%haqOB:$j!ha6?Ro3S,%n[#[M]&UX'MgEZE0k?,O]#V?3!4L@;.eD*f@9Zk4Wp+%f3.Nq]W&fc1K*[M5A"'Y.RdVsT@dY8c1<%bQ@
%1JgJcZV?\mFV+a"+WOtc95/!^G2PC;YA8"LniDFXTHO2dD%,t<EsLItat?9bL6Q4_\sBd=Q$0/0I>CgS#f/^L4b+HL;fZg5?HflD
%`'@4'gpR#?F9!?npa@na<hcdWfnaj*dTAgLM(N=tO"W396!YTW0Q^-(GRU9A?ob$3:T)m/418p,&GtYU@/tuVZEh&m,7jameY;;N
%bZEH-g$uPmW)hR4#5rTZ2`-Qq)s8nN>maCQNCni?dZ/YK*Pj3*1;('^K+l]_J(2\"$,LXD`oNXY]aGel)d!AY0Go<jEl;JG67uWd
%iYin!=g@0GUcHi=0j_e[<;PmT/s?\Ddo`kZ+mbpOE>U,.8B!2j+!-e4Wl!2sDnP;$Q.Tl;;#CWPhQZM%d+N7&=K(4mYS\mo=H3ZO
%7u,#>"@II[gguKdlpc^;\Z(/uNs9#r"J:bk:.NA8iPj^Q2T;!R7\Zren%R``Vq6(L+L(\H/f_6@'.8fNR_-9Q#N]j]a?d'u=,p7'
%I:j&4h8Gl5,42T$cp>43\9&uurq]A1):[uaFlZlJoc6+BGMq0enG:EN+l_5DSZR^h%6'>:YMn]-@/arRH6e+AqT^,gCVR<i#K<k3
%n3NK.]6kkDs-c\)\P.![[h!_5'?AF*'[VU3a.h1*!6I*Ulaq[X(1#f(,h(uRDP2Fdj1:8D/)oMG>XC[dSO*N<G&W@']jh>EDW2Rt
%)\(DC%\_Yegd?+eA)BQTo[$$;:npr\%Jt#e62)BgXgL;n;'Z%nc6BelEF!dN%-P#=7WMdFhdn(>lafh9Pe+T`#U/t%E#d!UMX.m7
%j>+cio14\iG97]E?8sl_+edC[S4JX=f6&=G]0+\g,]1Vfh=clCiDPgH'%_=WaXrI"\!!E9Ft?4iIFlmTGIF#7#+ZS+L4cJ!f6/kd
%HAn%ZDR`s#c%JF8Fu5o>9jCCjmeY3UPe2LYBhq1ME&t[Ok@STZ@J.#K:NkOCojlJ931km!lai]bl6ZuhR4-[26-7bbgBf0:?Jc37
%eb+nhLXZ]U2I',]mQ%*H]V\m?Kl5h9C:@lZl^F"6/D#)@[<jTSm\q#jCcSFFW\,cZ?H5V`*IV*M<TE5j4/ui8Y3i6P@f+HN([c+M
%Wsi__<Z@7i#s7#1\e<p^c7>,=FC2_#k@P2TC&e#^XEMMEH;6$%`3\XHHK!/8,KlhHb*!,*SQS;&Sic7l3u\Y]"3r.&iRG0s9\5tJ
%bG+:URaJ$UDS:#P3ps,p)0Y6+HK!/o**jt:"':g']<8IJV69:TP']%;G'L]>k=.)-([c*"]nGs)[oYr#mJ(FKF`#`sE8oTsY8?W^
%`;TAGSIGgkJCesqU"E)0@#*@Np0;#ZgprP'%)m,B%[1es42`%`/XMi`j>EK;='bj[F,pWLD$Lr9*P0</]q1E]DI6](9a8&]^elGt
%p0D5p&"R89SbI^FLRHZ(mkPPuheCY5^TQ<bY-2-SEH\Yr<4c5qo9WfWGCKAWUYXb@h>?d8ZiRAcqtRupL/=67(N)3VE_8RUFul3n
%U]2\=Zhs7(hg*V_FL$8Q.iCQts4=l,?@2A+a!WOsq.jqn?97lg;>?Sama0#HL\ZX_jlC"NoDW+@)dm]OX'NUUJdu-M^%,o=6l(\I
%Zh-)?AtJ,Y:dn;ZE+css5V9a1g'XGH.-u!FUXpPN5'c\#GQ79[>G'^LiniF>qr6J`/$SCF)p>bqc5P">/etgOiJ.U1!2u#^)XV\d
%0dQ9@;HfTgEQte,nZEn3:]UlM'F!kM8/_OuA&/Up.:-HENWr,!_IoH]'HNiRPo5G`0.(\GiVe@pFCAaVdRm/&:`hRtP-G*VD=F:I
%Sck.8;kO:B(53uN&6^""#-+fYFcj<e%/!)_$mQS,!1DuHCCW&8M1ZK*BnDmMH3"+=!I`?e#.8O2C5Q8\Aq;]\ah?#!4@n4/Ln!pc
%5Kq?gaLf+aIZBO8nI0D"5g2VLaTMg6?n[7';JQN%\>u/-Xpo[%Ji=D4"AQ*.F4XU[VK7gt-f9"pb<+-RjOUm'?,?\pV&$sn5RS&3
%3]ngJA!RU7X,da3D8aK3o.;iGN$:V#4Re5kU*DQ-SS8:;LOkDH6/1bf$;j9Y6_!2k``NTf9Bht52K,jWo,e_>4aK[=E%)4XCaQ'A
%+^oICM1'p$d+JnEN(X4DT*XFm7gbg1r/<-:A-uq3O]ksV2CK]V!brs1>[\O426B>CpSX7bFg/$LbSR5iVo0l>W3%n$J\?aiA4ace
%#D6J(5aO22&d2/LT;F$`Q.GBq+n?fH%-j'nn6/:*_<mZEAE0Y3.3NEC4=b^)\4)FsN(B5W.S"-*=:>A\IMHE[jQ2!$U4<f^0q&*X
%c>t;n>Y6K76o%o$jUF)i3C%\4A)\,P3L$hY'\jm9jsWBt+NY8OB1cYLEh2;3blYGGd'0nM&(_2<GP_bV5kE>+1Hcr.l%'O.:j?`B
%U84,QhtVJ>rK&@U@%l>r0SilX#1`CJ?sHnC%rDA@][!kmk^;5@lQh;%K7PJ@7MCMt\hS(V=lYmYFb92/3l+VrN*'GWg"p_85"(%k
%"C2SPU*qpoa?/\82?e_XS[JXm75nNVCThS3!-UqVK9?_hRo)]1hF?NI%#Xa`i!lMA@Nh;f#46O$"C2(eNo%P#du5^h2L%4'on[)f
%pX:Tg<DqO!\sq'cDITAqD:I'SgPLIra(aO813NspLF_(J7<3aM3@UD-K@nF+Cnk1OD:I8FO%Eq,1/Wo[348*OWi2acCY2+;74Bdm
%54)4)n0T!8AkEMIC!mp.d3DMg)q.2(agn]AFquqlR2WN]@o5ju+8fu&PTl3a*q3-+99[r2N?3jQaRU$iCH%Je-*uQLC<*&@PHA74
%4Vjkk''S[Z9#o:)Q$l7>[5;S,gZYmjL!P]R'UDW%KBTnuN^YNo>/N7E,YFVkN44.u_?B#m5,F,TRS41FkclNNO5_4S<RQur&ZVcU
%BiM;C*fJ6B_F/#t4ktqlbLWDR,ctJo4dOaP/^J82B%&RU^Hp+)_:5]K:)j41[SfbtDOQkh74h5;__ufl8p/<5PaY=q:hig"PLcst
%*f3e$j]P2ue$P>h\p6nq!dZCiFj%+UlDA8E<RfHm2/K&.U"!t*8u^W'[2k0oA!j6()a+t5]&d'eFjm^^.V`\G)Re%';6!ilU"!nI
%L/NY-R^@fdoLP48/^I=pS#3#];+$PH@2h?FV.7u\K^,FK$!#K<1b.,\O%#p`H%o)#Bc9#AC.Zhl[aATArNYI\AnIXDdZ2UWBsK*O
%X^N1!)NM1i:6^c5F.uW299[r2N?4#+Z/o+\Fjm^^)V!322/K$XU/\Ta6Rft9\eIB<@o7RSe/GdCj%sKDSu#E*VPVe8p0=FOCnjLp
%</'0skn'<tV2EtoJC^ra*fJH!p*N+]fUN4Ie<2X<fE@7(jq)j):)07a:4l`5["`Gi30^`)(WtFJrY1^DP%o9H:[sWD527c,+F?>=
%<Gl"RdTm!cLa`B,$ZM@Ve$d!Y"!`WjU+mpbX//Ab0LK(cHTEA1n1j0@qQWD*-`G5$&GXKf=GRPU`+EQ3:32Qd.InIs.!LGc`!oZ0
%YZRAplZTi9;YIYAIKcpI`gf(>6tY5jAktd_\J&OI@<IQ`J33nh(_YDHH)?,(`ZoR[=.#HJ&eQ4j$D3c>b"6P+J)lkFS]g=GQe-X<
%qrN@OIQ?JpG6_A"BTL?-.C\C/4,58-pMP4?d3Lm\P,(0"h"e!8^N8StdH)0O5JHlgr-%o"iIf13g+OQ(qnEXom`EeIh>>r^O7%Jm
%Oo4pl`Abc0m#gu6do",91O%WF"olE(9j_Qi#VMEs%Kqe]Q2fcP.5[edbpA*t)pn*o"(Mi:oX*7/eM#pn(&mgQacG;)r8iQd+.p4@
%at#,P>^Utqk+ft@na0#e?C#/GR64Jc%^JTO]SS@shaI7_b?jtg!,\BgQJY0(O78W(CIS0<b;)+=5TIgid=sMM\4^(r:FkqbD[B!3
%2cme[#m;4uMGC&l2eGd(>b;?CL,@U$d%KJ%AM)&6$d]N6UTZt.;1R1P+,@biU8^(<;C/SKjARE0155H-4C?J/#Q%qq)JsWmYhc`f
%>tjW00FL%3U&D:,0lko!r<+jT4ABP^,3.so5u82T4KL^b'YHs(Iu/:bV+HJ4;79[s:>hHV(:Qek5s*=),X#)IZ=$#nRe:MZ"O_mn
%/Ec]<Uu1jf9HQ<+#2Du/7^/<<LIe%Kh3i#&]r76nF+'^@Zc.A23:B.HT>f)/Kt7XVXNfGAr<^>0L"`b,8<60+dF,bP25c9kGiR-)
%H&l!G.5)I[`SHK]Acg#bnkSU!\1Jg'3I$1,'O8->EV_6.CO3EAKa]E`pYF\&U0oX5-_f$W8B/hZqh/M@J!^Kb,l"oK"u:iWgklGc
%K[B"Y@rn'V7UL,*lP:=i@mRm*'bGhiknN))Bk(fpg4j36aeAfE\"^h:2A'QBpT[S7ks\*ZXtL9%enN&08EB)`MXEkbOU@K"9Q"O-
%SR]eU[,t?T_Dke#U6,Vi-IjX]9I?'0`oZ--Hl:]nkb;QuC=l"`LATHjYmo^L<KD]0mW[$FSgI;1L'Y+$Bj!KpnUSet+eJ:*Y+@)b
%]tt^UF)a>;[</111bq?aN$rENFCoID"IHjgFX3d])/]->p-,IM+]Z'1@j"rZdI2k'=L@cjki=lTNM$=%_TOu^+gN4;n"pVJ4?mY_
%;ol>(\9fT]g?9X`mDY1u_rkbR_-NWDlQ.o;UuB=KrNNstB<+tP:kOZj@Sn66=r3%E[h'T3$L</o0j@"H<m1^7$i=m<TAMh/a%4q2
%()APtg9GX'5geDHg'+N7Cnk1OD%tpDn)!01:[(u!';^RiR^@fdoN7=f&S<ID\3(qNSlULn\g[cSJ0'QqJuE>m3L_Ec\fRL;.94mE
%A89adO%!cKgGXDCNX[+ID@7+P>/N7E,YE'K/hd)a`?iI65B[gM>E[RAN?4!U;Q6"e^S4[6S1%Ced\Ja:UW6P8.SYMd?]@1rJ4>Hs
%gW7sMNJ=2Je#bI3Pc?jOPU^E^dMfRA@o98S`)(40OeL9tQ6r_B)a+h17[dFO<?>:8'f@h9)Re%';6&'_;S&<d77sPRQ6r_B)a+h1
%7[b/dNBAt\)V!,EC=l":7B&lm9<$&Y9<"YO-EU\q4k>KgBi</08*,jr&.CC!]k,]tNLCcG-)E/h.ZZ-WHD%N"N>f7QUJ\&>`)(40
%OeGb%M5F.f2L6oHNARo)W][SO%b/q&2/K$XUK"(HV,ZQ=V0&@D9r!G[oN7=rBjrJJo#OY-W23($fLCokWCdgsWQHGYks-Vb7Le,9
%d8lLS(qlqZjcM?G\Y<,Cd2KGjXl3<FW`<LhnI9i_FQ-6KBVMAYD=gBqWN"9[I7f^bPG2YJ1,WmC8(s_3NE5U#9igfqeBUUe@2hA\
%4>lNYH)`^SH)dh%[&IIQ4jlGMH_I,I(M)QZmUjto$*@VT4VFS\)B)5-j><)>e7r)h__ufl8lZd58l]n88en`jBarh\Yp^XDFXs<<
%*b_C76"^EfY@/A5ep1V<1fDKCAGB\3X#"N#gZYnaI]_!g.79;];Mn6Hk,;]-4kdWRm?i06BJT2/TQWe>%GU)djse=Z5jb]G%oqp@
%qbiVWX'">-0ND?+c+UBXjo\("]BkD?96YupHb.HdHQbhKUjhMd9oU2cOP%(*-SX'DeSn1/E?ff7f<$jMdaEHWUJ`,QPI^,I5RKo!
%6997O&]f6r(i2WrmdF>BL-r]117$!^W0))HjZ2qi.2!4$T3H$2A$kbQdLY^*GMN:,U*MU+W:pc\bh8IQA@I_qL\<g]>]g4r_Ul>>
%b%FA(o%>nPVI=NfEl2Ju*j^7>Xf/P9LK5C8jZ/4O>-A[Ip%dDs*^BKfI_PjXK.ig5bgn`9-Mkal_3,$Si%2>\=FMhRH]AQ/;UgG*
%Barh\d=\[+'78hNP,,.cl,8^H`T']\OJG)M"gn-[r.(<#Ckc+9KE\\ehRBo#3#p[hK.c5Y=V;p-q@H<5L8d4f9X>LNjCrJ+'*l4a
%\:Wu5)G)9'+W9HJbH]GQ0>-2H`/k\O/9+2mRB(qr'm[AU'/N`=Nr@"k/X+:o!kU@!RcoTe$n3MB'69bTbXa)@O[[1?kE&Hr3Skie
%)-RDgn`PV&AsDYr5lAL"+>uHiKkc[l2.0>E(pNB=JEjGKGVA;'Ocitk#""#c,k80QGB>4r)RDkp4Z=\/&Ch^Sd"q<O?mC"WK=uU7
%EUlNZ!B&Tu%7LRs8/l]e=+cqrd.oMl5opgs"'^lHD`[G-W(iIsH/>cVI7EU9Zqii%UX.8=\SZA:+MTWqUI=LQ.REt^\OI=imA!sT
%6U$""V;8KH'-VWmp15@W;YI1-f[:Eo=urHO`%)IOqbl1jbI;U44_G'CfP\P7s%V`pFHjO)NF=NB.2XCl-LE3fE?WRR9G"*N?4@#l
%k7PAD9!3WQ8=o]WUfD0Q9d(O,")92tD8dgP4`DtE#0L-nCGTA+2AC0V8nCJ=d9bM#d\&P1N'J%Lh_IN1$u0GBKJnrH34!_$#6u2g
%5)X.B0^56P`(6aVXaq$/>-'Y:5sp/P)H;OO+dZI3!U.sH5eJV1P./Q+/ECq\S5:Z7Q%`OD)\"#ZO/4LgURFW0W\4RYD;kAhLQC,3
%32J9G+6Xq2-rs=+&bKf=^bYP9Y<)NbM[):E`"pcL;_$dC_LeUS3M+FK_I;O:?.@/4ip>*rf<kL,g/p=dd'`DiY1qp*+3+Y[FQb:<
%D!!OF+cu34G(Kh7O'M0Ur>^B;i9nGg#?"aQ=7Y(leiUNh`Z(pr`#LPpQ3S(PqBSZ9Y;<7L%Ue.?SPa,H?8u_uU*Mc;U,\R4G4u85
%QDBQ>K$o@;$o&OVF=W5MjuE.=O,-XM>uYNggk]93MQ9>O4G2\FL<B3+nE*@u=*/u"I#VI]VZEn`[P#%`896AlHeOQt0]kAV"1i9=
%!?YS'^%aMSm"CHk91-#PlLJ+MIk5V0UFh!k+f+6'4>mj?o_"jO^^.ip$9d.8(L:0I/?(f".;DY5UOl50q7*^tg+FDcYf=\")X?Fq
%+I@AB0A[fPqfHV/T9WTDj9bJL["\X1@iZ[ie[-pX?pTHWY<9cNap/4TTt6auO>,B+'\m%&mLuuVjY8+'4s?i'#t8USZl7FGStGuA
%lRGSe6/iH-'A*Y,?)a1?7ap!i*UK/O\#;Zk?W!I2ME#@\]s;_eVY0/M&*Y2^n`ZMVM[Y1P$sKmeeN7[fog;J8]M5l:H&m0F!O`up
%`eKEi'Ft%J%Z:3_XA9X/ENuNaD%R48<n-9-S5J^L[P=Z?`cO*d*656`V04!Hk#-gMa25u;M1d7-k3C5]Xg4b=Y>qk/-dDYOq"`=M
%GK&<Zm:>?'DDJW+I[J,`Y?kp>aYR6)dh-`"fKO5J`Z<uNWPoRR3t0`Vb2e@?D#+EGj$TQC\C`&UY-hal[V(1,D:CW#^C1I*T/mkt
%qhtsJU?H'!Z:3Nd)f7-ChATi=S]XS!U+SB02QP5W\CW%efisi*^+'j+3mT,aIFIJ.rsuYQecbOb/X"+2R3ggSG^D=3DF2#h9W_\9
%2!&Y(\-VTSe/%4&el0LmXQ0ftBQ^#Fl__!ag4T5Nf:qj.[&GWL>$KHj6WgeVFTe?(B@Kfg`DgC[e)Z/hD-GWV_-pD`C#?i3%<<,&
%@NM+o.I4o7]Ru=o![gO,VeB`"W3(,0>;aVlc8moSR#lJ^(f`"oS$Zk(D,dAq39]XER>8gHe,I:<*P5&U#JBK:XOGg*81/t_IBrLf
%`dI&Gg0'2he(m>=?f>j@BBpFcD9dZkXAP/o^Yd(91@9l&VKBL>#N,*'Bdp$EJmCu"@DPUA/]RnjTb:$kX"-1t"G_KJ"4L2=Ptl=[
%O7S?,kmc_Df=ge\%CCnb;1'$>qFTr*Vkd7HK_Nl+1:[O6jtNSY*&#YROAie2OQG3Rd]sGr(7+*lDL#qk(Oh$<9V8oS:9bs&nSBf%
%iBZdpk"8bp-Vch^5>LcL2bfjSJC*B>DXY%);]'1gC6!eB#XJ0u;mkcgni8UPHTsii_KBC.OeOOK]8"C$_*dA?daV`@oS^#e:j\eY
%^oe0DK$[>XA>3cRcr4V_@fCJ?KnX$l>-aZI[Q9+:IHfROZBa=![p]N>FCOE7MR:QR]WRa:Xp;UG%sZq%e',IBp+O=!^Duas01XtY
%le$<2A&$eY>(PMr=A@JAkTJ`gp<FWL1uPD!ZC4/f$:2`"qR&VAX`:#\]m(+X</TaHLon0b1E[_A)Pc$Xi-'Ht7>jHGi@X@:k[A(b
%"'2$Dn?8_9Y"/(C.$?F1K10!2$WC8E(/Sj*)4N$'0p:jqK+NuS0'9PY&.a`_@d7#[aV\,)<ibI*daj?^dn2(4%gsmX`rrZ?k<,QZ
%JA`%lU/=]#kQB-0Tai]PZ4:=RM=l9WMg/UUSG*PkWB&"h#$_@V[[WZ&GaKjPmb8bWF`H7nl#`3BpXC!qO?/?H#4/)?eCEp?[aA)$
%4'p"O@aSp=0kkX\IV6Ym9DUHm/#$k]m[_d(oPkG,q0h$S+.2A:pM,jZG+!(.]3EP(=5U]+^hCnd$D'SKq.OQQO:j:C;KPkrpn]K^
%*G`Sad\qTsLr:iYDR;7gm4Z;9M1OqOnQOEJ$]fBO978R1k0;j)CR1Qs5/K>^8J.UrZNX.`$>cWB!QFK[l4DT;]!u,,>S\anXC=C;
%6Np:_]nE<)0XUI&!Z(IP@aS+LOqZP4EKPYbl$c<a\m@4_laTY\.HAB%buXuSqg2nCqno'r.TfZ_cp5I2>/hSN!4k$=\gR'=WWqK[
%XYWkoSH7]4nklI>hfY,#QmEQOVf^8ln'0tY`WKbj/'[i5nWsIN])>E</*kG3a&Z6q%3nd`JqSNdpY/[["-/J0$0+TFLi[TmD%l;U
%/g%n_I#8d[3HQmLYsP+K[7m874iLp/[GR\NY3\MCZ5AhU30$$Se[8t,gGMkKp=%gm+<T#S];7u$SUjJH'.O-Rl?YB!qg6N8ZrI=Z
%3+AF&.bT/]d+sX]?14YFD)<9pQphu%r.+'+WK*=Ae=_OC;o:M>,YA`AlA]M=;O-g=;M,mV9F]b?E@<uIo=7!8[M2d`/Z)Y98fKJ+
%WZ%*!+g#l9V8/+C2r1NAo09-)73>M=8^f)J='5d<ZgY@AcofI^M:r=9N_d&lLTE2Xi\!M-WJe_S0Af$=JhB^)W'7Z4QP1KLB;k!<
%eL+X.*A/1eY3eg/h?4C%O4#eVF.7r3TK@G$Q&`g;<d?Wt8K?a(^Bb4^2W%i$4\f[F7W)B5j*7]6if(pW0,k0b!gtS`M&VRJZtgK!
%hC_E1lq%6Z'cI+(Uo5J_k^#&=Rh2,JHLhEEjA@#G\]r)Vd%+^RG0=>l[^@[7gY<inZq0Y?7@Q(q\Km`L;N\C)a-a^2<GUbqqlmib
%3hU]Y_iCbSHUca?PPmdL5k<&E.;O2$RqKN]qes-\BkIgclKT#U;4<`W>1>[bg?,A'lL6SZg8Fpf*uqK&8eY\XD6-*GWn+iOd>oDS
%$YjGbmc-u^F+n0\"[Q8H2N,WA&iH>R:69Z[f)9a2f$7idHftKq]=g-fUFUtC"K$6N=9i8AQ9/c;+R$<N7F(#2kRNWZYs)t`JTQ9\
%fmrqa@dI0p/>NO5)=9jsA]recN^agJ0cTs)4Y\IEF:e<FAEV/pg:Mb9YO+mK*F1@[b92V(XZIQRPi@5Eil_HnP<`C#,j#qJ?0^[q
%8$g=uG^!d.`s8+&?t]%UW_FYkXJ1>2X`!c?^UL[p4`UW%nI.0j+nt"1d'=kpLbfM2!lGc;"VD`)RV;,m('EiW=tD]VOMML[.!<EO
%WQ4`\q-Kq7=N#':#S#RZII%ckfO5&Fr1l#a>dgC*+V$ah_)aOkgK-FWqjYg>3'E(3YCn.R@Xg7?hC8cY*aCkdb:UutqLg@i)4[k6
%VIaZ!WEMWe*:eV<rj2P\#m2.H6d,5V)0d;nl$R>n(b;kV0/A,:d_1NgM]a)N.Fa%dWPBu8Z&73e!*!J\6,M'D11_<(Mf`f0K`82-
%^fHOD;pL!]]k]]so)&X>VWU"-G$/KDOt/.Rg<DB%`CYYq*NbT!\>qKLBVE[prC?Jh?U"S*4k,Eqp\%:T=n)r7;Vc8c7mGL./+5Xc
%=.\jjoM)sZA<Lcb*RoI15bQk6`+cf(K@1B>C-JnfR@DpD;*Wi%:uWb,ZMDkjG%I^QaL8-_Vb_*oIG"#R1%mQeo_1(%&MQ@V^e").
%H/B6@pO)[b,[p)]&Dd);F3/.%Y4/P(=c1ma$\'[bcG')SWf([jV;L$_K=E)bH@KOR*l-Q(-9.TT5jdERA8@Jrr<@Y$T@f'0f)4-N
%[Y`M0F6f8:Rn6DOJ&%>MGl9J`!al-"Z@cmW.T4g,<H`8D$mEGI?E7s-aOSMdD8<iNSK#9u?GE%X(K-DQMl[m<fq8AQ'^,iHX:=IX
%74_m\Mb\HA^<MC'g;+sPOuUI4j<Z/+G\%d),^1oh[I+JiL#0Ak@2[o)%:j1SDo<X"jTnV(3b$H579"*,Gu,\ZQ7Qk&'5#&9aLi4>
%!cfaBURHlnbhJk+^FW+]49CC"]h1)UHYj250LPZ/fqIYb84-OA!@%73N\IM,4)F0H9R(>/2(cHm3a?FF>Vu2&gphtYSNrY=>Z!Ag
%U;hoC<B'tn[O@:NSC=V_$\A((#+;%b_a%'J<&"%[Xp%Je?97-%rhSH=jn9c%WZ+O;#E&@Y9X\\5o+&oV_E]SM$lJk-c%>?E!pK'1
%m6?j-2-W88gUp,l:CWbjXE&E7%X+MDGOdNI3)njj(Oh^dN-`F+:2:=p4%(s'P?_YEn!HHXEdBtfka;1X)=9I;St'gP)>Z\R=GOo3
%&c)A+T4R]fj/JbmadVlc_@jjAJo%0VL>?IT]Cni_D3'_e[U.7XhW#"Jet]`=))VM+2Xe@K($P,.:!c2lkNsjRSi(0u#VU$1Z[qOV
%1n*58&$<rg>Gb))0(R->U8BeH_]]JKB6_,5PpdQpg2+a6Fh2`iDm(1CR`$^K"V@dHNntjHcXfb3%AXqV!j55JR`rE#_sK9uhG/[Q
%9LYL+S#CDWeEE4#/n4?e&\GIU4bm<,_M*kW*kS"^2c<mY$BZYVD%#Z-81]W;M'RYM5E]XI4H1!PD>?[qH?6392tk1dR;M;Ia^i4B
%W6&k^M*<#A,Y`Xu(QDa#FK"B7)/]8,-HUc@oi%$4Nh"i,0HJs%">HV;8E$9P(aoms]:s[$lf2C"INa0I0dO3U@YM>KMmhAl&$Z@J
%HStF>IE*hRFaL(Mn;r39)MmTIlO&URdL<RYlWN_f.7^M=2I"5,;j/EhLRIf.b48@P-]]cP7=,4=o,/uW*1ijW9Md+hJ6@f=b'NNa
%9b%"H#+^%n<q^cn4-kd8He]]ABh%uadim7549jY-hP>_,ZX"5.=EM=QdZh>&Q!uQnoH5`%@Hma%PZa9bgRfo,pRN\fS9]WrlJb!R
%;"&9TWClOQ)pf_W#e':6e9ejt=jdH;&r;u_"&F#Z5ed%*pUS4]d^+cY@ecteZ>'jog<2X[#r@B1n-]!lcbQ!nk&6rn8RDlUl!/%9
%c%L!S/LG.3kpr3F@\ApL1MH&(YB-R&#d$?2XuIs.L1a;GWf45.^PFdU+=#tP$E?T[ShYL!M#0h]lf]H&(KN2FKEN78aq$qm;7'EU
%UPV^?lHBK]P!!]V]*WW:llDiSI3oECk]AnVdmo4cPH65Y/PP?SV9MH(C`Cf%fr!,nfH"eWau\9NU[,/RpcqK@NEYI3>,0V0>FQhF
%<CPXT0U7nha5#-Jg:]V#@[Eo`L&K4!e?=7[>2&e!L0DX)ltV]Fd,C=.;MG:-1j7_QH;7<^4F>b&ab\r(M,PW7>5$.*Bp3`n=YX;U
%):1[!De[Sh\Qp1;j[47L*":Q/SW(1^lREI,Y6so5=>>q!bHpMTHrcooM9Te6AdS\d;`Zu+OLlA^UI&Yr80b:$1*@@7\@!dj!\7Gg
%\Yj1>Ls2#e12Rl(.YRsFFRNhKGAsoD\1hU$bX/C!M:6)k5.cYS"u=C@BQlZ.AD$Zl^_ShjHoUCmWVTCHO76telm:JuGU^au(:J:f
%@1Y6u2F$QN?,WiX2PmTSV0_9GCTodXD-!^\4o&X7c3-[90t!frCoZbN1EjMEZEEbhT\VB\bU=MZo4Gc+\fuQ&U@ZB/EA?(tL(6[E
%2P:Ldl3:1)]3K>=JMgN5C4jcRMp:PgS(E'Ha8RcjAMYlaHYe]oSpmn(RMT`sSQ&]#Rn#4`N)<4P[_g$hAX%km4c*0@%@9eCNQ\iN
%'66H0`i;1n4?lU-S=XA/MMl'=I#j]@4V`5K>]%g!k>ZN"s)iH9Uu0encg8Rk\XTZh7<:[rH\fcWAPc,#ZirW8p(U5p@fpdB3[Pf4
%gQON)Cuf^W&Vh%J:)TKIb2oo+-P.A[FAo>&#W4&r;jSZuk4G<<%5B_Rp[\AjE-Kk06^22m7?Od11ae$r]eUfWYC]&=0<2GA<`E;J
%,Ei5:`l(JHs3/@`gr!qS[f`2JS1AYHgrgT?)>Pfl4%gs<5_du!m4ItQHIkld5qc/6>9W.7a#QR?mkk9tKW\t4X]'OH*b'[nX,ct6
%BNC^b9"OkjMe3u\ibb]03iFbT2s.ENG\F[`&Hk+jK/1KrOksaZZQYPPFm`EgW'K1#&_CUUk`dJJ$u^$$%FD(<C<CIiIaZT-i,2?%
%S9hFY:258;;.mF7Rq\&Lj+`Tl6])j?I0@lMF*)rT\](G)Z1=E92]*6*Q3/JH/'&fMU%,"2"lUc0ou,G4Z9$`P_`5Rq=505<k!M2=
%-!+r+#1@)mfZ>qWohHM#p9nBf4hJmnZ*kNd#,mAm!3nc965g;Kd2"WUC25W_1n'@?lD\F?G:c%=WG<WbblJ=.['%f/rJoa#F$9!L
%`&TjhQ"=]";u\:l"u>!gB^`+'Y4G&N28!.4:#<)&GOCD"N"bdkA=HS@d&5ER?L7F[)"CnA$/decb(MFO\?=LPPpP`6*B3d\q?UCs
%!l3`W3KTfdc*IWXm3FQ"be,+kfHEL?Mef4^2F&F@(=fdNp"\"gNak3*n>RS:NFS7-nE+f[65lQ'-MQ3)X@36>i%SAm4Y.ZFj-E2t
%OlFVT/NZ"7X\%Nm1hmp"5`X&OBGj@_WJ+WcBg;j-1K!%H#!$#K,A7rhKX`p(8`*p&oj6[uc8eIe.m5kmWrss>IVbJ:;-+$2a]qu0
%=XGC1hh'kapl@">KIl05=!bqjNPco,StEo,HG0o:$W9'`P#doA%XpubmWjAa?PE!Ge)GFj3+)ZQ%soQ"e/Y^J]W#tfEd+c,:pX5?
%JUc9jA^+"+S5XGG5@f4sF.dh@)lb'r`A0eT0GkAqh=tTFf&kc/PgZ&gd"UOiE=rF653tjA['kOQ7P,soBiUo5LL%UTIQ#L$,F:ak
%rEn9+'dcO<ZPdoT'WKB+E@)sU6E4^&[+RAQ)M(Krg+"&r.pGUOOOe4qGX1GTHR7eqWi&u'#3t#`miq3ji!AUs+Pk_(,K%-RA0?Gq
%q!)119b.:ndjee8bUnFP-,%+&fn1bYC5gYP^V"I)aH![JFmjj1$GW.M-Q3\37F#7).U]J?#n-&.@0V$FMd+20^'oI!id*et[]XWL
%"kV&j^"dE>?ujSngru3(Wi0A*Qu*Vg'M0=`gDP!&3p$VPl:(!rQts;?Cen"%gAA6?R.9l$NH]c?\U]!?YjSsP8QN+'MJmD81iDK/
%)F[Vs;SSq/20qCkT&S"L+JFG23-H7j*+DVOgSh+1r^="I$XLA!$j*<@)jjqB7F6+`_1'H5</MMV3jRZ,1!\.9-O\l:JZgh.%J2dU
%XCs\jUB9^eM08t?/!bFGjXZT3),CGpNDHHl,+Yf^Sg<n@_Qd1CAY1_.]Y/c6+VhS'mLK;Z5h9q+i7+$88&ejX!6s3'e#im"U=L*b
%"1332G)oJM/[N9Z><8<NEQL;a"iapeSabL<W7jUB`j;@>2tGs2?n^flZiSRgT$7;s6Ahp'2[6Ej>*e.APeQh?9IQpoptXPk\S+25
%n5An7R4m^HTX,;hHCqC'@u\O:M@1lunf!MaN]'4-)\:Y7Fhj=+82IHqZY$quf&g_Kb8M0pG\T]!lc;=qh,6R7ajKXL3;lXSR;48c
%hfCa/"=XH.frQV,1oX;0;-Ulo0gQ.71'\'B@@\Ik)IW_\a6#X2Os#HS+9U+%-i?lgS0%o`e\:S_>/sVZ$eBcR(cNs#6YjFP4D<sj
%.`C?I$#_L,F>ooZ8C=*`9>#SH,NLN@6(L:%)Ma@15p-QmK(/*[Dd%?5/;qVW@aSL].O2p?([[1lkea2\)(7_JjHhPdQ+!#!k-@8(
%)!;EDHXtlLVdr7X`JT\YBl1Q`g1j.'3Bt[)2C-;(gD>V1"uHF8l*g"iGe^@[42@#bNgm.f)m[i#Tk(s;\WJ`qM=5.:9cJNKDTmKT
%A&k[$3a<VVr/U.iSHW_W_4Z='cf8\kFX\*R7A4*D;g;j$GQMV@C=1TDkk;h_6d8)%Un^JEY_LX3ZhKU3dkf>%nGR)i*5[%_A&s>_
%E1!1P2=*6e'cG%@W&]dM?bL&]6I\GHd@e)X[<"cPfLAREpF#3+b@hHt=X<Cs5`q[(?MQJjkt<0]"'s!\Duh!do-%G)XR3nP(DRjP
%eUgC>-@o9`T7d]"WJOPC6\'RX`K7FRk9C+b,3&qX"h\qE5C2kK,"4sg5^lmic2XR]oDNun,S`KV>&dd%<gGVf8T-Gdb_(K!LZplq
%''uOM/>UN?g;t;!ocEIDoTl?o4;PEUBoQ@).bBXbRb/E#b@[#q\/E`]4WS)?:QnXk$S<Vr>O;\4KVH]\(#uX^9Ti"_<?7KsZtQ5:
%=(Zbtd+)>U%r#U<96k+j17!0nrXT^)*%_DH1XpcGB^`4Wf"%NW)WjK^!niVoZ*LhRF_#C:U5^q-b#!T7c.gOT"X3KM]A*"I>O\lB
%G*pY!Zlg'f$ceuYKkY+.*GV?m^!_XtpD,[S;FMkaW6R``Y+hINXf_>+^T4i7F@c>Cj>c[i?O7+;=elUqHbl70MeEo=Pl#4\aus6s
%2Q<36DDO;GRh'R%D/3\ed7+AnC"'(CrVO8jL(@=+-2Fq5:$7X+$>@UDe8n1N"/pV_LeSLhfi3cj6]1@-o\><KLD3QkO!B>mhL]W*
%%snd84Ln]%=*kE+IYaDMp(UCiQC_)K;Fgi:@go=!-AkCd-lJh2NI4Td6HZ3LN&]n@/^4lr/.'QZH_DdJo#Y-E*snaYWnPcQP!BA9
%FEf'm)XP)?)5IHA21q.^=kQ:L.3RZ(2H!(cjRHVY:E]m@VK>HSKdc)\4nTLe*:CJ"N)Z<5$N4gf=3D`J;ph+51K0kiUQ9nrNBWBp
%HW$MNS+i%EbZ*3Pj:A)KY#]:Df9Aon/FGa/d77+u=ej<a'kM5?RT7L\-<8PBqKs-.i^dgFUT\$k,Y;Lg=fm)6kibbsY[kJN2:)nS
%Z]lb$lmY@;8rG%9;7$g?K`tOP#:#(>kaRm'8;ZTX\`@=AZ>$CT9h%;N;5\6%#TPP:#2dljAN]e6#J.<b#j6abLi1df*9:<1V(7R9
%&Fj.#%Mf5TE1g\(2\mt*1jdN$Nj;Pg=M3dAO`gtO+^&G'XjQo]Ud?e4ccS!X719Reo.hE-mNs!>9[Fp8TSo,$lBDCGh2-^(%P6@m
%AK]4uM*M4D3W0*/CGiN/%hdC`.M_7I#u8:S;*9$WA$^+@J[D,m[a7nF!K%JiFsET02"dl#Be^@>Hm6b.1aC2bs"`0D`f`+.,]kk(
%H]5S,Vs$09gt^50/`Bc(2ZgEF"Q&I`6B+RE6j)j&I7_mM7VQ--=k7bBP0>$RoEk&,+#UB\\`"3BD)YAU'o,H%XF/[.=eP&_FUpX:
%<s57pdHT\33J1&_i9!fLD71O[F9&<^Tl:7YM1M\%#`@T^=T`)?CH"1emO8:2k4qAJMe*3L&ds\eA3_r7%,-\cV@@uWM5BM\VF0OQ
%aDU3:Z5j5j3bWaQa'9^JOj/ZOhAu,8?1:#H95%VO^6C`o_>0nbc6gZt?sm2N2(GLio[R.LX/_L"3%&\b7jp_oLX%9)X1hT8.<DjU
%6/>f%g6`FGa#25>L-;2d_[=dQ.?0*GGk:503+/<m-+M/G`uI74,.ChJp+3\B^ndV=hZU@^D<Ct<kVlR<0g^qM%WZGCk&#_h,H.SM
%)`9M.7[ZSjb/,%OAkIE!baHn1:,IqK[aAS^MHa>+p6mCPGU0N];`[`JPLcst*f3dW!kK]=+jI:07ksA.EA<ie,dnq=(QC;Z!3XhJ
%YNc=k%TA.bDsVF\mi9Eb#LciGI+lV]1>69br<K\Ur1\6Y-[>8dii5i)3OX_)X>q_(Kk%/i><W9W/Z7bq=)N:U2&0kf+I3<UZZFr+
%3k909#^,)[(_@pN8+KNtRrcm20Vm7,6TXDk=;mMO*FHY9L.,r;E`IB_Q7XGMjabIlm5);_/LD9`^uXJcQop(b4VsuGr&gGMBNhJp
%cp6""Pe)10(UXF$A/[5Wd1U/h`R1@?n5!j-cjXI9'VIJ1lquX#47bA!Eo\q/7#u3o\5kr&L^TugGpBqp(.T@T:cqQ<j2ZoDKcYjL
%I6LQF-m@'JY1W3nCSQ2ePV;'aDf?J3F%m"p()7jSjb`P\/flMogV]r7W>Vc@"^0@=BG!ud$]=,VmM:^)"'])!4"[n.>(oWs(.E!n
%6*uO#(4\L#W'/mn'%<OqRu(RH]*Vc,2M3tZ=.=K1Vbf^qVF8W\92GG<.*6:Q@mF)(A7K2\OJ9uZf$+eWjL&Pa68uR4SoY]$WpM%q
%_cf%pBItI+!;^^#8)jX4fO'-l'f7bRj'GraSL_]+>'^Isd9FK834??L@rJl0:^s-X`Y$]r6^!^;kE;*hUhS]GX.jbGF@t(Dk?@J_
%Ne)lj4YNiRI=motUM)K*B;B2#jh\9#gDCUrE.494#gSS"+?LnKTN,*@i.r_")ec?ci"gBqhEY_[J7cd;0s##a.SI7&1_@cI>jR6Z
%SqbL2,^i2.-$*2kburc-Z&R=^XCJPlOM%r:da2UHrmF`5E/LEq4F>']j;)Lp;fKKHPfU6?:=t'K^=IG,$`VKE^gV5rlkkoF\u6%E
%OOj,*5JiH)K_Std:s#m%j[B\*pQBI@EXhIY5*ESH6_D,TU([F]*Fl$7P&pdD=W-u/E_Fplj-cY2ar*t'ie`%Db<:gnD-0(\s,h($
%JU""WRTk]gRnpk6\iW3I6Tk+m1*_q43"Q(IDRDP#Kp40\j*5T?XVclZ^p>kY"C=4r*?Z)V"U9,;T"/Nc=>)\`kE\Xk+u"i98+,C)
%O>FA)8&l+=l(rbJ`ZNH_e\ReNd+(G,YiY3!F%d(BW--O]aemB_eEnRG!j\/cCI%%reO_?XRQO6$Ntbfn%>4G8"C:^tD:$ZrD5212
%J:go!ii0)l1l$>?m-RBON*XJS7<:1tnP(\XblW"*,?&m%TAN3jagtBM8(%Q=4e`HM5r;<LPtk8<(3^t=)p:J(Om+nuMsOkDdhCE0
%N_*em:sDeC"o_eg8k>N3&r/pjc2A'8KLdpJ&o,?iqpN@(Zd:`QEsCaiYk>raf!5aP<ZAmZC%q,-g<XGf$6iPu<<JYX<-6JF.aoFY
%FS1qi-=g6m2a`G^QjNe.&@p:U*2'u\TCH(0+DIAA%%--mBW>gnB:B\06#G]?POPL?=mG`KHVFSrm1$-qV=erQ%m"sB]>$)K@#+l&
%G_^'>_-jVq&0dCF"\0K3Tt_PbUm;j*hi)^lfH(4CqFB\#:.<\@]aiHJbn"9L]:u@?RY"ci\T6?KKXSN9!sB6oD`9^\ngfEYitb?m
%[ad;,Ane;,a@NO(kD3e9%&)bo2c.BIc+Tj]fdu"FnQEl<gm/@;%(Q]LXhRldqlVO91FbqN[C2jA@@X'Xof@XNPU8N-MDS.?YR7,R
%pE@#mU+*YfNI%;OU2@?,7f&A)R*PD?DbilWDQ/S#&LQ?eN:\X4a?eqa-(g<plCe'XA]0HclnMi`P7`^0Z4^BcrnsL_bIONk+h=-!
%4qpmeVX1k#mhTnml`3nf[3M>$D53t_qsuMAWQrm?Y+6(a]##PWm<:DI@W`Hs0I]lk1X\k$<7S.-)am2'5r89?/0hu'X1oU_P`1Wm
%cf-OGfpRrj1Dpm'44s6R/>U_<TLFPZZH&cZoGA9n.5=p9dFf02;;t,%dh/o4.%!N@?<-FXP-i=nN[u<Vfs!NKRo#;]8:/cT"H_YK
%Kk&an-H6Y#HH=qVI'`bp::"<8+)<DTc%ndS>LqpT'"Oj&^,s@87E;j*>`;DjcY0'*Z`q@?D9q1J\YV^24`.qlGM1n#$"unE5Jh;^
%P.N6Q0XO#B!\@IeE8$-l-j2QZR?WJKjPj,Jkj[4-jJ<2KP$m7!/[r)]3$^njEpB`Yca[g8!TM5"Q;(c[rbD9fI+8^`R\6Z&qfar`
%eZ]Sbb),.mF-k2Ua[%qVFH1Tq;(`].D^[O9V/We`Rg*J_cY8o!d>M,X(?%D%,2NT5_bb5p&V1JogpL`E3onEqbRuPXEBC"alu[q^
%>$V;Kq^tUj_Rn)SV@<DT9,NkT?mF@X5^.fX:P(0Y]YkGkf\8YR:V1AAR0E*Y_Dqo<PJJa/rWjIugWjCp;t[]Y(KDIXd9XIicp_D-
%$'>N<dPr/b(<)&#hCm@h&`bN&?p`&4Bp"P?bb0E4[r<J4Yd:*RGt&!7T=]j\Zni&@-37?#MT<j#8dic]&jP=M6bi&aZu:"Vl)8"!
%=m`IF]Qu?s@^$l$>^)@_q<6:Z$Oi,5'"A,m6Tbh7l<$d:7WU=f2&4@s*FtB827:c&2=[`&-\*_fIHkHi2)VI6AI9`Y0FfokL6dD1
%<FRGcN?5R+UmO6Mb#<?lQBS?cqrKfHp$)dDN&oEB_^3:U=H'9#E#jo&/S3Bcc"-@T2Nu*N]21h3M<sGU98^"9I&fHX.DEBVBn`_b
%i?-E?G3tf<o,WILhJKu:ckF55:t*$nJU_$")=D<f)mBPZSb[H)@Lc72V$/Ai::1DmVCoi^jCcr!qT2p1e#RD3$aeS:qId&ZkgZ%8
%dIo+<<,#'tnq6qtp<FZFQ(aL,L>cR0BL0[Q/[D4t,/"5=omUXMSJU"Q@@8A%gtO?4GaVcRqi@`kd0;0LA8+c/oRe4AP%BpI5.d4o
%Gg+;`[ZutcD9t0aXTo&GrA6Ah?C1q^ATYN)CUCF,'Y>hR+aR,m)%B=XP@\KDU`]="[^0dDD0(QfiPn<j=,qEHpP[0-1:2TBp3Y,\
%VB-a4g,%?Y*A/Kf-:S,VnKr0,Yn(5Wb^r/[Y=RnAkh[oeL$VYo`L1'57B[^[dWr7TOe''$lFg$$G?/MFr"tD3VBN9GW_9d-NV$;I
%VN+>%:8j74.ankIFS$DoJ<:s/`dY!2%q4FSBPL&KiMA^gFMK<eTSqS#?6#*p$p^)#c__bsE2&G-YBGT>e`";P%fI=1_YK;,+I]qt
%o^J3KY6Sgjae@Yp8t#FGg_--nX<ACqRVCbJl76<McaA0j$TfpLOZ\e^%(W4f^sq##.pgpLPWc;hI05Pd)N;O*:_$-87fg_R(L[4*
%[[k7:!-=$:X4[V4K-;A:/eSP$D$GQRG&f:J\1L/dGJNF.'%/JFKFLD;Yg;MG%N&Kg;&IQ4K-:Ek/dp7^P'[VRaMHSOfQHZtY@5p%
%O3j&`.c_&:#?mI&OIjk*g*D\4$jN\MOA[r*`Mb9_.!0s3>=##q21M>(L2hQj-J!bjLr^pm!mbl;eaVgRERru2KQ\5V0,6tqR@ooO
%->;'a9ZnLE3YSf,/bWXi9?nF+ai1]pBm9l/)CiT4gF]P9g'3e-&RK+sC9j-TfL;"4;4Gd,>3\Z-FUE&A%me%f%/-3PYTnJ9T@";(
%");#dWjBL*?-O?X<nSnq%NB`ZC"_XsDIuKlQQj7ViDk!\"4c+_'%<=-QT%Ib9qN"HM6k;c"6+S<f=c1ZJ3fD2!t)`=VUd,3:Djd9
%[;F'CnftAc+;f!VU/b*UlL/5a3.,pmdnk>8<E'\(Ie]ISJ,OU7qRYt-qUFO"*]hH^BVs_/];mQrrCLm-lR>_B[p-'`FdFl&,jm]<
%KmGTnVnllZh&VdpdM-2D`Eo]KPkKkTD9g76js4YB_-%IK#u^pA)Ka3].,&J.4f,5<WtA]01n3g:Q\Q"(fil%\MUQm:,W9Gq(+,tM
%?<D<sZE:^Lp9LILWpcj#`a&+D:N>.PU.&$=;:VYGY%BpJ93bVc<3pEA8R:CcL7+:4d*o$);U/>3CRTRHON-Ao>5[BL0PN!=.=3Z*
%@-?an"I8dEnk&R5E]IRaWI]i@M@&kpX.cPOB^BXHZ^Yr)<"N]mi^kY8G9crs4X'YE^d;N_)pg-JK16@?iDfijM&s<GpF!XEXG^=n
%S@.f+<;uLo'JUQX!Gda-3QH2/?H,m.K9=72Un.]k>W)=+M&+gi;S,p^$IXH@rlZ1EU:mjp9N)lNd((<<JF!OfV:o/#ET3^e%8;9V
%FE@W,\i,<kaaIgMPoao)Q9+Cf%F3:B<h"fg4[(M/$#C_Nk^ZNrpA@H(<nERF/qm%eq4HC!X@\1K]kK0`(9`&3?sq91>'_,Fi4!TC
%eqB&9q%5NL_uj3QWbEISEVQ;_Jk3E[S*6"n/BCHZYZDW05h^B#F<RX?l;FoR!I=B_O6S9lm96k/BWE*.39]h9U(%dmcsSG\".Zr,
%!g+rMT"9L@Cj+Tb,'1(QPmG.>j?t_aSobEVPEZqA$WB_DBf%TDl-Qsd:sKg?Ad5i9d-OI^[%:uO7[MEbNb[9;5VeW0C'/Zto/f!^
%8>'PVQr(mCUQ+p$qM#p[hA7q_XrKDUd%+\UQ.X',+q^b9,X338TtXAC1^D9hCf%;Q4Bj&`b8+Zfl-MHRJ0ouNQgK+.5rg2ZG[Y48
%K_@O9"%AO<_RC(1#p`HFJb3e3K6k5jB@/U@9d>(\DTm0Ccp=C)$0cCTWH2t<]Gp'P6F/lGJ_YR6T8+:4;JjT[7NlWH6g'r@Mc<Dq
%F/EJ05rg;=FjhLiB:@&%RcRplfLARE/TW\^9K*aOjTMGE3=9o[7tKqHIlde<l;J'J(hgjWG@_3sPg=+<HY#'IT_U:43PMCO8?l"@
%1cL;\R:=R8_b_<Bb5jJ,h\A*KoD6+c@73VN>J1JuGdH,u3PBb@GSJ[hE_MYV"/ceUFt&hKh23.g*3:A&0^IC9CDh[?ZC0Z<0R#Z@
%OZ+fuEXQT$TqOP6j^p0m[LB)HAl7bC)L:`Oq6l7aPm7ii>]D9_kk&!]@A8>"n[!X#dNihj&Bh8]C76EdCfF`>Z0*#OLj"RsO::k,
%B5X\^8%_C6fr%)0k;<lXY?<gu"l2a>m$(XNL"J?]5`,QFR1O](>hXFC!@*1<HA?+]G$ud+^>8#oK*!p-`)b@uL@m[/#]Ufqf>tK0
%<449.,^UTQ;$k.=%F4>EW)!Xm\r'7lZICg.kW)+DK/L,K[\W<2A!ieY`oWq8EkJV1d+sY`7XSt\gM!i"o#BstWNhhWs-0BiT)LNZ
%0FEikY`0^eotLc"0jjC?GWKm-:-:D4jdt&-N?4"UUINF*V9/;XTU'q.__ufdT'EVNG_uWcBqM4(1qYX+\'ZF?<$g]qk;]M9KIU_N
%dMfRAj%tVs;<0YQ/YtqfRW^6^1t`eUd:6&-F.1F>,,f^8lmumcdMfRA@u^JT:M)a-R`oNNW*)-XL2HQBlNtn$/8fs/iXHfG9M[c.
%W9'W%Y`0]>oLFn,Vb307WBne6c.&tW*f6e>f8r-u1J_F[hHpd/2;BuFCnjM[WRa'!FO2l7<)LOr;o:M>/=r^S4Zr>C_NVLEp'kcI
%V_r:ca5Z?^ET65UC#Z+dQ?ufQ2L6@7)@KRR]K:97=a@G`O_uY;^,I6,&"ak2p3:jV(f5QR8Kg6n)`4!8:!p??)YJcqoGRrl*BKf@
%n*!Nlbhcoh!g8Ygd>3?72<RlGTjDRL5UF[rkb;de1LbutPD'.K:_7+]f06h+3p^/"g>E2#P;t.S)R`LA_t0+F,!=2c%TaIp;V&f3
%4)'?KWhf?)irU_\BjA_J>%m?CJ&Dcpf1On<g`.P5^\(lSbW7SfoJZR?FE;+bi*cYuCrqO7pa$iY8VbuXNf4,W.OMj@79@-rD6'^X
%,e*0liMo/S?o?0;%snLh;k8WL>t#!L>2AD^6%<h;k!8A2,jNdq6/8\?DJGVh?n%oD%E.tXJ??RifAMNEC>"AMP;%D$ReP[gAg)"k
%d6ZTeD=lbZX1)[^9ia8W9[%Rb:&&jG)TG-G-i+O_*O0;DYuWgYU?u.`OYDX`4N0r+SE`kMS"S035mMsEh<;jEIrELrgl(9imOkpe
%TU\P;[g.ru$E3M_pOI;SEJ!JcTkRA+-`VRHX6ZHlVVP6.gZR5GgFs_h1H0EE<h2Rc>t#!L>2AD^6%<gp5pX7LZeg-[$1P:%hOmDU
%c_67^3+n.8io#@g'Cro&'3eQ'%m=U$%D!*K`&ujAc0@K-Z]MV1d6ZTeD=lbZX1+XK&I-2;BBC@?IcB:OJKeC6Uo#.(=ib^'TY8CC
%]$;,@Y4<+eP01^.U^P;P:=Ue(gJr>,W7?lF*;&tB(E8H8H50Xhe18Ukn,(&ckno:F9kR4K-,F^QQ2:=c92B7C]2(DRGB5b6/T6,f
%m4WQ(Sip0dLuqA9eD4&l*ZKk,6-[K[%<mT?i^6ObTlm67=sRcmmm;-mciPs8qW8]Zgts@6p2CIXYi_8FHs<@PT>jM)$P.&YL-#oR
%NpJjlrZ+8[%Fh\PpEp1'X;Ka0EK!i3!gT?"nWarG6g^/$UuV+blGT".kSQ5rSIQO.%iLqI(gRUh>n.aCO2>S#T8g_<O,MJ>*VL&D
%:ML;[4M-.H?$dg=+T7\.?k7Y<9jm=+5E,kn(lb5b6g(dZ*/D"!hsA_L7bd<i(eB9>$u1g"7V_hMMt^:7PR3+-1rj4/po4R+hrkp@
%DF2$?F%d%tBUV'Ya1;"r]dVFRnNX'LN:BB^5^=XP1L:16a1gI7(U7PET],g+p7#I%$-c*ZmA#dbZ!aNpd(-6r0ZWhPAi/_9+Z1qC
%9-)T2#'Agn8T)2#0OF-eHn1/RVEu1s@SgRsZ=joUBZ+Pgg\1UlA-=@t3Z"&AYG.VUrntcmL&4&kO(Z&2&Hc_mK0chI>V+U@L`Bu!
%SJZo/>I3p]2_ITnTXG-*0eWs8YsS;]d>WC7T/P=m?ff-EBTI!>W':E*DP-A9'5M6QmqR,[Z?a0"bgVPc5-8+GCKT.t^hX`,GC,Y.
%)')Di<Bq$PG1js%K"O2cEF@1n[IFaa+Uta&Z!YV,Kb<'^C#9&u&RQ;RT%b0ld9u?]qJt(fWgETre"4BpM=<ReF#)nj4EZr9pob&8
%')5>td/iJe[q3Sf>3<_r,Bcss8Dbd7W0o@UD40BX,Q:O'G[7,BJ)3S(.3glgf[UqGO:&u:DBD0Y]=ff<SdKT20kPck8*/g_Wat-:
%!'f,QW]7?<5XoBFB[X3"\pac9m2D8+d$TQ!*,%pcU1X-?N>O'=P:[2Ece>L&]t3(26f'pi;>5?]XtA&>h&9tY->bin67O/?DMcAq
%O]8PB\sd>GFmD8b-2RHKa;B!*^(b)DaU25#Z^0K<O)9umd8R@IS:m(GGt"<:(oRu!9nP@C"P:$8Br:@2\/=(S%*_h3[-:3lp;<F`
%\5L7j22XID/TGOD5X@13.%8B7*91`J`sMaBa')k,>kVo+H<J[j)LQ5F^:P;hEt^j:IiUSZ%h/qh2ku*D\/"@r\;qj,B!Q0(8*"('
%9aR(!$O5$0#o7@t1=c'eEmq1J36)-^D>uLknXPFZ</Yeb_GmOP`'B%qK6FQ.]$WNT2k/JV?<inC@o1'KSUV;6-L)F'S^(_Qc"bUu
%</[2XJ]@:4Qt`<bKuVjuHgAj'VInD(4]Ijk(aT=<'q2h1U\_J,TLON"B!!JMe.@.S<.YYBM5X_W"s"6Q\22/ak*2OVr^^tpF>=j_
%QI(C&jg:Pl+/adG#-u]LdAUW'Fg7:`G1H#2.:4(\pdOQ[5aNd!e-Dorfs[T1?"a?,1n2(&cV1+V)nZfh1p+lYon3[]#pQK!R$R94
%8;PPXkOPKJ;f%@qBor*UdM-EcKX[R"K!I<j6%d1p_:u@p`QmK:@SH8.<D%X>1.Pu0g1@6@Cnl'1M-\l]lrO(AOFcC_%anP/"K@&t
%3cmE>otrN7o6B4]=,N+J"taGXl<;q3c/,2YBM+We+R$&](WUj?BKT7'X]dt_M&+&4,:'8anCG'["0#/7TZ5-.]K(B6IiD'nSg`7G
%aU#Fs'/eDG,lH.sUVf3-QNtNcGR\AL$YMh<;94j$W%f:;BWH,0JhS,eE)>#Wo80jqh:_O9[.nlC7N7a<AaM`7_]Y#(Qr_8KN(.pe
%%L2bZO35qaaoq$6F&[C464^d9<]Qn"Eb[^42f<4-&pm5p8cZs^2a9aG)I_oHa#JK@MmJLcJ,?!F5ZDK0>$It3dhn-.&\<";+atV#
%j<./gIOgBk7a&5+Z9!$];t/i.Bl!&B"*.+W)R+3U@tQGD4F&,dqSM]G%<p(@l+G.&I)+ueaQ^"Ll$CG8HGF5P_]\>3LlqYVL=>W"
%,ZeMUKJd^C-anTFc=s(*ka.O>WA$fm;Yt;Xc5\K'-N35X#$YuiBTd^8BZd5.3m#?J7V-p:MA=I*/FqNJ9Y.;9X!rBZ%:--MX?rcX
%7*?A%RKsAZ[1=4cO?'&'FrOe%!kKG34.[[lNmRN/qCkef[6_+K(e=`3AorDKBuJB-;;E:oSg4-To:8?p?#s1IX>I@7VcpscZ5OET
%OQ[dqi9c(`S':`Tr'9^q*6OXMoPH$m1)Z`BUl=<&i,`=3EU<!(`Ba+V'pi!r]kP(<2g\/qeUVf0pAoZ*N!@\9N.P2b(C\qK>uU\Z
%njUgY:8UWQ8!(s5OaO@O)g"$6Rb1nEi+%;KmLGKT*^5pu,X<kO9hm,or)j6O@tk$W1hshUT/l*AhhUS9)>fb"/9EKt"-h4c'8&L0
%@qujA?9CKOq.^j'OSXP\WWs]*p:!5)=KBt-JV+PL^Wl9JGBYo-[c>qYDd`R^gN_B\nOo+48](Q1>Td/pMl_NHpt5t8Foi29r;H,H
%4B3\5H!sqYm[;V<Y.6SU4JMUj863RIfLG,<7HsUi8!K37C5O!.gHf':[rqgh$[uB0;CE4<c!Na]f>33)p0f_`en-tFdQB2:[NmcP
%i3->u+T'c]M$$9pTCd"+U;%]]53CrBpJW!Ob"A_l"GDI2qQ)6@kT>O-d2&`g1fM4)h,Y:f?@t@iN?56FoXS(*Ped1k4JHm(gs;<d
%cZ,d[jB!C_l8,HQ6pZenD<tg7C%5>!5!B9m0`J/U2mXmO7V>#?c%ht!*WbH*O7qUt)fe//)jIuhej#o.LlrRJ&A,r?+Q%IO_BPRm
%e0X-f(Ec7q%,VQ\aM%6i>?9*/l0!nf3DUHE)tF+>)a$DN<'gEI!kj9O`[\Y24^Ou*L'eMhKBgP.H4^2n->!FHKtX0sJPi7e#0g)X
%&`(r8r3Q][$jl\]5".Y%8MCFi9c=M5^IHCpQW.e!@bW8O"o,W49?be/EjQ3q<!#MkQQVoMAMQVmaJ5@Si>fbg:SQS9dD@beQ_uH.
%Fmp(XQj6Cj4a,7ki>TDOdt@?7ettU5ot:dJKe+I\aZOAAS:pm-mooSV]Rsuq[O"7)HHJp;fUHpmqm^8#a-.#<[3acmIYFp^f_HU:
%CV\k=gbJ]b9W:=#*8elp'a.1/XHPFC8o:s!.s+C:@6+<,QP\80@W7StL\J=G1Iq*8olrC:Ai%WE*IR;!0&t4q1TP9;B0/TFg:>fE
%)KR)NH6Lg]$;A/BFa4I>Gn0Ln)=%&<lM;4[op/G3\K(Y',_Ks]B!KXY'@aabFj4pCqmse3gK;'HW6Kh8YB`,<"e*?j];].Y\9p4i
%?$G>f9CQ^J`gri,l1*VVhq\*%TuSs@mM^HKf29t@>?B05)24H-'XU]&9$o\O5o+F/:e_F&GiOlgm$t8kJ.Dfb-5"&$IKY:1R<$fM
%f!ab=f-EA#&piUN5"9e>hA?06'oNqW=e4Tb%qfB&&eT3QHU'e)f%*!D4k^>Zp9W@ljPTgg10Jf!R;l<IH#d>pZ8_4UX(_@;WT<2g
%Aa"W%'?bZL9cId4E336h:',_a+!OXW&LAhYK[!.T:k/WNOgh`NOUid*fenB<ZlTHk2F3FTURaTXEh-,FqbC`YA]#m',RL:SqA>);
%EsG*.O1tG_!*Lh\_.h\?_>5u_AP+'e=%/1q5^8n5i_O.F4u?iFqC.5W^AtHm?"D;',N>=#d$H<\HPkAVMN>B=bUF^Le-><QmfHZ3
%cZ'qHFU2O'qC#L=jbGEM+c%(hY^I(Ip*!g'dn1iV,G%H_L,G0b,QiRm%t`jg#f8dp3P`,,]3U[g=X'[AP3`2U^4AncjOjWhZ@j'.
%dGC+$n6R&fpsuHi;jcL=j)WTNOraTHeq"G:O]M``me3k<7;Bb4c^@"CMVhjqmCcoi8U6=H_O!PBC,XK^^BF.W>B>%q[--@i.aeaj
%HZB`0J)P5q+(Dkeoc&YnnR/Vro+%OaS!.qGQWG@M\qMjaieP/!3*7CLV%Rn=`0T$6\[!mFLEq4-pe*hAs'GF%dHT\IE\4C/Y0hSs
%fPe$QO.RF%cLuO&Pc2.r"..qODD&G:+b"I#->jGqL\Ud)HBXte/fC'^FjjnONd_TUQY>:i]Z\PXXHrA:B:Ii"Vq3Q"\jQqXkY7Z:
%Fs/H-?T^C`oi+cX8M",A2gJT`bF3K4Gm`Z;K;X<Y:L`9$^$G'tAr(bJo\4h&QfTWqn!Orod<e!@"Tf]]Ml%-P.A?md&NDt'$/X]Q
%)iD8Q]_Vnr8hEFriA&7!=4fYWaso_6do0C:9+d9RaQ&WF?!TS52G#(5kdVX68e[I7XCC-,>n<D;GDqsT-q?dM'^3@Z2fK)[jsESW
%nWUkc\-_Z_&>$X+n+)[;S%?_h;>gWt0#>=LGak0BgXK#ZNp8"=K1iFfNS`crN,@RRN/lmH;>#b]Y0jjDQ*F'4L)_3kD$X*hU4mCT
%[^XSfNLoG!aDqDH]Ot?V7W7is`]#%`jR=SqK)k4;qX"p.a[qM3oML?5(.(h82>ubilm<6SI%uTT4Nafc5]MR??\5b0nJq(D_*CN2
%.#T+?\u;BXC\2Qnjb>M]i$_)cFd/i9"9Y"K?#F],'0eK>MOOb!+[1C8hW-&>4:UKNT(91X_b!g/FYIb@hW6*]4Sl&U,Kiq`?)!$g
%oH$f)gCj`.G*#$l5Z"WVnaT9A*[fY0d7<FD=bqSpDi:NsY^8KsDN?DB#:Z'DJoVotO'dM53&tR&>qm:2%f2Ok*p/0a`7#4-g#6R5
%)O?[/G.k*MAg3mPmcPc,:HYRQh^8]ugPP:`c'7"mIMb$6`.MpL/;&9sD6cB_XW#e,H0\[UUCcW'QhNUUZp[C:P[S<-Bc!1;qcSi8
%ke)0"5qR+aaAThFOA4klU.e2Xi5hB.<*[IlQY!m^omP_`4<_I],o0co7In(9GLiFuN;2q_Tu>[R4rn/#2f0hk3BtKo>fO?;a*N/o
%Fh&gLGFgG?^@LNO&7T>oh7BCFChlSPep4j&[SNlWAR1XmEsg[1YJ9)G-'4V'A"q/<<Pd+WLBq#YNT>jE<F17InDEYMM2=1Xd?J(Q
%Hhn^iNokP/WqW@(QVPfea7)cFUU?(Jj?k6-jKtN#aGa?-%N7)<]A@h%-r]@8X5ua<$0C7,>N$:489;BjI\t><ejb0J,%oP(P>s!Z
%\$EBtW%1MPqIV4!rLf3]Xci.d^MrN4MfIh4SbT^Pg-]Q=KA@cWZOMA#nacknJ\^EoSh2M(HB@)o`V-1YKbmi>CZV34\_+#B[r9>i
%e%6RJ)Sj<,ZE-Q?8k8]r.cP'C=dDM!DI4dO</sm9'A>K-\m+J336jY8Be?5bTC:EB@&#S>86$J8IR'Q7a!e*\H*q#j6>WjU+oLrF
%T&7s*2q'2]@?Zg*ZsrA@:YUt`QpRR.4U/>G/$W>`RpVUC`p@GAErak#P._9t1WS>bYMKOE0=\m/+n_dlROHAh?NF=9gH;HW8p1G4
%5J1bnoPS#t$5*SomdFXnrSLp1Z_"Z"R<c34i[#Q@`L(?+!dL6!ePF"t23!"k@nMS`d/!h9V]Q]ja4JMte&le?_8&bJ'RpRpm&lpr
%5$i/>'Lqbjd[rn'[J"C_%T6jq`N_]^8A[R)J9bu*MlH&H*@NZ&k^\5h`*IlT.\\a'6q[Xga']8"TBl:3\H+1A*.m>IeQ?_T+AtAt
%#"5Kl&2f.j6j"`Md-TZ1fU@L4eJ&QH&Ki'G.6)g[j/YJP6qh7%e=\[<?One?m'^rl`&Al<"bL&ZRdt-r6j[&$l,Q]pB.iaH;a@]X
%J8bpoi;C-G0*Z:?f2fLiD[W.V<BcGgA=n.aZ/1FFRX&3*VUt$D;cdQPbL[ml&7+"1aC:0@H5Zl>`6A'+QhoW'\HD^W(V`f\EuEQW
%OSj!+Wf<H?mquq:##R]kHM=SR!DCZ1PGRs*FUgNN['aK@.UH)d\STXH+o?VJK9*"R5`VO_E=HN38%%(4LEa"ZN02*s7cTHI@t91g
%,9l(!DttU8D5bU*`Aq`,ds/*m]uSA>FNro%-T7Cbc0f*g6UolrL2;.)Y1XM6g4-&]E;'%S&3F![rQVajQ9M&oo%"c4aWsnL<<m%6
%+S/4_Sg3cJQFGskEuF&I[,(H2^7QD=D6nrar#^:-FkJ_6KjF)gm1Oleb?N$ran""_MI_DJi?DFH;PE:]r"@3-CoYI_PMe7CcTr<f
%9."7WkOqDPM1P]=rMRiX#ghr"HDD$H.iH#,<p(Kq`bjj#=SU\U+<Q68GmS%.pe]=YKo_ql;L0.KkOc(i?a_J#*D1@Hs7VL_f8jtr
%cbIjCg?&<-hFZc*hJ+?+?LU(TX9W:*,G]jT%h;78?@_#n/?t/13qWmVpm!Qre6X(:rR+t64pVpErld@Z8ehkmLnb=&#@Yd@bRu4*
%>Pn/N]nEG;9:nHDPs)-Ui,*;R*!7J&92Jru[Em?6a:DYt-/p6oWPlJE#pRQ7#JH*\%bPI9Y`9I\q&>I((HA'tT*9%$^?o$V(YOKL
%0#>?.:r+ld;:,Ab'SBjj8H\fc<=#6.<JBAk:j2=P#Rj3e7/e@Pk6;.Y.ko0Y4sUD8Qj7DKI3`q.clBQu2-pFKB`9tRIL5Rb/$$oc
%g/p8IAnN!gmUE&)$H4Z!q\Ul6m[884-l?KC3BGTcG&cYc^l&X^'*fVSEOSC:0$eFT[q0X"4RWYBqt:%/q&t*J(]%B2JC]$;#9O:"
%#oXl""Qf/<kke'e++dCVoeN'D`Be:L[0rQd_Cr`f&,eVR7(`,3D5%UK-IWL04*1Io>l/b/;ik`5NOQVq%G2M4oDP(DFjQ5XCFU1k
%>E.a#5X($4ZJE%\ZY:o$L^ctH8:T!@Vbm"uF$1kIJ7sc@:<-`LcCaFtiqa)kHhn1SZEr##3bY-nk^4P^fi2h6TSQs((U+Bd;_dC_
%!>N'&L6Z1Q$r)34l?]f?6jj]Jq?9gerD^[9,A*De\USK0Z=7b;:om7H'MDlM2+:=DJmM<CnmJ[iM4%X;$74u`]LSeI+BkLidkR5A
%oB/0kOX:W:V0T,IlZsFsZ%5op9o+5n]%W7.4':YaeW?JNlRTu9@;R81Htd:XnW3f)0GWuZ:L?V4J>CI))7;kEb%FXPR9G$oJB/E<
%_pk(EG@Lc/W?41n$/JN6?<kb'@#U%^>?)17aN@]>c.priW4L1]Pd`!5JH9cSp8sjkg\os4c9:H!G?`-A6P[Nk[FsTM/PZ0lKJkG!
%ToJ"Ng)/,/NU]$90qCZNdlFcVM6E*kW9#NW$Go\]$sWTUf!MRQfu-#(jtX9CB2(7:blimg(A"^h;#pCs8JFER65KH_P`VsH[3Mii
%]2Jl_Q&Gh_]+\hL`^E"hOrYf,\K)fu&`S=kMO%Wij,KEucFf&JPOP0t5%`[4B+8P_kU`Te8;RZ`a(Ph*TBl:3ct*?`>Go3aT\0n2
%;j\ubk0Q*moh>uu!?c+a;htWMe=a2mW"[DEB=;?3;,%)=&d=ec_%`D(fC@sq=e6b&;p^J9DpajTb$+Wg#cdq:22*JI"!q^/g;9r@
%?%;!QaYX/h9,)>+##fL?>fTouAt8m8*_5]'9JfIrZ:0A"e6M2,#?rPq&780<\;aLDR$qR$;W<]?N,dU5*Dug[-AXOZ.3MfgJC?6?
%K(J.d^)AiTqeOR4'OpRaTj6W>lK:RoRj+d46*D_3Gr/Wt"O4CP3X6%AerXJ-a(sHE&LgSni>>;*q/[SFR#YC/c9hSO:Aam$@*+_A
%F.W=Ii7b@Mq-KF3eQ*)BWA_PPc#K*56YY?IgqtilUjh#)QCOF-cN6<@/E^PX&^kbKjDJDj"Df^N@RiI,+X5g&ALc;O1WFn[5g_V-
%24d/)if'!(>om^?Zt1oqLfR<AWL#;qa:&sOi]`#RDms^uR'Hn7%[D-n(RLA[)@'e>9_*K`jpT_M7s;Y)m!ahnce',g(bR!O_`>"W
%S0Juj/WmHC&Q<o+9tAs&8aj2AmQO'J!T7I<_(K[-[-tOB3Bjm(JRJBH@rqhUPiV$/S?tQ1^+o-d3dq>t3:\4&"+7%@$D)+jj]q;b
%I78N,7Sm%$k^Ae[&5QS!UJ$<InkXh#r3luCN1H9E@KB%hMTBWVOf@9-SW@-0o([&LcYP9AESJ6n;4ZZbH],-?1G:e/cB<^sp6k(n
%4'hp(r.TjXYr=nJs#>Pc$b:9D:;@%hY:pie_>Gh\B*<98-l`[&U''%7hJ%T^1u5CG>.H9K&FHJ`[Au]9S<<7ilO.h!Oh@tC&(M:W
%ALRnk:'Y`%#ZLL":u[Kk-IF4ppF*d3[=l9[6,_N84pTU\r!_Hq>YkQp'!-J"Rds(W6j_N"^8d;LP^olEnhD<?AT&#$<-]W,m/jCU
%Pt>=05]$ncR#bVo?qZekf4`2KC>P`e&n/?R@$&^M0sl89Npl!*6#$(DEQDqdWJ`"'SujZ_Y&+nh&3o_8LecP*KS7B&j`+piRB<7o
%Fj#)Y4g$P0"Kt<;oU-/<joTe\j%H2(apc)9+,$WD+%1rrqin:2's0b<,/^`><X/-q`!Ki>.d`m)5]N40&QHIS8hb*m?i))^U%Zm(
%Y<rj07f]sU1-':W*^5="]6[-cZ2D=Z_4SYnVLYg!"N`pdDNPGYbG(lY<I4W]5=8LA"T<L-9^IOl,^tIc4+&.p?_E&J"ZdF^p+rfI
%/iJ*=UDKkjCiuN,GgIZ;dgkT'p(YspL>t@V;=.^O41^aOH<TK19mAUP,qh&9C@&m<`11;mg0<6Gr?Z&GrsCV#abrL[75C@^Jrp`q
%<*q8^^L^H1%/5V1Ji_`e\d:n?IG9(M0e:,YZi[,0'.KfA$[&+1*oH>nfO7MN1T/'e.3Me<5WAsHE;j+_=#1-\;WP9XK!rnhr[bOt
%4/>l)"/8cqLml2F7tW*[d*gLbT"+(3g;(AGFQtPK6qS`gNmX(Qs&@%*K4ZmFVjO<',R%:bS[3Qe#"0sA&G:-<#_a(m!OI(!T(Q0.
%@P=Z##IH>.i"PImmo/=S%9?TtRbZbDnN`TV/H$+f5skjAE1Frr"He!DS7h')<-DktPfVn[X]p,/;Em5(5ANfs$WjP85fs2k?I96F
%5?I@)LnQ'_/&@h[li`uAYq*%hiqOdM<;@d?DX;b*V=!&&3RXP+X'+ENZfQW$-eW/>83QSG'80^H"lIW`Hnf.C-'=#Nc)3Ds(oggf
%"Ran0bV90@T@g4jc-//O/4Rh.VMp.;rZb&F#-m0;91]W(2mD9?Sh"qR[Q)p9p+R2RKTX(dd'hEF3tb"Nd/N5HjH0[&Up'aqgqGq[
%p!^6f!PlL`o`d?2a<nJQXqYNXjMDmJQM5Aq?Js(2O`Hi0=[PuCc9i*5qb,5Zb6,*Uf#\3W5D+oI1R^O^il.E7%7Xp@B[_^gO,U#:
%<=;7N$I<+9g=E&2&Fl2_<b"eF`2,/GCqRV>FQ/_LVJN`=dsY&WSDeTOo0[c_EXm!rkO<dMp^gd*Jf`bccf%$ePJ<D:o^3-%?Vu@U
%p7M[*0^(J>fh,g'[R+AB*L#,L>sSH?mO.r\#<oNTFmu*i:C_E:l.-$kE"ZBNTB$Z>ne:9kjX8RT3F\-[@RhCg#&!QiOghfVc&JI<
%iSdFk:Z&)P<o2GN.sa_=p!)QTZKj/)j9gl\?53"G")mTo`%dD$SCm1UT^.tWh4Um9Gl-=Z"*P31TS6t1r9i\/dgqYULa-Op<"b#N
%"9dXVkCf\"NAHnZ9tBeASFH0=$[uXrXP]EMP&+@$m`4MW(3LFGi6Q40,&ZCl?&fDgdSm2*6*F,JZKXB9h*mRpN;PXDSaiDtGH*U>
%WIa7UKb@>S#ml\=eg;6d*.[k^LNRMX:[Lch&_ljn$)V!qh_n8j]:+ptD:Ft?SOe)0>mNfb"RNPWddN>eBcV%5/b;$C<#AdcNOs8b
%fK=@3aerFug1hEK`g)EAC3\o;jQuoe8JNtBdTsXKk]CP)3YQQGURWtg@sm7%5TqIf&N[A0VNnVYirho5n!LaQ66kIVLA`a;([ccg
%X-3ANW/>)`XW&#ud*apL2tUdY2f!h-)C\TkhD`F(4Lc__q]<VUN\qsOSR(..+@&Y:@N1o-B',D;'Lm*HEJrlbe6U&"SQBQm]2O=&
%kDe$$+*nbD<C&5r4U:!4SFg(<YFNd@@`^(.!MZq%+KhiUBjLGVAM2*WOOE![he$u4n+[(K1B1N@Xi$.FdE2qX6>+3"e0T4C0!I!K
%+4N/@ei@tLrKXhZ,%a$:1=!*b"r/\%2$'qCQA&4>M0Cf\SARFIK+\;>!;R1O'd4'<4H3h^<c[4'Gk9:eKo@Pmq6$V7pA1B@UdI+h
%+LN:G?bs7f'f'O&%4=/6m3M4BiNA)`:$[B^@Vp]p9jk[9"RCGrdg)SuEF4F9`p;ZH=4lp:hpNF7icOMAI4F3/@ls,$4[Iim'_huJ
%a&<*HLKt$+cNCS,,,^P)DJZdL5KM15:d-;M)!J7g;2.>S%urpiaGgjpnS_mJ3-F1&&&$-jH'Q^L3ipur]J+BK!-+[Qc]3TC\mBJm
%TF3=-a7TP(R>]4:ZXcs8NR,ioCkjEcAefi,+bB#:7gh+T5C6PF/7IE0hL4?QG.&\40`s\`!p1!/N4XJ?f8Bqq&lHZ>@Vek,Effp[
%G!PjOWT7;Z5:K7&#nA![Q.!<i_\+!ckm*>L_TuI6$'k]ZH,/2cfR`3]'mqlJhQ!D`))d]#'=?0l&W4=q628;#SBXAomB0LP"gWEe
%Fe5jLeR'1?hk&@2&1N^6qaFHOqmhG77Z?/ARp#B"U4/>D=hI6Rb_B8qLFGPbf*8I)^h[\%.=`X-^h+7cdu0dj`Ri/MAeR\?@DSq%
%#-M[nN^%=X[9YreKeJS,m$`GDH[C@pqtBbHD]Ht8Y8p`:#QL1`[Bm:rpD9h"2/Tdh2Z\9N[?N07M/;DG"_?bV@&k)g?Is1.eE_#J
%g.lpq+gR;hgRe%MgWY"h$:,6;Oor5icUs"6rk)TJ>kHe8Z#0O/2u'1OoRj2A%i4m2ADCd4m[jLlrQ5-.HuPPFmtW43B4`%OEVJ>=
%XDPK9(EUu-S#f'ba3HnoG0GHcqQMthbY7]AF*SmNjlFlsP@+WKK5agSI6B>2bDVTkaj,Ih+Bq$JI5"<(KBJ3WCBKs:O_*i1`i2$V
%]3-=(bMRUtp/QUnqN@497W)$E"4;$Y6'9BIlVd=]!&HPG"Is\hNA51p!][LfafI9Ob.eg.=IuLrnM?X[Kq:%$\$A8Q+,-Ag=3XmU
%SQSAgXeP8708l@Gk;RWeMFYaX$]$Y'Wmde-%]&+=]Eg*ZidQA\.)gU=mO'mU(HY/9m[J?X`]@sb*9kDFKO;([3$c!\jn7Q@/eV@7
%>D((eW]f_.Nq%?KdmJb-@=UrG/cE3chLI?98]9FnEes>(]TSGMk;BtV7fr4$`RV\."a>G'mX>MGn&cZ&)oF\GI[B(T(1/GK<gPJ1
%7a##=Fg51F>YFCoep/MpZqn]e0=>MD>>-[r[f?:68u)?cr;6$Ym=5,k5F-g!h4K/R/-#=oJD^@tO+7*,07Wuk5QC'HT7?X\++O:[
%J%pL1nP=WiZete\rNC-hr:BZTgFN."mH=NEn,G2^*l8#orU'(QkoYBLc2Rm;!=q[~>
%AI9_PrivateDataEnd
